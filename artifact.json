{
  "metadata": {
    "name": "@itentialopensource/artifact-wizard",
    "version": "0.0.1",
    "description": "Artifact Wizard allows engineers to publish artifacts directly from a workflow within IAP",
    "license": "Apache-2.0",
    "repository": {
      "type": "gitlab",
      "hostname": "gitlab.com",
      "path": "itentialopensource/pre-built-automations"
    },
    "keywords": [
      "Itential",
      "IAP",
      "artifacts"
    ],
    "author": "Itential Automation Platform",
    "IAPDependencies": {
      "@itential/app-artifacts": "",
      "@itential/app-automation_catalog": "",
      "@itential/app-json_forms": "",
      "@itential/app-workflow_engine": ""
    }
  },
  "manifest": {
    "bundleName": "@itentialopensource/artifact-wizard",
    "fingerprint": "625d7fbdedf1799826edd273",
    "createdEpoch": "1650294717997",
    "artifacts": [
      {
        "id": "Artifact Wizard",
        "name": "Artifact Wizard",
        "type": "ac-agenda-job",
        "location": "/bundles/ac_agenda_jobs/Artifact Wizard.json",
        "properties": {
          "entryPoint": false
        }
      },
      {
        "id": "Shallow Remove Artifact",
        "name": "Shallow Remove Artifact",
        "type": "ac-agenda-job",
        "location": "/bundles/ac_agenda_jobs/Shallow Remove Artifact.json",
        "properties": {
          "entryPoint": false
        }
      },
      {
        "id": "IAP Artifacts Artifact Wizard",
        "name": "IAP Artifacts Artifact Wizard",
        "type": "workflow",
        "location": "/bundles/workflows/IAP Artifacts Artifact Wizard.json",
        "properties": {
          "entryPoint": false
        }
      },
      {
        "id": "Shallow Remove Artifact",
        "name": "Shallow Remove Artifact",
        "type": "workflow",
        "location": "/bundles/workflows/Shallow Remove Artifact.json",
        "properties": {
          "entryPoint": false
        }
      },
      {
        "id": "IAP Artifacts AW GitLab Update",
        "name": "IAP Artifacts AW GitLab Update",
        "type": "workflow",
        "location": "/bundles/workflows/IAP Artifacts AW GitLab Update.json",
        "properties": {
          "entryPoint": false
        }
      },
      {
        "id": "IAP Artifacts AW GitLab Pull",
        "name": "IAP Artifacts AW GitLab Pull",
        "type": "workflow",
        "location": "/bundles/workflows/IAP Artifacts AW GitLab Pull.json",
        "properties": {
          "entryPoint": false
        }
      },
      {
        "id": "IAP Artifacts AW Discover Components",
        "name": "IAP Artifacts AW Discover Components",
        "type": "workflow",
        "location": "/bundles/workflows/IAP Artifacts AW Discover Components.json",
        "properties": {
          "entryPoint": false
        }
      },
      {
        "id": "IAP Artifacts AW Create Git Repo",
        "name": "IAP Artifacts AW Create Git Repo",
        "type": "workflow",
        "location": "/bundles/workflows/IAP Artifacts AW Create Git Repo.json",
        "properties": {
          "entryPoint": false
        }
      },
      {
        "id": "IAP Artifacts AW Create Published Artifact",
        "name": "IAP Artifacts AW Create Published Artifact",
        "type": "workflow",
        "location": "/bundles/workflows/IAP Artifacts AW Create Published Artifact.json",
        "properties": {
          "entryPoint": false
        }
      },
      {
        "id": "IAP Artifacts AW Install AE Artifact",
        "name": "IAP Artifacts AW Install AE Artifact",
        "type": "workflow",
        "location": "/bundles/workflows/IAP Artifacts AW Install AE Artifact.json",
        "properties": {
          "entryPoint": false
        }
      },
      {
        "id": "IAP Artifacts AW GitLab Commit Data",
        "name": "IAP Artifacts AW GitLab Commit Data",
        "type": "workflow",
        "location": "/bundles/workflows/IAP Artifacts AW GitLab Commit Data.json",
        "properties": {
          "entryPoint": false
        }
      },
      {
        "id": "IAP Artifacts AW Create Array",
        "name": "IAP Artifacts AW Create Array",
        "type": "workflow",
        "location": "/bundles/workflows/IAP Artifacts AW Create Array.json",
        "properties": {
          "entryPoint": false
        }
      },
      {
        "id": "IAP Artifacts AW GitLab Create Link",
        "name": "IAP Artifacts AW GitLab Create Link",
        "type": "workflow",
        "location": "/bundles/workflows/IAP Artifacts AW GitLab Create Link.json",
        "properties": {
          "entryPoint": false
        }
      },
      {
        "id": "Artifact Wizard Config Form",
        "name": "Artifact Wizard Config Form",
        "type": "json-forms",
        "location": "/bundles/json_forms/Artifact Wizard Config Form.json",
        "properties": {
          "entryPoint": false
        }
      },
      {
        "id": "Shallow Remove Artifact",
        "name": "Shallow Remove Artifact",
        "type": "json-forms",
        "location": "/bundles/json_forms/Shallow Remove Artifact.json",
        "properties": {
          "entryPoint": false
        }
      },
      {
        "id": "Artifact Components",
        "name": "Artifact Components",
        "type": "json-forms",
        "location": "/bundles/json_forms/Artifact Components.json",
        "properties": {
          "entryPoint": false
        }
      },
      {
        "id": "Artifact Metadata",
        "name": "Artifact Metadata",
        "type": "json-forms",
        "location": "/bundles/json_forms/Artifact Metadata.json",
        "properties": {
          "entryPoint": false
        }
      },
      {
        "id": "5f7cd8a23847573af4852ec1",
        "name": "GetArtifactIds_ShallowRemove",
        "type": "transformation",
        "location": "/bundles/transformations/GetArtifactIds_ShallowRemove.json",
        "properties": {
          "entryPoint": false
        }
      },
      {
        "id": "5f287844d76d950aa5f59814",
        "name": "Create prebuilt - Fix packagejson",
        "type": "transformation",
        "location": "/bundles/transformations/Create prebuilt - Fix packagejson.json",
        "properties": {
          "entryPoint": false
        }
      },
      {
        "id": "5f0c9dae10b81c2da7cf6023",
        "name": "toRepoName",
        "type": "transformation",
        "location": "/bundles/transformations/toRepoName.json",
        "properties": {
          "entryPoint": false
        }
      },
      {
        "id": "60026031e30efd085ffcfb57",
        "name": "changeScopePackageJson",
        "type": "transformation",
        "location": "/bundles/transformations/changeScopePackageJson.json",
        "properties": {
          "entryPoint": false
        }
      }
    ]
  },
  "bundles": [
    {
      "type": "ac-agenda-job",
      "data": {
        "_id": "618a8bc5c03d3333d02c60f8",
        "name": "Artifact Wizard",
        "data": {
          "description": "create and publish custom artifacts",
          "workflowId": "IAP Artifacts Artifact Wizard",
          "formId": "Artifact Wizard Config Form",
          "formData": {
            "newArtifact": {
              "zeroTouch": false,
              "installIntoAdminEssentialsAndDownload": true,
              "createGitlabRepository": false,
              "scope": "@itentialopensource"
            },
            "updateArtifact": {}
          },
          "gbac": {
            "write": [],
            "read": []
          },
          "lastUpdated": "2021-01-26T14:08:59.672Z",
          "modifiedById": "6180307394366d356e0a4259",
          "modifiedByUsername": "admin@pronghorn"
        },
        "lastModifiedBy": "Nicks-MacBook-Pro.local:21278",
        "lastRunAt": null,
        "nextRunAt": null,
        "priority": 0,
        "repeatInterval": null,
        "repeatTimezone": null,
        "type": "normal"
      }
    },
    {
      "type": "ac-agenda-job",
      "data": {
        "_id": "618a8bc5c03d3333d02c60fd",
        "name": "Shallow Remove Artifact",
        "data": {
          "description": "",
          "workflowId": "Shallow Remove Artifact",
          "formId": "Shallow Remove Artifact",
          "formData": {},
          "gbac": {
            "write": [],
            "read": []
          },
          "lastUpdated": "2020-10-06T17:44:48.759Z",
          "modifiedById": "6180307394366d356e0a4259",
          "modifiedByUsername": "admin@pronghorn"
        },
        "lastModifiedBy": "Nicks-MacBook-Pro.local:21278",
        "lastRunAt": null,
        "nextRunAt": null,
        "priority": 0,
        "repeatInterval": null,
        "repeatTimezone": null,
        "type": "normal"
      }
    },
    {
      "type": "workflow",
      "data": {
        "name": "IAP Artifacts Artifact Wizard",
        "tasks": {
          "171": {
            "name": "query",
            "summary": "Query Artifact Component Data",
            "description": "Query incoming automation catalog for automation name",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "displayName": "WorkFlowEngine",
            "type": "operation",
            "variables": {
              "incoming": {
                "pass_on_null": false,
                "query": "newArtifact",
                "obj": "$var.job.formData"
              },
              "outgoing": {
                "return_data": null
              },
              "error": ""
            },
            "deprecated": false,
            "matched": [
              {
                "key": "name",
                "highlightString": "<span class='highlight-string'>query</span>"
              },
              {
                "key": "summary",
                "highlightString": "<span class='highlight-string'>Query</span> Data Using 'json-query' Format"
              },
              {
                "key": "description",
                "highlightString": "<span class='highlight-string'>Query</span> data using a dot/bracket notation string and a matching key/value pair."
              }
            ],
            "groups": [],
            "x": -0.32427366447985007,
            "y": 0.3140794223826715,
            "scheduled": false
          },
          "1376": {
            "name": "query",
            "summary": "Query package.json",
            "description": "Query data using a dot/bracket notation string and a matching key/value pair.",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "displayName": "WorkFlowEngine",
            "type": "operation",
            "variables": {
              "incoming": {
                "pass_on_null": false,
                "query": "fileContents",
                "obj": "$var.9aaa.job_details"
              },
              "outgoing": {
                "return_data": null
              },
              "error": ""
            },
            "deprecated": false,
            "matched": [
              {
                "key": "name",
                "highlightString": "<span class='highlight-string'>query</span>"
              },
              {
                "key": "summary",
                "highlightString": "<span class='highlight-string'>Query</span> Data Using 'json-query' Format"
              },
              {
                "key": "description",
                "highlightString": "<span class='highlight-string'>Query</span> data using a dot/bracket notation string and a matching key/value pair."
              }
            ],
            "groups": [],
            "x": 0.7456931911402789,
            "y": 0.8427480916030534,
            "scheduled": false
          },
          "2677": {
            "name": "updateBundle",
            "summary": "Update artifact bundle",
            "description": "Updates metadata and associated components for custom artifact bundle",
            "location": "Application",
            "locationType": null,
            "app": "AppArtifacts",
            "displayName": "AppArtifacts",
            "type": "automatic",
            "variables": {
              "incoming": {
                "name": "$var.533c.return_data",
                "dependencies": "$var.98ad.return_data",
                "components": "$var.3b9.return_data",
                "version": "$var.4d92.return_data"
              },
              "outgoing": {
                "result": null
              },
              "error": ""
            },
            "deprecated": true,
            "matched": [],
            "groups": [],
            "actor": "Pronghorn",
            "x": 1.2625215889464594,
            "y": 0.6592261904761905,
            "scheduled": false
          },
          "3388": {
            "name": "query",
            "canvasName": "query",
            "summary": "Query Zero Touch",
            "description": "Query data using a dot/bracket notation string and a matching key/value pair.",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "type": "operation",
            "displayName": "WorkFlowEngine",
            "variables": {
              "incoming": {
                "pass_on_null": false,
                "query": "newArtifact.zeroTouch",
                "obj": "$var.job.formData"
              },
              "outgoing": {
                "return_data": "$var.job.zeroTouch"
              },
              "error": ""
            },
            "deprecated": false,
            "matched": [
              {
                "key": "canvasName",
                "highlightString": "<span class='highlight-string'>query</span>"
              },
              {
                "key": "summary",
                "highlightString": "<span class='highlight-string'>Query</span> Data Using 'json-query' Format"
              },
              {
                "key": "description",
                "highlightString": "<span class='highlight-string'>Query</span> data using a dot/bracket notation string and a matching key/value pair."
              }
            ],
            "groups": [],
            "x": -0.05810684161199625,
            "y": 0.27256317689530685,
            "scheduled": false
          },
          "8194": {
            "name": "query",
            "canvasName": "query",
            "summary": "Query export name",
            "description": "Query data using a dot/bracket notation string and a matching key/value pair.",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "type": "operation",
            "displayName": "WorkFlowEngine",
            "variables": {
              "incoming": {
                "pass_on_null": false,
                "query": "name",
                "obj": "$var.586b.current_item"
              },
              "outgoing": {
                "return_data": null
              },
              "error": ""
            },
            "deprecated": false,
            "matched": [
              {
                "key": "canvasName",
                "highlightString": "<span class='highlight-string'>query</span>"
              },
              {
                "key": "summary",
                "highlightString": "<span class='highlight-string'>Query</span> Data Using 'json-query' Format"
              },
              {
                "key": "description",
                "highlightString": "<span class='highlight-string'>Query</span> data using a dot/bracket notation string and a matching key/value pair."
              }
            ],
            "groups": [],
            "x": 1.7849740932642486,
            "y": -0.1368421052631579,
            "scheduled": false
          },
          "workflow_start": {
            "name": "workflow_start",
            "groups": [],
            "x": -0.5561312607944733,
            "y": 0.3763157894736842,
            "summary": "workflow_start",
            "description": "workflow_start"
          },
          "workflow_end": {
            "name": "workflow_end",
            "groups": [],
            "x": 2.800518134715026,
            "y": 0.6526315789473685,
            "summary": "workflow_end",
            "description": "workflow_end"
          },
          "72a3": {
            "name": "query",
            "summary": "Artifact Name",
            "description": "Query incoming automation catalog for artifact name",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "displayName": "WorkFlowEngine",
            "type": "operation",
            "variables": {
              "incoming": {
                "pass_on_null": false,
                "query": "newArtifact.name",
                "obj": "$var.job.formData"
              },
              "outgoing": {
                "return_data": null
              },
              "error": ""
            },
            "deprecated": false,
            "matched": [
              {
                "key": "name",
                "highlightString": "<span class='highlight-string'>query</span>"
              },
              {
                "key": "summary",
                "highlightString": "<span class='highlight-string'>Query</span> Data Using 'json-query' Format"
              },
              {
                "key": "description",
                "highlightString": "<span class='highlight-string'>Query</span> data using a dot/bracket notation string and a matching key/value pair."
              }
            ],
            "groups": [],
            "x": -0.4214162348877375,
            "y": 0.3815789473684211,
            "scheduled": false
          },
          "e3d0": {
            "name": "gatherHealthcheck",
            "summary": "Gather Healthcheck",
            "description": "Gather Healthcheck",
            "location": "Application",
            "app": "AppArtifacts",
            "displayName": "AppArtifacts",
            "type": "manual",
            "variables": {
              "incoming": {},
              "outgoing": {
                "healthcheck": "$var.job.healthcheck"
              },
              "error": ""
            },
            "view": "/app_artifacts/views/tasks/gatherHealthcheck",
            "deprecated": true,
            "matched": [],
            "groups": [],
            "x": 1.1459412780656304,
            "y": 0.1881578947368421,
            "scheduled": false
          },
          "533c": {
            "name": "query",
            "summary": "Installed Artifact",
            "description": "Query data using a dot/bracket notation string and a matching key/value pair.",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "displayName": "WorkFlowEngine",
            "type": "operation",
            "variables": {
              "incoming": {
                "pass_on_null": false,
                "query": "updateArtifact.installedArtifacts",
                "obj": "$var.job.formData"
              },
              "outgoing": {
                "return_data": null
              },
              "error": ""
            },
            "deprecated": false,
            "matched": [
              {
                "key": "name",
                "highlightString": "<span class='highlight-string'>query</span>"
              },
              {
                "key": "summary",
                "highlightString": "<span class='highlight-string'>Query</span> Data Using 'json-query' Format"
              },
              {
                "key": "description",
                "highlightString": "<span class='highlight-string'>Query</span> data using a dot/bracket notation string and a matching key/value pair."
              }
            ],
            "groups": [],
            "x": -0.06044905008635579,
            "y": 0.6618421052631579,
            "scheduled": false
          },
          "3a1": {
            "name": "gatherHealthcheck",
            "summary": "Gather Healthcheck",
            "description": "Gather Healthcheck",
            "location": "Application",
            "app": "AppArtifacts",
            "displayName": "AppArtifacts",
            "type": "manual",
            "variables": {
              "incoming": {},
              "outgoing": {
                "healthcheck": null
              },
              "error": ""
            },
            "view": "/app_artifacts/views/tasks/gatherHealthcheck",
            "deprecated": true,
            "matched": [],
            "groups": [],
            "x": 0.7621000820344545,
            "y": 0.6641221374045801,
            "scheduled": false
          },
          "3b9": {
            "name": "query",
            "summary": "Query components",
            "description": "Query data using a dot/bracket notation string and a matching key/value pair.",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "displayName": "WorkFlowEngine",
            "type": "operation",
            "variables": {
              "incoming": {
                "pass_on_null": false,
                "query": "componentMap",
                "obj": "$var.6df.discovery"
              },
              "outgoing": {
                "return_data": null
              },
              "error": ""
            },
            "deprecated": false,
            "matched": [
              {
                "key": "name",
                "highlightString": "<span class='highlight-string'>query</span>"
              },
              {
                "key": "summary",
                "highlightString": "<span class='highlight-string'>Query</span> Data Using 'json-query' Format"
              },
              {
                "key": "description",
                "highlightString": "<span class='highlight-string'>Query</span> data using a dot/bracket notation string and a matching key/value pair."
              }
            ],
            "groups": [],
            "x": 0.23379819524200163,
            "y": 0.8213740458015267,
            "scheduled": false
          },
          "98ad": {
            "name": "query",
            "summary": "Query dependencies",
            "description": "Query data using a dot/bracket notation string and a matching key/value pair.",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "displayName": "WorkFlowEngine",
            "type": "operation",
            "variables": {
              "incoming": {
                "pass_on_null": false,
                "query": "dependencies",
                "obj": "$var.6df.discovery"
              },
              "outgoing": {
                "return_data": null
              },
              "error": ""
            },
            "deprecated": false,
            "matched": [
              {
                "key": "name",
                "highlightString": "<span class='highlight-string'>query</span>"
              },
              {
                "key": "summary",
                "highlightString": "<span class='highlight-string'>Query</span> Data Using 'json-query' Format"
              },
              {
                "key": "description",
                "highlightString": "<span class='highlight-string'>Query</span> data using a dot/bracket notation string and a matching key/value pair."
              }
            ],
            "groups": [],
            "x": 0.23297785069729288,
            "y": 0.9251908396946565,
            "scheduled": false
          },
          "bc7a": {
            "name": "merge",
            "summary": "Merge name, components, dependencies",
            "description": "Merge data into a single object",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "displayName": "WorkFlowEngine",
            "type": "operation",
            "variables": {
              "incoming": {
                "data_to_merge": [
                  {
                    "key": "name",
                    "value": {
                      "task": "533c",
                      "variable": "return_data"
                    }
                  },
                  {
                    "key": "components",
                    "value": {
                      "task": "3b9",
                      "variable": "return_data"
                    }
                  },
                  {
                    "key": "dependencies",
                    "value": {
                      "task": "98ad",
                      "variable": "return_data"
                    }
                  }
                ]
              },
              "outgoing": {
                "merged_object": null
              }
            },
            "deprecated": false,
            "matched": [
              {
                "key": "name",
                "highlightString": "<span class='highlight-string'>merge</span>"
              },
              {
                "key": "summary",
                "highlightString": "<span class='highlight-string'>Merge</span> Data"
              },
              {
                "key": "description",
                "highlightString": "<span class='highlight-string'>Merge</span> data into a single object"
              }
            ],
            "groups": [],
            "x": 0.2895816242821985,
            "y": 0.8274809160305343
          },
          "31c1": {
            "name": "categorizeComponentData",
            "summary": "Create organized component data",
            "description": "Separate component data into existing from new for diffing purposes",
            "location": "Application",
            "locationType": null,
            "app": "AppArtifacts",
            "displayName": "AppArtifacts",
            "type": "automatic",
            "variables": {
              "incoming": {
                "name": "$var.533c.return_data",
                "components": "$var.3b9.return_data"
              },
              "outgoing": {
                "componentData": null
              },
              "error": ""
            },
            "deprecated": false,
            "matched": [],
            "groups": [],
            "actor": "Pronghorn",
            "x": 0.5872193436960277,
            "y": 0.6600741656365884,
            "scheduled": false
          },
          "1ef0": {
            "name": "prepareDiscoveryReport",
            "summary": "Create discovery report",
            "description": "Takes discovery report, and convert it to HTML (to be used in ViewData)",
            "location": "Application",
            "locationType": null,
            "app": "AppArtifacts",
            "displayName": "AppArtifacts",
            "type": "automatic",
            "variables": {
              "incoming": {
                "discoveryReport": "$var.6df.discovery"
              },
              "outgoing": {
                "htmlReport": null
              },
              "error": ""
            },
            "deprecated": true,
            "matched": [],
            "groups": [],
            "actor": "Pronghorn",
            "x": 0.4159146841673503,
            "y": 0.6580152671755726,
            "scheduled": false
          },
          "a2d6": {
            "name": "ViewData",
            "summary": "Discovered components",
            "description": "View data in a pretty format",
            "location": "Application",
            "app": "WorkFlowEngine",
            "displayName": "Tools",
            "type": "manual",
            "variables": {
              "incoming": {
                "header": "Discovered Components",
                "message": "",
                "body": "$var.1ef0.htmlReport",
                "variables": {},
                "btn_success": "Confirm",
                "btn_failure": ""
              },
              "outgoing": {},
              "error": ""
            },
            "view": "/workflow_engine/task/ViewData",
            "deprecated": false,
            "matched": [
              {
                "key": "name",
                "highlightString": "<span class='highlight-string'>ViewD</span>ata"
              }
            ],
            "groups": [],
            "x": 0.4159146841673503,
            "y": 1.0931297709923664,
            "scheduled": false
          },
          "ad64": {
            "name": "updatePublishedArtifact",
            "summary": "Create bundle JSON",
            "description": "Creates JSON object containing artifact file structure and all associated data",
            "location": "Application",
            "locationType": null,
            "app": "AppArtifacts",
            "displayName": "AppArtifacts",
            "type": "automatic",
            "variables": {
              "incoming": {
                "artifactName": "$var.533c.return_data",
                "modules": "$var.3a1.healthcheck",
                "components": "$var.31c1.componentData",
                "dependencies": "$var.98ad.return_data",
                "packageJson": "$var.1376.return_data"
              },
              "outgoing": {
                "artifact": null
              },
              "error": ""
            },
            "deprecated": false,
            "matched": [],
            "groups": [],
            "actor": "Pronghorn",
            "x": 0.9351927809680065,
            "y": 0.665648854961832,
            "scheduled": false
          },
          "4d92": {
            "name": "query",
            "summary": "Query version from package.json",
            "description": "Query data using a dot/bracket notation string and a matching key/value pair.",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "displayName": "WorkFlowEngine",
            "type": "operation",
            "variables": {
              "incoming": {
                "pass_on_null": false,
                "query": "version",
                "obj": "$var.1376.return_data"
              },
              "outgoing": {
                "return_data": null
              },
              "error": ""
            },
            "deprecated": false,
            "matched": [
              {
                "key": "name",
                "highlightString": "<span class='highlight-string'>query</span>"
              },
              {
                "key": "summary",
                "highlightString": "<span class='highlight-string'>Query</span> Data Using 'json-query' Format"
              },
              {
                "key": "description",
                "highlightString": "<span class='highlight-string'>Query</span> data using a dot/bracket notation string and a matching key/value pair."
              }
            ],
            "groups": [],
            "x": 1.0967184801381693,
            "y": 0.8318452380952381,
            "scheduled": false
          },
          "4f3": {
            "name": "getArtifactEntrypoint",
            "summary": "Name of Artifact",
            "description": "Returns list of components for the artifact",
            "location": "Application",
            "locationType": null,
            "app": "AppArtifacts",
            "displayName": "AppArtifacts",
            "type": "automatic",
            "variables": {
              "incoming": {
                "artifactName": "$var.533c.return_data"
              },
              "outgoing": {
                "components": null
              },
              "error": ""
            },
            "deprecated": true,
            "matched": [],
            "groups": [],
            "actor": "Pronghorn",
            "x": 0.06049382716049383,
            "y": 0.6634408602150538,
            "scheduled": false
          },
          "6df": {
            "name": "componentDiscovery",
            "summary": "Perform discovery",
            "description": "Discovers any referenced components within automation catalogs",
            "location": "Application",
            "locationType": null,
            "app": "AppArtifacts",
            "displayName": "AppArtifacts",
            "type": "automatic",
            "variables": {
              "incoming": {
                "entryPoint": "$var.4f3.components"
              },
              "outgoing": {
                "discovery": null
              },
              "error": ""
            },
            "deprecated": false,
            "matched": [],
            "groups": [],
            "actor": "Pronghorn",
            "x": 0.21790123456790123,
            "y": 0.6602150537634408,
            "scheduled": false
          },
          "4fcc": {
            "name": "query",
            "summary": "Query package.json",
            "description": "Query data using a dot/bracket notation string and a matching key/value pair.",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "displayName": "WorkFlowEngine",
            "type": "operation",
            "variables": {
              "incoming": {
                "pass_on_null": false,
                "query": "fileContents",
                "obj": "$var.2ae3.job_details"
              },
              "outgoing": {
                "return_data": null
              },
              "error": ""
            },
            "deprecated": false,
            "matched": [
              {
                "key": "name",
                "highlightString": "<span class='highlight-string'>query</span>"
              },
              {
                "key": "summary",
                "highlightString": "<span class='highlight-string'>Query</span> Data Using 'json-query' Format"
              },
              {
                "key": "description",
                "highlightString": "<span class='highlight-string'>Query</span> data using a dot/bracket notation string and a matching key/value pair."
              }
            ],
            "groups": [],
            "x": 0.9231433506044905,
            "y": 0.3510506798516687,
            "scheduled": false
          },
          "f7a3": {
            "name": "query",
            "canvasName": "query",
            "summary": "Query README contents",
            "description": "Query data using a dot/bracket notation string and a matching key/value pair.",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "displayName": "WorkFlowEngine",
            "type": "operation",
            "variables": {
              "incoming": {
                "pass_on_null": false,
                "query": "fileContents",
                "obj": "$var.da73.job_details"
              },
              "outgoing": {
                "return_data": null
              },
              "error": ""
            },
            "deprecated": false,
            "matched": [
              {
                "key": "canvasName",
                "highlightString": "<span class='highlight-string'>query</span>"
              },
              {
                "key": "summary",
                "highlightString": "<span class='highlight-string'>Query</span> Data Using 'json-query' Format"
              },
              {
                "key": "description",
                "highlightString": "<span class='highlight-string'>Query</span> data using a dot/bracket notation string and a matching key/value pair."
              }
            ],
            "groups": [],
            "x": 0.6658031088082902,
            "y": 0.35599505562422745,
            "scheduled": false
          },
          "47af": {
            "name": "childJob",
            "canvasName": "childJob",
            "summary": "Run Child Job",
            "description": "Run a child Job inside a Workflow",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "displayName": "WorkFlowEngine",
            "type": "operation",
            "variables": {
              "incoming": {
                "task": "",
                "workflow": "IAP Artifacts AW GitLab Update",
                "variables": {
                  "artifact": {
                    "variable": "",
                    "task": "ad64",
                    "value": "artifact"
                  },
                  "repoName": {
                    "variable": "",
                    "task": "533c",
                    "value": "return_data"
                  }
                },
                "data_array": "",
                "transformation": "",
                "loopType": ""
              },
              "outgoing": {
                "job_details": null
              }
            },
            "deprecated": false,
            "matched": [
              {
                "key": "canvasName",
                "highlightString": "<span class='highlight-string'>childJob</span>"
              }
            ],
            "groups": [],
            "actor": "job",
            "x": 1.0993091537132988,
            "y": 0.6651785714285714
          },
          "da73": {
            "name": "childJob",
            "canvasName": "childJob",
            "summary": "Get README",
            "description": "Run a child Job inside a Workflow",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "displayName": "WorkFlowEngine",
            "type": "operation",
            "variables": {
              "incoming": {
                "task": "",
                "workflow": "IAP Artifacts AW GitLab Pull",
                "variables": {
                  "namespace": {
                    "variable": "",
                    "task": "static",
                    "value": "itentialopensource%2Fpre-built-automations"
                  },
                  "repoName": {
                    "variable": "",
                    "task": "static",
                    "value": "artifact-template-2021-1"
                  },
                  "fileName": {
                    "variable": "",
                    "task": "static",
                    "value": "README.md"
                  }
                },
                "data_array": "",
                "transformation": "",
                "loopType": ""
              },
              "outgoing": {
                "job_details": null
              }
            },
            "deprecated": false,
            "matched": [
              {
                "key": "canvasName",
                "highlightString": "<span class='highlight-string'>childJob</span>"
              }
            ],
            "groups": [],
            "actor": "job",
            "x": 0.5328151986183074,
            "y": 0.36093943139678614
          },
          "2ae3": {
            "name": "childJob",
            "canvasName": "childJob",
            "summary": "Get package.json",
            "description": "Run a child Job inside a Workflow",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "displayName": "WorkFlowEngine",
            "type": "operation",
            "variables": {
              "incoming": {
                "task": "",
                "workflow": "IAP Artifacts AW GitLab Pull",
                "variables": {
                  "namespace": {
                    "variable": "",
                    "task": "static",
                    "value": "itentialopensource%2Fpre-built-automations"
                  },
                  "repoName": {
                    "variable": "",
                    "task": "static",
                    "value": "artifact-template-2021-1"
                  },
                  "fileName": {
                    "variable": "",
                    "task": "static",
                    "value": "package.json"
                  }
                },
                "data_array": "",
                "transformation": "",
                "loopType": ""
              },
              "outgoing": {
                "job_details": null
              }
            },
            "deprecated": false,
            "matched": [
              {
                "key": "canvasName",
                "highlightString": "<span class='highlight-string'>childJob</span>"
              }
            ],
            "groups": [],
            "actor": "job",
            "x": 0.7944732297063903,
            "y": 0.3572311495673671
          },
          "9aaa": {
            "name": "childJob",
            "canvasName": "childJob",
            "summary": "Get package.json",
            "description": "Run a child Job inside a Workflow",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "displayName": "WorkFlowEngine",
            "type": "operation",
            "variables": {
              "incoming": {
                "task": "",
                "workflow": "IAP Artifacts AW GitLab Pull",
                "variables": {
                  "namespace": {
                    "variable": "",
                    "task": "static",
                    "value": "itentialopensource%2Fpre-built-automations%2Fstaging"
                  },
                  "repoName": {
                    "variable": "",
                    "task": "533c",
                    "value": "return_data"
                  },
                  "fileName": {
                    "variable": "",
                    "task": "static",
                    "value": "package.json"
                  }
                },
                "data_array": "",
                "transformation": "",
                "loopType": ""
              },
              "outgoing": {
                "job_details": null
              }
            },
            "deprecated": false,
            "matched": [
              {
                "key": "canvasName",
                "highlightString": "<span class='highlight-string'>childJob</span>"
              }
            ],
            "groups": [],
            "actor": "job",
            "x": 0.5915371329879102,
            "y": 1.0950965824665677
          },
          "158e": {
            "name": "childJob",
            "canvasName": "childJob",
            "summary": "Discover Components",
            "description": "Run a child Job inside a Workflow",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "displayName": "WorkFlowEngine",
            "type": "operation",
            "variables": {
              "incoming": {
                "task": "",
                "workflow": "IAP Artifacts AW Discover Components",
                "variables": {
                  "artifact": {
                    "variable": "",
                    "task": "171",
                    "value": "return_data"
                  }
                },
                "data_array": "",
                "transformation": "",
                "loopType": ""
              },
              "outgoing": {
                "job_details": null
              }
            },
            "deprecated": false,
            "matched": [
              {
                "key": "canvasName",
                "highlightString": "<span class='highlight-string'>childJob</span>"
              }
            ],
            "groups": [],
            "actor": "job",
            "x": 0.16666666666666666,
            "y": 0.34342105263157896
          },
          "376c": {
            "name": "query",
            "canvasName": "query",
            "summary": "Query Discovery",
            "description": "Query data using a dot/bracket notation string and a matching key/value pair.",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "displayName": "WorkFlowEngine",
            "type": "operation",
            "variables": {
              "incoming": {
                "pass_on_null": false,
                "query": "discovery",
                "obj": "$var.158e.job_details"
              },
              "outgoing": {
                "return_data": null
              },
              "error": ""
            },
            "deprecated": false,
            "matched": [
              {
                "key": "canvasName",
                "highlightString": "<span class='highlight-string'>query</span>"
              },
              {
                "key": "summary",
                "highlightString": "<span class='highlight-string'>Query</span> Data Using 'json-query' Format"
              },
              {
                "key": "description",
                "highlightString": "<span class='highlight-string'>Query</span> data using a dot/bracket notation string and a matching key/value pair."
              }
            ],
            "groups": [],
            "x": 0.3385146804835924,
            "y": 0.3547589616810878,
            "scheduled": false
          },
          "6bb8": {
            "name": "query",
            "canvasName": "query",
            "summary": "Query Exports",
            "description": "Query data using a dot/bracket notation string and a matching key/value pair.",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "displayName": "WorkFlowEngine",
            "type": "operation",
            "variables": {
              "incoming": {
                "pass_on_null": false,
                "query": "exports",
                "obj": "$var.158e.job_details"
              },
              "outgoing": {
                "return_data": null
              },
              "error": ""
            },
            "deprecated": false,
            "matched": [
              {
                "key": "canvasName",
                "highlightString": "<span class='highlight-string'>query</span>"
              },
              {
                "key": "summary",
                "highlightString": "<span class='highlight-string'>Query</span> Data Using 'json-query' Format"
              },
              {
                "key": "description",
                "highlightString": "<span class='highlight-string'>Query</span> data using a dot/bracket notation string and a matching key/value pair."
              }
            ],
            "groups": [],
            "x": 0.41968911917098445,
            "y": 0.3510506798516687,
            "scheduled": false
          },
          "630f": {
            "name": "query",
            "canvasName": "query",
            "summary": "Query AE install",
            "description": "Query data using a dot/bracket notation string and a matching key/value pair.",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "type": "operation",
            "displayName": "WorkFlowEngine",
            "variables": {
              "incoming": {
                "pass_on_null": false,
                "query": "newArtifact.installIntoAdminEssentialsAndDownload",
                "obj": "$var.job.formData"
              },
              "outgoing": {
                "return_data": null
              },
              "error": ""
            },
            "deprecated": false,
            "matched": [
              {
                "key": "canvasName",
                "highlightString": "<span class='highlight-string'>query</span>"
              },
              {
                "key": "summary",
                "highlightString": "<span class='highlight-string'>Query</span> Data Using 'json-query' Format"
              },
              {
                "key": "description",
                "highlightString": "<span class='highlight-string'>Query</span> data using a dot/bracket notation string and a matching key/value pair."
              }
            ],
            "groups": [],
            "x": -0.2296157450796626,
            "y": 0.2996389891696751,
            "scheduled": false
          },
          "cf31": {
            "name": "query",
            "canvasName": "query",
            "summary": "Query Git Repo Creation",
            "description": "Query data using a dot/bracket notation string and a matching key/value pair.",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "type": "operation",
            "displayName": "WorkFlowEngine",
            "variables": {
              "incoming": {
                "pass_on_null": false,
                "query": "newArtifact.createGitlabRepository",
                "obj": "$var.job.formData"
              },
              "outgoing": {
                "return_data": null
              },
              "error": ""
            },
            "deprecated": false,
            "matched": [
              {
                "key": "canvasName",
                "highlightString": "<span class='highlight-string'>query</span>"
              },
              {
                "key": "summary",
                "highlightString": "<span class='highlight-string'>Query</span> Data Using 'json-query' Format"
              },
              {
                "key": "description",
                "highlightString": "<span class='highlight-string'>Query</span> data using a dot/bracket notation string and a matching key/value pair."
              }
            ],
            "groups": [],
            "x": -0.14432989690721648,
            "y": 0.29422382671480146,
            "scheduled": false
          },
          "586b": {
            "name": "forEach",
            "canvasName": "forEach",
            "summary": "Iterate exports",
            "description": "Iterate over each item in an array",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "type": "operation",
            "displayName": "WorkFlowEngine",
            "variables": {
              "incoming": {
                "data_array": "$var.6bb8.return_data"
              },
              "outgoing": {
                "current_item": null
              },
              "error": ""
            },
            "deprecated": false,
            "matched": [
              {
                "key": "canvasName",
                "highlightString": "<span class='highlight-string'>forEa</span>ch"
              }
            ],
            "groups": [],
            "x": 1.7884283246977548,
            "y": 0.034210526315789476,
            "scheduled": false
          },
          "cbfb": {
            "name": "evaluation",
            "canvasName": "evaluation",
            "summary": "Git Repo Creation",
            "description": "Run an evaluation",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "type": "operation",
            "displayName": "WorkFlowEngine",
            "variables": {
              "incoming": {
                "all_true_flag": false,
                "evaluation_groups": [
                  {
                    "all_true_flag": false,
                    "evaluations": [
                      {
                        "query": "",
                        "operand_1": {
                          "variable": "return_data",
                          "task": "cf31"
                        },
                        "operator": "==",
                        "operand_2": {
                          "variable": true,
                          "task": "static"
                        }
                      }
                    ]
                  }
                ]
              },
              "outgoing": {
                "return_value": null
              }
            },
            "deprecated": false,
            "matched": [],
            "groups": [],
            "x": 1.567357512953368,
            "y": 0.3368421052631579
          },
          "b84e": {
            "name": "childJob",
            "canvasName": "childJob",
            "summary": "Add Artifact to Gitlab",
            "description": "Add an artifact to gitlab to contribute to open-source. Returns link to Gitlab repo",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "type": "operation",
            "displayName": "WorkFlowEngine",
            "variables": {
              "incoming": {
                "task": "",
                "workflow": "IAP Artifacts AW Create Git Repo",
                "variables": {
                  "export": {
                    "variable": "",
                    "task": "464d",
                    "value": "return_data"
                  },
                  "publishedArtifact": {
                    "variable": "",
                    "task": "2fad",
                    "value": "return_data"
                  }
                },
                "data_array": "",
                "transformation": "",
                "loopType": ""
              },
              "outgoing": {
                "job_details": null
              }
            },
            "deprecated": false,
            "matched": [
              {
                "key": "canvasName",
                "highlightString": "<span class='highlight-string'>child</span>Job"
              },
              {
                "key": "summary",
                "highlightString": "Run <span class='highlight-string'>Child</span> Job"
              },
              {
                "key": "description",
                "highlightString": "Run a <span class='highlight-string'>child</span> job inside a workflow."
              }
            ],
            "groups": [],
            "actor": "job",
            "x": 1.5682210708117443,
            "y": 0.025
          },
          "eaa9": {
            "name": "evaluation",
            "canvasName": "evaluation",
            "summary": "Install into AE",
            "description": "Run an evaluation",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "type": "operation",
            "displayName": "WorkFlowEngine",
            "variables": {
              "incoming": {
                "all_true_flag": false,
                "evaluation_groups": [
                  {
                    "all_true_flag": false,
                    "evaluations": [
                      {
                        "query": "",
                        "operand_1": {
                          "variable": "return_data",
                          "task": "630f"
                        },
                        "operator": "==",
                        "operand_2": {
                          "variable": true,
                          "task": "static"
                        }
                      }
                    ]
                  }
                ]
              },
              "outgoing": {
                "return_value": null
              }
            },
            "deprecated": false,
            "matched": [],
            "groups": [],
            "x": 2.1580310880829017,
            "y": 0.33868974042027195
          },
          "d6b3": {
            "name": "query",
            "canvasName": "query",
            "summary": "Query gitlabLink",
            "description": "Query data using a dot/bracket notation string and a matching key/value pair.",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "type": "operation",
            "displayName": "WorkFlowEngine",
            "variables": {
              "incoming": {
                "pass_on_null": false,
                "query": "gitlabLink",
                "obj": "$var.b84e.job_details"
              },
              "outgoing": {
                "return_data": "$var.job.displayGitlabLink"
              },
              "error": ""
            },
            "deprecated": false,
            "matched": [
              {
                "key": "canvasName",
                "highlightString": "<span class='highlight-string'>query</span>"
              },
              {
                "key": "summary",
                "highlightString": "<span class='highlight-string'>Query</span> Data Using 'json-query' Format"
              },
              {
                "key": "description",
                "highlightString": "<span class='highlight-string'>Query</span> data using a dot/bracket notation string and a matching key/value pair."
              }
            ],
            "groups": [],
            "x": 1.9127806563039724,
            "y": 0.14833127317676142,
            "scheduled": false
          },
          "93c8": {
            "name": "childJob",
            "canvasName": "childJob",
            "summary": "CreatePublishedArtifact",
            "description": "Run a child job inside a workflow.",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "type": "operation",
            "displayName": "WorkFlowEngine",
            "variables": {
              "incoming": {
                "task": "",
                "workflow": "IAP Artifacts AW Create Published Artifact",
                "variables": {
                  "discovery": {
                    "variable": "",
                    "task": "376c",
                    "value": "return_data"
                  },
                  "zeroTouch": {
                    "variable": "",
                    "task": "job",
                    "value": "zeroTouch"
                  },
                  "readme": {
                    "variable": "",
                    "task": "f7a3",
                    "value": "return_data"
                  },
                  "name": {
                    "variable": "",
                    "task": "72a3",
                    "value": "return_data"
                  },
                  "scope": {
                    "variable": "",
                    "task": "fb45",
                    "value": "return_data"
                  },
                  "packageJson": {
                    "variable": "",
                    "task": "4fcc",
                    "value": "return_data"
                  },
                  "modules": {
                    "variable": "",
                    "task": "job",
                    "value": "healthcheck"
                  }
                },
                "data_array": "",
                "transformation": "",
                "loopType": ""
              },
              "outgoing": {
                "job_details": null
              }
            },
            "deprecated": false,
            "matched": [
              {
                "key": "canvasName",
                "highlightString": "<span class='highlight-string'>child</span>Job"
              },
              {
                "key": "summary",
                "highlightString": "Run <span class='highlight-string'>Child</span> Job"
              },
              {
                "key": "description",
                "highlightString": "Run a <span class='highlight-string'>child</span> job inside a workflow."
              }
            ],
            "groups": [],
            "actor": "job",
            "x": 1.3255613126079446,
            "y": 0.34210526315789475
          },
          "2fad": {
            "name": "query",
            "canvasName": "query",
            "summary": "Query PublishedArtifact",
            "description": "Query data using a dot/bracket notation string and a matching key/value pair.",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "type": "operation",
            "displayName": "WorkFlowEngine",
            "variables": {
              "incoming": {
                "pass_on_null": false,
                "query": "publishedArtifact",
                "obj": "$var.93c8.job_details"
              },
              "outgoing": {
                "return_data": null
              },
              "error": ""
            },
            "deprecated": false,
            "matched": [
              {
                "key": "canvasName",
                "highlightString": "<span class='highlight-string'>query</span>"
              },
              {
                "key": "summary",
                "highlightString": "<span class='highlight-string'>Query</span> Data Using 'json-query' Format"
              },
              {
                "key": "description",
                "highlightString": "<span class='highlight-string'>Query</span> data using a dot/bracket notation string and a matching key/value pair."
              }
            ],
            "groups": [],
            "x": 1.4887737478411054,
            "y": 0.3510506798516687,
            "scheduled": false
          },
          "464d": {
            "name": "query",
            "canvasName": "query",
            "summary": "Query Artifact Export",
            "description": "Query data using a dot/bracket notation string and a matching key/value pair.",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "type": "operation",
            "displayName": "WorkFlowEngine",
            "variables": {
              "incoming": {
                "pass_on_null": false,
                "query": "export",
                "obj": "$var.93c8.job_details"
              },
              "outgoing": {
                "return_data": null
              },
              "error": ""
            },
            "deprecated": false,
            "matched": [
              {
                "key": "canvasName",
                "highlightString": "<span class='highlight-string'>query</span>"
              },
              {
                "key": "summary",
                "highlightString": "<span class='highlight-string'>Query</span> Data Using 'json-query' Format"
              },
              {
                "key": "description",
                "highlightString": "<span class='highlight-string'>Query</span> data using a dot/bracket notation string and a matching key/value pair."
              }
            ],
            "groups": [],
            "x": 1.5630397236614852,
            "y": 0.19605263157894737,
            "scheduled": false
          },
          "f606": {
            "name": "newVariable",
            "canvasName": "newVariable",
            "summary": "Create a Job Variable",
            "description": "Create a new Job variable by Job ID and assign it a value.",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "type": "operation",
            "displayName": "WorkFlowEngine",
            "variables": {
              "incoming": {
                "name": "healthcheck",
                "value": [
                  {
                    "id": "AutomationCatalog",
                    "package_id": "@itential/app-automation_catalog",
                    "version": "2.6.6-2020.1.3.0",
                    "type": "Application",
                    "description": "Make your workflows easy to run",
                    "state": "RUNNING",
                    "connection": null,
                    "uptime": 17538.424820364,
                    "memoryUsage": {
                      "rss": 112652288,
                      "heapTotal": 33738752,
                      "heapUsed": 24799576,
                      "external": 38277955,
                      "arrayBuffers": 36934351
                    },
                    "cpuUsage": {
                      "user": 12922984,
                      "system": 2277072
                    },
                    "pid": 8235,
                    "logger": {
                      "console": "warn",
                      "file": "warn",
                      "syslog": {}
                    },
                    "routePrefix": "automation_catalog",
                    "prevUptime": 17537.42053176
                  },
                  {
                    "id": "AGManager",
                    "package_id": "@itential/app-ag_manager",
                    "version": "1.1.1-2020.1.0.0",
                    "type": "Application",
                    "description": "stand alone discovery",
                    "state": "RUNNING",
                    "connection": null,
                    "uptime": 17538.489313,
                    "memoryUsage": {
                      "rss": 101396480,
                      "heapTotal": 22568960,
                      "heapUsed": 19467800,
                      "external": 20028387,
                      "arrayBuffers": 18684789
                    },
                    "cpuUsage": {
                      "user": 9501084,
                      "system": 1742034
                    },
                    "pid": 8232,
                    "logger": {
                      "console": "warn",
                      "file": "warn",
                      "syslog": {}
                    },
                    "routePrefix": "ag-manager",
                    "prevUptime": 17537.484979781
                  },
                  {
                    "id": "AdminEssentials",
                    "package_id": "@itential/app-admin_essentials",
                    "version": "1.0.0-2020.1.5.0",
                    "type": "Application",
                    "description": "Itential Automation Platform's administration suite - the essential element of the IAP experience.",
                    "state": "RUNNING",
                    "connection": null,
                    "uptime": 17538.542255334,
                    "memoryUsage": {
                      "rss": 142204928,
                      "heapTotal": 25628672,
                      "heapUsed": 19453416,
                      "external": 20049414,
                      "arrayBuffers": 18583740
                    },
                    "cpuUsage": {
                      "user": 12744340,
                      "system": 2158874
                    },
                    "pid": 8233,
                    "logger": {
                      "console": "warn",
                      "file": "warn",
                      "syslog": {}
                    },
                    "routePrefix": "admin",
                    "prevUptime": 17537.539606677
                  },
                  {
                    "id": "GoldenServices",
                    "package_id": "@itential/app-golden_services",
                    "version": "1.5.2-2020.1.0.0",
                    "type": "Application",
                    "description": "Golden Services Interface application",
                    "state": "RUNNING",
                    "connection": null,
                    "uptime": 17538.527597789,
                    "memoryUsage": {
                      "rss": 103047168,
                      "heapTotal": 22069248,
                      "heapUsed": 18723856,
                      "external": 19833284,
                      "arrayBuffers": 18489680
                    },
                    "cpuUsage": {
                      "user": 9389586,
                      "system": 1759216
                    },
                    "pid": 8240,
                    "logger": {
                      "console": "warn",
                      "file": "warn",
                      "syslog": {}
                    },
                    "routePrefix": "golden_services",
                    "prevUptime": 17537.523479245
                  },
                  {
                    "id": "FormBuilder",
                    "package_id": "@itential/app-form_builder",
                    "version": "4.2.23-2020.1.0.0",
                    "type": "Application",
                    "description": "Form Builder Application",
                    "state": "RUNNING",
                    "connection": null,
                    "uptime": 17538.476532127,
                    "memoryUsage": {
                      "rss": 103432192,
                      "heapTotal": 29310976,
                      "heapUsed": 25869016,
                      "external": 20117803,
                      "arrayBuffers": 18652126
                    },
                    "cpuUsage": {
                      "user": 9774750,
                      "system": 1769707
                    },
                    "pid": 8238,
                    "logger": {
                      "console": "warn",
                      "file": "warn",
                      "syslog": {}
                    },
                    "routePrefix": "formbuilder",
                    "prevUptime": 17537.471347799
                  },
                  {
                    "id": "AppArtifacts",
                    "package_id": "@itential/app-artifacts",
                    "version": "5.0.0-2",
                    "type": "Application",
                    "description": "application for lifecycle management of itential artifacts",
                    "state": "RUNNING",
                    "connection": null,
                    "uptime": 17373.223047277,
                    "memoryUsage": {
                      "rss": 114958336,
                      "heapTotal": 38260736,
                      "heapUsed": 33215936,
                      "external": 58626377,
                      "arrayBuffers": 57160699
                    },
                    "cpuUsage": {
                      "user": 11354669,
                      "system": 1896708
                    },
                    "pid": 8919,
                    "logger": {
                      "console": "warn",
                      "file": "warn",
                      "syslog": {}
                    },
                    "routePrefix": "app_artifacts",
                    "prevUptime": 17372.218258411
                  },
                  {
                    "id": "AutomationStudio",
                    "package_id": "@itential/app-automation_studio",
                    "version": "2.0.14-2020.1.2.0",
                    "type": "Application",
                    "description": "TODO: Insert desc",
                    "state": "RUNNING",
                    "connection": null,
                    "uptime": 17538.559352074,
                    "memoryUsage": {
                      "rss": 104534016,
                      "heapTotal": 26816512,
                      "heapUsed": 22884208,
                      "external": 21047496,
                      "arrayBuffers": 19590249
                    },
                    "cpuUsage": {
                      "user": 10550364,
                      "system": 1859263
                    },
                    "pid": 8236,
                    "logger": {
                      "console": "warn",
                      "file": "warn",
                      "syslog": {}
                    },
                    "routePrefix": "automation-studio",
                    "prevUptime": 17537.555802423
                  },
                  {
                    "id": "JsonForms",
                    "package_id": "@itential/app-json_forms",
                    "version": "1.14.10-2020.1.1.0",
                    "type": "Application",
                    "description": "An application to create, edit, and publish forms based on JSON documents.",
                    "state": "RUNNING",
                    "connection": null,
                    "uptime": 17538.703589683,
                    "memoryUsage": {
                      "rss": 101199872,
                      "heapTotal": 27144192,
                      "heapUsed": 24263296,
                      "external": 20102950,
                      "arrayBuffers": 18759347
                    },
                    "cpuUsage": {
                      "user": 10267559,
                      "system": 1808581
                    },
                    "pid": 8241,
                    "logger": {
                      "console": "warn",
                      "file": "warn",
                      "syslog": {}
                    },
                    "routePrefix": "json-forms",
                    "prevUptime": 17537.700107518
                  },
                  {
                    "id": "ConfigurationManager",
                    "package_id": "@itential/app-configuration_manager",
                    "version": "3.43.14-2020.1.3.0",
                    "type": "Application",
                    "description": "Device and Configuration Manager",
                    "state": "RUNNING",
                    "connection": null,
                    "uptime": 17538.599427628,
                    "memoryUsage": {
                      "rss": 99700736,
                      "heapTotal": 26214400,
                      "heapUsed": 23216384,
                      "external": 20411410,
                      "arrayBuffers": 18945736
                    },
                    "cpuUsage": {
                      "user": 9362349,
                      "system": 1733441
                    },
                    "pid": 8237,
                    "logger": {
                      "console": "warn",
                      "file": "warn",
                      "syslog": {}
                    },
                    "routePrefix": "configuration_manager",
                    "prevUptime": 17537.597804097
                  },
                  {
                    "id": "GoldenConfig",
                    "package_id": "@itential/app-golden_config",
                    "version": "5.18.3-2020.1.1.0",
                    "type": "Application",
                    "description": "Golden Configuration Application",
                    "state": "RUNNING",
                    "connection": null,
                    "uptime": 17538.227679241,
                    "memoryUsage": {
                      "rss": 98160640,
                      "heapTotal": 23412736,
                      "heapUsed": 20208736,
                      "external": 20103903,
                      "arrayBuffers": 18760299
                    },
                    "cpuUsage": {
                      "user": 9569243,
                      "system": 1763363
                    },
                    "pid": 8239,
                    "logger": {
                      "console": "warn",
                      "file": "warn",
                      "syslog": {}
                    },
                    "routePrefix": "golden_config",
                    "prevUptime": 17537.225242618
                  },
                  {
                    "id": "Local AAA",
                    "package_id": "@itential/adapter-local_aaa",
                    "version": "3.0.6-2020.1.0.0",
                    "type": "Adapter",
                    "description": "simple aaa against local persistence store",
                    "state": "RUNNING",
                    "connection": {
                      "state": "ONLINE"
                    },
                    "uptime": 17538.542855241,
                    "memoryUsage": {
                      "rss": 96686080,
                      "heapTotal": 22364160,
                      "heapUsed": 19338152,
                      "external": 20202337,
                      "arrayBuffers": 18858733
                    },
                    "cpuUsage": {
                      "user": 10354716,
                      "system": 1945140
                    },
                    "pid": 8242,
                    "logger": {
                      "console": "warn",
                      "file": "warn",
                      "syslog": {}
                    },
                    "routePrefix": "local_aaa",
                    "prevUptime": 17537.539316064
                  },
                  {
                    "id": "MOP",
                    "package_id": "@itential/app-mop",
                    "version": "6.3.24-2020.1.0.0",
                    "type": "Application",
                    "description": "Implements Command/Analytic Templates within Automation Studio.",
                    "state": "RUNNING",
                    "connection": null,
                    "uptime": 17538.588279162,
                    "memoryUsage": {
                      "rss": 101842944,
                      "heapTotal": 24784896,
                      "heapUsed": 21125936,
                      "external": 20807567,
                      "arrayBuffers": 19463963
                    },
                    "cpuUsage": {
                      "user": 9630503,
                      "system": 1734957
                    },
                    "pid": 8243,
                    "logger": {
                      "console": "warn",
                      "file": "warn",
                      "syslog": {}
                    },
                    "routePrefix": "mop",
                    "prevUptime": 17537.587283094
                  },
                  {
                    "id": "NSOManager",
                    "package_id": "@itential/app-nso_manager",
                    "version": "2.20.1-2020.1.3.0",
                    "type": "Application",
                    "description": "Manages NSO. Formerly NED Validator.",
                    "state": "RUNNING",
                    "connection": null,
                    "uptime": 17538.328620161,
                    "memoryUsage": {
                      "rss": 98779136,
                      "heapTotal": 21839872,
                      "heapUsed": 18986440,
                      "external": 20079303,
                      "arrayBuffers": 18735699
                    },
                    "cpuUsage": {
                      "user": 9417904,
                      "system": 1744538
                    },
                    "pid": 8244,
                    "logger": {
                      "console": "warn",
                      "file": "warn",
                      "syslog": {}
                    },
                    "routePrefix": "nso_manager",
                    "prevUptime": 17537.323691263
                  },
                  {
                    "id": "PolicyManager",
                    "package_id": "@itential/app-policy_manager",
                    "version": "3.44.1-2020.1.6.0",
                    "type": "Application",
                    "description": "Itential Policy Manager application.",
                    "state": "RUNNING",
                    "connection": null,
                    "uptime": 17538.325070281,
                    "memoryUsage": {
                      "rss": 97824768,
                      "heapTotal": 24408064,
                      "heapUsed": 21045640,
                      "external": 20131235,
                      "arrayBuffers": 18784738
                    },
                    "cpuUsage": {
                      "user": 9821906,
                      "system": 1827510
                    },
                    "pid": 8245,
                    "logger": {
                      "console": "warn",
                      "file": "warn",
                      "syslog": {}
                    },
                    "routePrefix": "policy-manager",
                    "prevUptime": 17537.320164076
                  },
                  {
                    "id": "ServiceCog",
                    "package_id": "@itential/app-service_management",
                    "version": "2.23.7-2020.1.0.0",
                    "type": "Application",
                    "description": "Service Management",
                    "state": "RUNNING",
                    "connection": null,
                    "uptime": 17538.513418085,
                    "memoryUsage": {
                      "rss": 99135488,
                      "heapTotal": 22102016,
                      "heapUsed": 19229200,
                      "external": 20103795,
                      "arrayBuffers": 18760191
                    },
                    "cpuUsage": {
                      "user": 9391469,
                      "system": 1718853
                    },
                    "pid": 8248,
                    "logger": {
                      "console": "warn",
                      "file": "warn",
                      "syslog": {}
                    },
                    "routePrefix": "service_management",
                    "prevUptime": 17537.508843176
                  },
                  {
                    "id": "Search",
                    "package_id": "@itential/search",
                    "version": "1.1.6-2020.1.0.0",
                    "type": "Application",
                    "description": "A search service for IAP.",
                    "state": "RUNNING",
                    "connection": null,
                    "uptime": 17538.320644014,
                    "memoryUsage": {
                      "rss": 94420992,
                      "heapTotal": 21925888,
                      "heapUsed": 17956424,
                      "external": 19917879,
                      "arrayBuffers": 18574275
                    },
                    "cpuUsage": {
                      "user": 9477616,
                      "system": 1761305
                    },
                    "pid": 8246,
                    "logger": {
                      "console": "warn",
                      "file": "warn",
                      "syslog": {}
                    },
                    "routePrefix": "search",
                    "prevUptime": 17537.315709967
                  },
                  {
                    "id": "ServiceCatalog",
                    "package_id": "@itential/app-service_catalog",
                    "version": "3.10.4-2020.1.0.0",
                    "type": "Application",
                    "description": "Service Catalog",
                    "state": "RUNNING",
                    "connection": null,
                    "uptime": 17538.19946729,
                    "memoryUsage": {
                      "rss": 95625216,
                      "heapTotal": 22310912,
                      "heapUsed": 19869264,
                      "external": 20267004,
                      "arrayBuffers": 18923400
                    },
                    "cpuUsage": {
                      "user": 9322452,
                      "system": 1724692
                    },
                    "pid": 8247,
                    "logger": {
                      "console": "warn",
                      "file": "warn",
                      "syslog": {}
                    },
                    "routePrefix": "service_catalog",
                    "prevUptime": 17537.198773772
                  },
                  {
                    "id": "SmartTemplate",
                    "package_id": "@itential/app-smart_template",
                    "version": "1.9.4-2020.1.0.0",
                    "type": "Application",
                    "description": "Pronghorn Smart Templates",
                    "state": "RUNNING",
                    "connection": null,
                    "uptime": 17538.591046845,
                    "memoryUsage": {
                      "rss": 99995648,
                      "heapTotal": 23355392,
                      "heapUsed": 19906480,
                      "external": 20020323,
                      "arrayBuffers": 18676719
                    },
                    "cpuUsage": {
                      "user": 9397324,
                      "system": 1748875
                    },
                    "pid": 8249,
                    "logger": {
                      "console": "warn",
                      "file": "warn",
                      "syslog": {}
                    },
                    "routePrefix": "smart_template",
                    "prevUptime": 17537.591166209
                  },
                  {
                    "id": "TaskWorker",
                    "package_id": "@itential/app-task_worker",
                    "version": "3.1.4-2020.1.0.0",
                    "type": "Application",
                    "description": "Works tasks in Jobs",
                    "state": "RUNNING",
                    "connection": null,
                    "uptime": 17538.261899832,
                    "memoryUsage": {
                      "rss": 97402880,
                      "heapTotal": 22536192,
                      "heapUsed": 19347752,
                      "external": 19932924,
                      "arrayBuffers": 18589320
                    },
                    "cpuUsage": {
                      "user": 9370732,
                      "system": 1716859
                    },
                    "pid": 8251,
                    "logger": {
                      "console": "warn",
                      "file": "warn",
                      "syslog": {}
                    },
                    "routePrefix": "worker",
                    "prevUptime": 17537.261863658
                  },
                  {
                    "id": "TemplateBuilder",
                    "package_id": "@itential/app-template_builder",
                    "version": "2.4.4-2020.1.0.0",
                    "type": "Application",
                    "description": "Itential Template Builder application",
                    "state": "RUNNING",
                    "connection": null,
                    "uptime": 17538.628955266,
                    "memoryUsage": {
                      "rss": 106950656,
                      "heapTotal": 22048768,
                      "heapUsed": 17001392,
                      "external": 19831172,
                      "arrayBuffers": 18487568
                    },
                    "cpuUsage": {
                      "user": 9870558,
                      "system": 1796158
                    },
                    "pid": 8252,
                    "logger": {
                      "console": "warn",
                      "file": "warn",
                      "syslog": {}
                    },
                    "routePrefix": "template_builder",
                    "prevUptime": 17537.624392141
                  },
                  {
                    "id": "Tags",
                    "package_id": "@itential/tags",
                    "version": "2.2.12-2020.1.0.0",
                    "type": "Application",
                    "description": "IAP tag management.",
                    "state": "RUNNING",
                    "connection": null,
                    "uptime": 17538.397644369,
                    "memoryUsage": {
                      "rss": 94990336,
                      "heapTotal": 21348352,
                      "heapUsed": 18568280,
                      "external": 20020007,
                      "arrayBuffers": 18676403
                    },
                    "cpuUsage": {
                      "user": 9482355,
                      "system": 1700573
                    },
                    "pid": 8250,
                    "logger": {
                      "console": "warn",
                      "file": "warn",
                      "syslog": {}
                    },
                    "routePrefix": "tags",
                    "prevUptime": 17537.39402456
                  },
                  {
                    "id": "mongo",
                    "package_id": "@itential/adapter-mongo",
                    "version": "2.9.4-2020.1.0.0",
                    "type": "Adapter",
                    "description": "Pronghorn adapter to connect to mongo",
                    "state": "RUNNING",
                    "connection": {
                      "state": "ONLINE"
                    },
                    "uptime": 17538.197140005,
                    "memoryUsage": {
                      "rss": 94842880,
                      "heapTotal": 20738048,
                      "heapUsed": 17556680,
                      "external": 20121338,
                      "arrayBuffers": 18777734
                    },
                    "cpuUsage": {
                      "user": 9829471,
                      "system": 1850040
                    },
                    "pid": 8255,
                    "logger": {
                      "console": "warn",
                      "file": "warn",
                      "syslog": {}
                    },
                    "routePrefix": "mongo",
                    "prevUptime": 17537.19368536
                  },
                  {
                    "id": "redis",
                    "package_id": "@itential/adapter-redis",
                    "version": "2.0.10-2020.1.0.0",
                    "type": "Adapter",
                    "description": "Pronghorn adapter to connect to redis",
                    "state": "RUNNING",
                    "connection": {
                      "state": "ONLINE"
                    },
                    "uptime": 17538.571455176,
                    "memoryUsage": {
                      "rss": 96104448,
                      "heapTotal": 21577728,
                      "heapUsed": 18321392,
                      "external": 19856716,
                      "arrayBuffers": 18513112
                    },
                    "cpuUsage": {
                      "user": 9335822,
                      "system": 1732378
                    },
                    "pid": 8256,
                    "logger": {
                      "console": "warn",
                      "file": "warn",
                      "syslog": {}
                    },
                    "routePrefix": "redis",
                    "prevUptime": 17537.567972781
                  },
                  {
                    "id": "WorkFlowEngine",
                    "package_id": "@itential/app-workflow_engine",
                    "version": "7.14.4-2020.1.11.0",
                    "type": "Application",
                    "description": "Workflow Queue Application",
                    "state": "RUNNING",
                    "connection": null,
                    "uptime": 14312.550740078,
                    "memoryUsage": {
                      "rss": 474345472,
                      "heapTotal": 128688128,
                      "heapUsed": 93009960,
                      "external": 22127909,
                      "arrayBuffers": 20662559
                    },
                    "cpuUsage": {
                      "user": 110536907,
                      "system": 9371518
                    },
                    "pid": 18461,
                    "logger": {
                      "console": "warn",
                      "file": "warn",
                      "syslog": {}
                    },
                    "routePrefix": "workflow_engine",
                    "prevUptime": 14311.550823942
                  },
                  {
                    "id": "WorkflowBuilder",
                    "package_id": "@itential/app-workflow_builder",
                    "version": "5.10.4-2020.1.3.0",
                    "type": "Application",
                    "description": "Workflow Builder Application",
                    "state": "RUNNING",
                    "connection": null,
                    "uptime": 17538.357986752,
                    "memoryUsage": {
                      "rss": 108044288,
                      "heapTotal": 25890816,
                      "heapUsed": 21142064,
                      "external": 20407656,
                      "arrayBuffers": 19064053
                    },
                    "cpuUsage": {
                      "user": 12435004,
                      "system": 1995773
                    },
                    "pid": 8254,
                    "logger": {
                      "console": "warn",
                      "file": "warn",
                      "syslog": {}
                    },
                    "routePrefix": "workflow_builder",
                    "prevUptime": 17537.354816132
                  }
                ]
              },
              "outgoing": {
                "value": null
              }
            },
            "deprecated": false,
            "matched": [
              {
                "key": "canvasName",
                "highlightString": "<span class='highlight-string'>newVar</span>iable"
              }
            ],
            "groups": [],
            "x": 1.1459412780656304,
            "y": 0.45657894736842103
          },
          "c914": {
            "name": "evaluation",
            "canvasName": "evaluation",
            "summary": "Run Evaluation Task",
            "description": "Run an evaluation",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "type": "operation",
            "displayName": "WorkFlowEngine",
            "variables": {
              "incoming": {
                "all_true_flag": false,
                "evaluation_groups": [
                  {
                    "all_true_flag": false,
                    "evaluations": [
                      {
                        "query": "",
                        "operand_1": {
                          "variable": "return_data",
                          "task": "3388"
                        },
                        "operator": "==",
                        "operand_2": {
                          "variable": false,
                          "task": "static"
                        }
                      }
                    ]
                  }
                ]
              },
              "outgoing": {
                "return_value": null
              }
            },
            "deprecated": false,
            "matched": [
              {
                "key": "canvasName",
                "highlightString": "<span class='highlight-string'>eval</span>uation"
              },
              {
                "key": "summary",
                "highlightString": "Run <span class='highlight-string'>Eval</span>uation Task"
              },
              {
                "key": "description",
                "highlightString": "Run an <span class='highlight-string'>eval</span>uation"
              }
            ],
            "groups": [],
            "x": 1.0043177892918826,
            "y": 0.34363411619283063
          },
          "156b": {
            "name": "childJob",
            "canvasName": "childJob",
            "summary": "Run Child Job",
            "description": "Run a child job inside a workflow.",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "type": "operation",
            "displayName": "WorkFlowEngine",
            "variables": {
              "incoming": {
                "task": "",
                "workflow": "IAP Artifacts AW Install AE Artifact",
                "variables": {
                  "artifactBundle": {
                    "variable": "",
                    "task": "2fad",
                    "value": "return_data"
                  }
                },
                "data_array": "",
                "transformation": "",
                "loopType": ""
              },
              "outgoing": {
                "job_details": null
              }
            },
            "deprecated": false,
            "matched": [
              {
                "key": "canvasName",
                "highlightString": "<span class='highlight-string'>child</span>Job"
              },
              {
                "key": "summary",
                "highlightString": "Run <span class='highlight-string'>Child</span> Job"
              },
              {
                "key": "description",
                "highlightString": "Run a <span class='highlight-string'>child</span> job inside a workflow."
              }
            ],
            "groups": [],
            "actor": "job",
            "x": 2.1614853195164074,
            "y": 0.030263157894736843
          },
          "b3a6": {
            "name": "query",
            "canvasName": "query",
            "summary": "Query Artifact Link",
            "description": "Query data using a dot/bracket notation string and a matching key/value pair.",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "type": "operation",
            "displayName": "WorkFlowEngine",
            "variables": {
              "incoming": {
                "pass_on_null": false,
                "query": "artifactLink",
                "obj": "$var.156b.job_details"
              },
              "outgoing": {
                "return_data": null
              },
              "error": ""
            },
            "deprecated": false,
            "matched": [
              {
                "key": "canvasName",
                "highlightString": "<span class='highlight-string'>query</span>"
              },
              {
                "key": "summary",
                "highlightString": "<span class='highlight-string'>Query</span> Data Using 'json-query' Format"
              },
              {
                "key": "description",
                "highlightString": "<span class='highlight-string'>Query</span> data using a dot/bracket notation string and a matching key/value pair."
              }
            ],
            "groups": [],
            "x": 2.385146804835924,
            "y": 0.023485784919653894,
            "scheduled": false
          },
          "51dc": {
            "name": "downloadArtifact",
            "canvasName": "downloadArtifact",
            "summary": "Download Artifact",
            "description": "Download Artifact",
            "location": "Application",
            "app": "AppArtifacts",
            "displayName": "AppArtifacts",
            "type": "manual",
            "variables": {
              "incoming": {
                "artifactLink": "$var.b3a6.return_data",
                "gitLink": "$var.d6b3.return_data"
              },
              "outgoing": {},
              "error": ""
            },
            "view": "/app_artifacts/views/tasks/downloadArtifact",
            "deprecated": false,
            "matched": [
              {
                "key": "canvasName",
                "highlightString": "<span class='highlight-string'>downloa</span>dArtifact"
              },
              {
                "key": "summary",
                "highlightString": "<span class='highlight-string'>Downloa</span>d Artifact"
              },
              {
                "key": "description",
                "highlightString": "<span class='highlight-string'>Downloa</span>d Artifact"
              }
            ],
            "groups": [],
            "x": 2.791882556131261,
            "y": 0.3223684210526316,
            "scheduled": false
          },
          "fa3b": {
            "name": "childJob",
            "canvasName": "childJob",
            "summary": "CreatePublishedArtifact",
            "description": "Run a child job inside a workflow.",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "type": "operation",
            "displayName": "WorkFlowEngine",
            "variables": {
              "incoming": {
                "task": "",
                "workflow": "IAP Artifacts AW Create Published Artifact",
                "variables": {
                  "discovery": {
                    "variable": "",
                    "task": "586b",
                    "value": "current_item"
                  },
                  "zeroTouch": {
                    "variable": "",
                    "task": "3388",
                    "value": "return_data"
                  },
                  "readme": {
                    "variable": "",
                    "task": "f7a3",
                    "value": "return_data"
                  },
                  "name": {
                    "variable": "",
                    "task": "8194",
                    "value": "return_data"
                  },
                  "modules": {
                    "variable": "",
                    "task": "job",
                    "value": "healthcheck"
                  },
                  "packageJson": {
                    "variable": "",
                    "task": "4fcc",
                    "value": "return_data"
                  }
                },
                "data_array": "",
                "transformation": "",
                "loopType": ""
              },
              "outgoing": {
                "job_details": null
              }
            },
            "deprecated": false,
            "matched": [
              {
                "key": "canvasName",
                "highlightString": "<span class='highlight-string'>child</span>Job"
              },
              {
                "key": "summary",
                "highlightString": "Run <span class='highlight-string'>Child</span> Job"
              },
              {
                "key": "description",
                "highlightString": "Run a <span class='highlight-string'>child</span> job inside a workflow."
              }
            ],
            "groups": [],
            "actor": "job",
            "x": 1.7849740932642486,
            "y": -0.29666254635352285
          },
          "df99": {
            "name": "childJob",
            "canvasName": "childJob",
            "summary": "Add Artifact to Gitlab",
            "description": "Add an artifact to gitlab to contribute to open-source. Returns link to Gitlab repo",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "type": "operation",
            "displayName": "WorkFlowEngine",
            "variables": {
              "incoming": {
                "task": "",
                "workflow": "IAP Artifacts AW Create Git Repo",
                "variables": {
                  "export": {
                    "variable": "",
                    "task": "c546",
                    "value": "return_data"
                  },
                  "publishedArtifact": {
                    "variable": "",
                    "task": "2fad",
                    "value": "return_data"
                  }
                },
                "data_array": "",
                "transformation": "",
                "loopType": ""
              },
              "outgoing": {
                "job_details": null
              }
            },
            "deprecated": false,
            "matched": [
              {
                "key": "canvasName",
                "highlightString": "<span class='highlight-string'>child</span>Job"
              },
              {
                "key": "summary",
                "highlightString": "Run <span class='highlight-string'>Child</span> Job"
              },
              {
                "key": "description",
                "highlightString": "Run a <span class='highlight-string'>child</span> job inside a workflow."
              }
            ],
            "groups": [],
            "actor": "job",
            "x": 1.7918825561312608,
            "y": -0.5661310259579728
          },
          "c546": {
            "name": "query",
            "canvasName": "query",
            "summary": "Query Singular Export Artifact Export",
            "description": "Query data using a dot/bracket notation string and a matching key/value pair.",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "type": "operation",
            "displayName": "WorkFlowEngine",
            "variables": {
              "incoming": {
                "pass_on_null": false,
                "query": "export",
                "obj": "$var.fa3b.job_details"
              },
              "outgoing": {
                "return_data": null
              },
              "error": ""
            },
            "deprecated": false,
            "matched": [
              {
                "key": "canvasName",
                "highlightString": "<span class='highlight-string'>query</span>"
              },
              {
                "key": "summary",
                "highlightString": "<span class='highlight-string'>Query</span> Data Using 'json-query' Format"
              },
              {
                "key": "description",
                "highlightString": "<span class='highlight-string'>Query</span> data using a dot/bracket notation string and a matching key/value pair."
              }
            ],
            "groups": [],
            "x": 1.782383419689119,
            "y": -0.43757725587144625,
            "scheduled": false
          },
          "e9cd": {
            "name": "evaluation",
            "canvasName": "evaluation",
            "summary": "Run Evaluation Task",
            "description": "Run an evaluation",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "type": "operation",
            "displayName": "WorkFlowEngine",
            "variables": {
              "incoming": {
                "all_true_flag": false,
                "evaluation_groups": [
                  {
                    "all_true_flag": false,
                    "evaluations": [
                      {
                        "query": "",
                        "operand_1": {
                          "variable": "return_data",
                          "task": "3388"
                        },
                        "operator": "==",
                        "operand_2": {
                          "variable": false,
                          "task": "static"
                        }
                      }
                    ]
                  }
                ]
              },
              "outgoing": {
                "return_value": null
              }
            },
            "deprecated": false,
            "matched": [
              {
                "key": "canvasName",
                "highlightString": "<span class='highlight-string'>eval</span>uation"
              },
              {
                "key": "summary",
                "highlightString": "Run <span class='highlight-string'>Eval</span>uation Task"
              },
              {
                "key": "description",
                "highlightString": "Run an <span class='highlight-string'>eval</span>uation"
              }
            ],
            "groups": [],
            "x": 2.3911917098445596,
            "y": 0.325
          },
          "5fa3": {
            "name": "newVariable",
            "canvasName": "newVariable",
            "summary": "Create a Job Variable",
            "description": "Create a new Job variable by Job ID and assign it a value.",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "type": "operation",
            "displayName": "WorkFlowEngine",
            "variables": {
              "incoming": {
                "name": "Result",
                "value": ""
              },
              "outgoing": {
                "value": null
              }
            },
            "deprecated": false,
            "matched": [
              {
                "key": "summary",
                "highlightString": "Create a <span class='highlight-string'>Job</span> Variable"
              },
              {
                "key": "description",
                "highlightString": "Create a new <span class='highlight-string'>Job</span> variable by Job ID and assign it a value."
              }
            ],
            "groups": [],
            "x": 2.579447322970639,
            "y": 0.4986842105263158
          },
          "fb45": {
            "name": "query",
            "canvasName": "query",
            "summary": "Query Scope",
            "description": "Query data using a dot/bracket notation string and a matching key/value pair.",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "type": "operation",
            "displayName": "WorkFlowEngine",
            "variables": {
              "incoming": {
                "pass_on_null": false,
                "query": "newArtifact.scope",
                "obj": "$var.job.formData"
              },
              "outgoing": {
                "return_data": null
              },
              "error": ""
            },
            "deprecated": false,
            "matched": [
              {
                "key": "canvasName",
                "highlightString": "<span class='highlight-string'>query</span>"
              },
              {
                "key": "summary",
                "highlightString": "<span class='highlight-string'>Query</span> Data Using 'json-query' Format"
              },
              {
                "key": "description",
                "highlightString": "<span class='highlight-string'>Query</span> data using a dot/bracket notation string and a matching key/value pair."
              }
            ],
            "groups": [],
            "x": 0.016869728209934397,
            "y": 0.29061371841155237,
            "scheduled": false
          }
        },
        "transitions": {
          "171": {
            "630f": {
              "type": "standard",
              "state": "success"
            }
          },
          "1376": {
            "3a1": {
              "type": "standard",
              "state": "success"
            }
          },
          "2677": {
            "workflow_end": {
              "type": "standard",
              "state": "success"
            }
          },
          "3388": {
            "fb45": {
              "type": "standard",
              "state": "success"
            }
          },
          "4778": {},
          "7847": {},
          "8194": {
            "fa3b": {
              "type": "standard",
              "state": "success"
            }
          },
          "9969": {},
          "workflow_start": {
            "72a3": {
              "type": "standard",
              "state": "success"
            }
          },
          "workflow_end": {},
          "72a3": {
            "171": {
              "type": "standard",
              "state": "success"
            },
            "533c": {
              "type": "standard",
              "state": "failure"
            }
          },
          "a671": {},
          "e3d0": {
            "93c8": {
              "type": "standard",
              "state": "success"
            }
          },
          "533c": {
            "4f3": {
              "type": "standard",
              "state": "success"
            }
          },
          "f186": {},
          "3a1": {
            "ad64": {
              "type": "standard",
              "state": "success"
            }
          },
          "3b9": {
            "98ad": {
              "type": "standard",
              "state": "success"
            }
          },
          "98ad": {
            "bc7a": {
              "type": "standard",
              "state": "success"
            }
          },
          "bc7a": {
            "1ef0": {
              "type": "standard",
              "state": "success"
            }
          },
          "31c1": {
            "9aaa": {
              "type": "standard",
              "state": "success"
            }
          },
          "1ef0": {
            "a2d6": {
              "type": "standard",
              "state": "success"
            }
          },
          "a2d6": {
            "31c1": {
              "type": "standard",
              "state": "success"
            }
          },
          "ad64": {
            "47af": {
              "type": "standard",
              "state": "success"
            }
          },
          "4d92": {
            "2677": {
              "type": "standard",
              "state": "success"
            }
          },
          "4f3": {
            "6df": {
              "type": "standard",
              "state": "success"
            }
          },
          "6df": {
            "3b9": {
              "type": "standard",
              "state": "success"
            }
          },
          "de5e": {},
          "6cad": {},
          "b3bd": {},
          "4fcc": {
            "c914": {
              "type": "standard",
              "state": "success"
            }
          },
          "f7a3": {
            "2ae3": {
              "type": "standard",
              "state": "success"
            }
          },
          "47af": {
            "4d92": {
              "type": "standard",
              "state": "success"
            }
          },
          "da73": {
            "f7a3": {
              "type": "standard",
              "state": "success"
            }
          },
          "2ae3": {
            "4fcc": {
              "type": "standard",
              "state": "success"
            }
          },
          "9aaa": {
            "1376": {
              "type": "standard",
              "state": "success"
            }
          },
          "158e": {
            "376c": {
              "type": "standard",
              "state": "success"
            }
          },
          "376c": {
            "6bb8": {
              "type": "standard",
              "state": "success"
            }
          },
          "6bb8": {
            "da73": {
              "type": "standard",
              "state": "success"
            }
          },
          "630f": {
            "cf31": {
              "type": "standard",
              "state": "success"
            }
          },
          "cf31": {
            "3388": {
              "type": "standard",
              "state": "success"
            }
          },
          "586b": {
            "8194": {
              "type": "standard",
              "state": "success"
            },
            "d6b3": {
              "type": "standard",
              "state": "success"
            }
          },
          "cbfb": {
            "eaa9": {
              "type": "standard",
              "state": "failure"
            },
            "464d": {
              "type": "standard",
              "state": "success"
            }
          },
          "b84e": {
            "586b": {
              "type": "standard",
              "state": "success"
            }
          },
          "eaa9": {
            "156b": {
              "type": "standard",
              "state": "success"
            },
            "e9cd": {
              "type": "standard",
              "state": "failure"
            }
          },
          "d6b3": {
            "eaa9": {
              "type": "standard",
              "state": "success"
            }
          },
          "93c8": {
            "2fad": {
              "type": "standard",
              "state": "success"
            }
          },
          "2fad": {
            "cbfb": {
              "type": "standard",
              "state": "success"
            }
          },
          "464d": {
            "b84e": {
              "type": "standard",
              "state": "success"
            }
          },
          "460c": {},
          "f606": {
            "93c8": {
              "type": "standard",
              "state": "success"
            }
          },
          "c914": {
            "e3d0": {
              "type": "standard",
              "state": "success"
            },
            "f606": {
              "type": "standard",
              "state": "failure"
            }
          },
          "156b": {
            "b3a6": {
              "type": "standard",
              "state": "success"
            }
          },
          "b3a6": {
            "e9cd": {
              "type": "standard",
              "state": "success"
            }
          },
          "51dc": {
            "workflow_end": {
              "type": "standard",
              "state": "success"
            }
          },
          "fa3b": {
            "c546": {
              "type": "standard",
              "state": "success"
            }
          },
          "df99": {},
          "c546": {
            "df99": {
              "type": "standard",
              "state": "success"
            }
          },
          "e9cd": {
            "51dc": {
              "type": "standard",
              "state": "success"
            },
            "5fa3": {
              "type": "standard",
              "state": "failure"
            }
          },
          "5fa3": {
            "workflow_end": {
              "type": "standard",
              "state": "success"
            }
          },
          "ebce": {},
          "69b0": {},
          "fb45": {
            "158e": {
              "type": "standard",
              "state": "success"
            }
          }
        },
        "font_size": 12,
        "created": "2020-05-20T20:50:24.025Z",
        "created_by": {
          "provenance": "Local AAA",
          "username": "admin@pronghorn",
          "firstname": "admin",
          "inactive": false,
          "email": ""
        },
        "createdVersion": "5.10.4-2020.1.3.0",
        "last_updated": "2022-01-04T17:04:02.348Z",
        "last_updated_by": {
          "provenance": "Local AAA",
          "username": "admin@pronghorn",
          "firstname": "admin",
          "inactive": false,
          "email": ""
        },
        "lastUpdatedVersion": "5.40.5-2021.1.59.0",
        "type": "automation",
        "description": null,
        "inputSchema": {
          "type": "object",
          "properties": {
            "formData": {
              "type": "object",
              "examples": [
                {
                  "name": "value"
                }
              ]
            }
          },
          "required": [
            "formData"
          ]
        },
        "outputSchema": {
          "type": "object",
          "properties": {
            "formData": {
              "type": "object",
              "examples": [
                {
                  "name": "value"
                }
              ]
            },
            "_id": {
              "type": "string",
              "pattern": "^[0-9a-f]{24}$"
            },
            "initiator": {
              "type": "string"
            }
          }
        },
        "tags": [],
        "groups": []
      }
    },
    {
      "type": "workflow",
      "data": {
        "name": "Shallow Remove Artifact",
        "tasks": {
          "8596": {
            "name": "evaluation",
            "canvasName": "evaluation",
            "summary": "Are there any artifacts that didn't get removed?",
            "description": "Are there any artifacts that didn't get removed?",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "type": "operation",
            "displayName": "WorkFlowEngine",
            "variables": {
              "incoming": {
                "all_true_flag": false,
                "evaluation_groups": [
                  {
                    "all_true_flag": false,
                    "evaluations": [
                      {
                        "query": "",
                        "operand_1": {
                          "variable": "length",
                          "task": "3b19"
                        },
                        "operator": "<=",
                        "operand_2": {
                          "variable": 0,
                          "task": "static"
                        }
                      }
                    ]
                  }
                ]
              },
              "outgoing": {
                "return_value": null
              }
            },
            "deprecated": false,
            "matched": [
              {
                "key": "canvasName",
                "highlightString": "<span class='highlight-string'>eval</span>uation"
              },
              {
                "key": "summary",
                "highlightString": "Run <span class='highlight-string'>Eval</span>uation Task"
              },
              {
                "key": "description",
                "highlightString": "Run an <span class='highlight-string'>eval</span>uation"
              }
            ],
            "groups": [],
            "x": 0.7078464106844741,
            "y": 0.48687552921253174
          },
          "workflow_start": {
            "name": "workflow_start",
            "groups": [],
            "x": 0.0651085141903172,
            "y": 0.48010160880609654
          },
          "workflow_end": {
            "name": "workflow_end",
            "groups": [],
            "x": 0.9874791318864775,
            "y": 0.4877222692633362
          },
          "e3b6": {
            "name": "forEach",
            "canvasName": "forEach",
            "summary": "For Each Loop",
            "description": "Iterate over each item in an array",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "type": "operation",
            "displayName": "WorkFlowEngine",
            "variables": {
              "incoming": {
                "data_array": "$var.b19e.artifactIdArray"
              },
              "outgoing": {
                "current_item": null
              },
              "error": ""
            },
            "deprecated": false,
            "matched": [
              {
                "key": "canvasName",
                "highlightString": "<span class='highlight-string'>forEa</span>ch"
              }
            ],
            "groups": [],
            "x": 0.42237061769616024,
            "y": 0.489415749364945,
            "scheduled": false
          },
          "c00c": {
            "name": "newVariable",
            "canvasName": "newVariable",
            "summary": "Create a Job Variable",
            "description": "Create a new Job variable by Job ID and assign it a value.",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "type": "operation",
            "displayName": "WorkFlowEngine",
            "variables": {
              "incoming": {
                "name": "didNotDelete",
                "value": []
              },
              "outgoing": {
                "value": null
              }
            },
            "deprecated": false,
            "matched": [
              {
                "key": "canvasName",
                "highlightString": "<span class='highlight-string'>new</span><span class='highlight-string'>Va</span>riable"
              },
              {
                "key": "description",
                "highlightString": "Create a <span class='highlight-string'>new</span> Job <span class='highlight-string'>va</span>riable by Job ID and assign it a value."
              },
              {
                "key": "summary",
                "highlightString": "Create a Job <span class='highlight-string'>Va</span>riable"
              }
            ],
            "groups": [],
            "x": 0.17445742904841402,
            "y": 0.4826418289585097
          },
          "6bbe": {
            "name": "evaluation",
            "canvasName": "evaluation",
            "summary": "Did artifact get removed?",
            "description": "Did artifact get removed?",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "type": "operation",
            "displayName": "WorkFlowEngine",
            "variables": {
              "incoming": {
                "all_true_flag": false,
                "evaluation_groups": [
                  {
                    "all_true_flag": false,
                    "evaluations": [
                      {
                        "query": "",
                        "operand_1": {
                          "variable": "Delete",
                          "task": "2bfe"
                        },
                        "operator": "==",
                        "operand_2": {
                          "variable": 1,
                          "task": "static"
                        }
                      }
                    ]
                  }
                ]
              },
              "outgoing": {
                "return_value": null
              }
            },
            "deprecated": false,
            "matched": [
              {
                "key": "canvasName",
                "highlightString": "<span class='highlight-string'>eval</span>uation"
              },
              {
                "key": "summary",
                "highlightString": "Run <span class='highlight-string'>Eval</span>uation Task"
              },
              {
                "key": "description",
                "highlightString": "Run an <span class='highlight-string'>eval</span>uation"
              }
            ],
            "groups": [],
            "x": 0.42320534223706174,
            "y": 0.7392040643522438
          },
          "b07e": {
            "name": "ViewData",
            "canvasName": "ViewData",
            "summary": "View Data",
            "description": "View data in a pretty format",
            "location": "Application",
            "app": "WorkFlowEngine",
            "displayName": "Tools",
            "type": "manual",
            "variables": {
              "incoming": {
                "header": "",
                "message": "The following Artifacts did not get removed:",
                "body": "$var.job.didNotDelete",
                "variables": {},
                "btn_success": "",
                "btn_failure": ""
              },
              "outgoing": {},
              "error": ""
            },
            "view": "/workflow_engine/task/ViewData",
            "deprecated": false,
            "matched": [
              {
                "key": "canvasName",
                "highlightString": "<span class='highlight-string'>ViewD</span>ata"
              }
            ],
            "groups": [],
            "x": 0.8530884808013356,
            "y": 0.3861134631668078,
            "scheduled": false
          },
          "5daa": {
            "name": "arrayPush",
            "canvasName": "push",
            "summary": "Adds an element to a list of artifacts that did not get removed",
            "description": "Adds an element to a list of artifacts that did not get removed",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "type": "automatic",
            "displayName": "Array",
            "variables": {
              "incoming": {
                "arr": "$var.job.didNotDelete",
                "elementN": "$var.e3b6.current_item"
              },
              "outgoing": {
                "pushedArray": "$var.job.didNotDelete"
              },
              "error": ""
            },
            "deprecated": false,
            "matched": [
              {
                "key": "displayName",
                "highlightString": "<span class='highlight-string'>Arra</span>y"
              },
              {
                "key": "summary",
                "highlightString": "Adds an element to the end of the <span class='highlight-string'>arra</span>y."
              },
              {
                "key": "description",
                "highlightString": "Adds one element to the end of an <span class='highlight-string'>arra</span>y and returns the (newly modified) array."
              }
            ],
            "groups": [],
            "actor": "Pronghorn",
            "x": 0.5784641068447413,
            "y": 0.8247248094834886,
            "scheduled": false
          },
          "3b19": {
            "name": "arrayLength",
            "canvasName": "length",
            "summary": "Gets the length of an array of artifacts that did not get deleted",
            "description": "Gets the length of an array of artifacts that did not get deleted",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "type": "automatic",
            "displayName": "Array",
            "variables": {
              "incoming": {
                "arr": "$var.job.didNotDelete"
              },
              "outgoing": {
                "length": null
              },
              "error": ""
            },
            "deprecated": false,
            "matched": [
              {
                "key": "canvasName",
                "highlightString": "<span class='highlight-string'>length</span>"
              },
              {
                "key": "summary",
                "highlightString": "Gets the <span class='highlight-string'>length</span> of an array."
              }
            ],
            "groups": [],
            "actor": "Pronghorn",
            "x": 0.5901502504173622,
            "y": 0.48687552921253174,
            "scheduled": false
          },
          "b19e": {
            "name": "transformation",
            "canvasName": "transformation",
            "summary": "JSON Transformation",
            "description": "Perform a JSON Transformation using the JST library.",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "type": "operation",
            "displayName": "WorkFlowEngine",
            "variables": {
              "incoming": {
                "tr_id": "5f7cd8a23847573af4852ec1",
                "variableMap": {
                  "incomingFormData": "$var.job.formData"
                },
                "options": {
                  "extractOutput": true
                }
              },
              "outgoing": {
                "artifactIdArray": null
              }
            },
            "deprecated": false,
            "matched": [
              {
                "key": "description",
                "highlightString": "Perform a JSON Transformation using the <span class='highlight-string'>JST</span> library."
              }
            ],
            "groups": [],
            "x": 0.29799666110183637,
            "y": 0.4928027095681626
          },
          "2bfe": {
            "name": "shallowRemoveArtifactFromAdminEssentials",
            "canvasName": "shallowRemoveArtifactFromAdminEssentials",
            "summary": "Shallow removes an artifact from AE via direct mongo deletion",
            "description": "Shallow removes an artifact from admin essentials",
            "location": "Application",
            "locationType": null,
            "app": "AppArtifacts",
            "type": "automatic",
            "displayName": "AppArtifacts",
            "variables": {
              "incoming": {
                "artifactName": "$var.e3b6.current_item"
              },
              "outgoing": {
                "Delete": null
              },
              "error": ""
            },
            "deprecated": false,
            "matched": [
              {
                "key": "canvasName",
                "highlightString": "<span class='highlight-string'>shall</span>owRemoveArtifactFromAdminEssentials"
              },
              {
                "key": "summary",
                "highlightString": "<span class='highlight-string'>Shall</span>ow removes an artifact from AE via direct mongo deletion"
              },
              {
                "key": "description",
                "highlightString": "<span class='highlight-string'>Shall</span>ow removes an artifact from admin essentials"
              }
            ],
            "groups": [],
            "actor": "Pronghorn",
            "x": 0.41986644407345575,
            "y": 0.6299745977984759,
            "scheduled": false
          }
        },
        "transitions": {
          "8596": {
            "workflow_end": {
              "type": "standard",
              "state": "success"
            },
            "b07e": {
              "type": "standard",
              "state": "failure"
            }
          },
          "workflow_start": {
            "c00c": {
              "type": "standard",
              "state": "success"
            }
          },
          "workflow_end": {},
          "da09": {},
          "e3b6": {
            "3b19": {
              "type": "standard",
              "state": "success"
            },
            "2bfe": {
              "type": "standard",
              "state": "loop"
            }
          },
          "c00c": {
            "b19e": {
              "type": "standard",
              "state": "success"
            }
          },
          "6bbe": {
            "5daa": {
              "type": "standard",
              "state": "failure"
            }
          },
          "b07e": {
            "workflow_end": {
              "type": "standard",
              "state": "success"
            }
          },
          "5daa": {},
          "3b19": {
            "8596": {
              "type": "standard",
              "state": "success"
            }
          },
          "b19e": {
            "e3b6": {
              "type": "standard",
              "state": "success"
            }
          },
          "2bfe": {
            "6bbe": {
              "type": "standard",
              "state": "success"
            }
          }
        },
        "font_size": 12,
        "created": "2020-10-06T13:38:58.822Z",
        "created_by": {
          "provenance": "Itential AAA LDAP",
          "username": "nick.andreano",
          "firstname": "nick",
          "inactive": true
        },
        "createdVersion": "5.10.4-2020.1.22.0",
        "last_updated": "2021-11-09T14:55:00.526Z",
        "last_updated_by": {
          "provenance": "Local AAA",
          "username": "admin@pronghorn",
          "firstname": "admin",
          "inactive": false,
          "email": ""
        },
        "lastUpdatedVersion": "5.40.5-2021.1.59.0",
        "type": "automation",
        "description": null,
        "inputSchema": {
          "type": "object",
          "properties": {
            "formData": {
              "type": [
                "array",
                "boolean",
                "null",
                "number",
                "object",
                "string"
              ]
            }
          },
          "required": [
            "formData"
          ]
        },
        "outputSchema": {
          "type": "object",
          "properties": {
            "formData": {
              "type": [
                "array",
                "boolean",
                "null",
                "number",
                "object",
                "string"
              ]
            },
            "_id": {
              "type": "string",
              "pattern": "^[0-9a-f]{24}$"
            },
            "initiator": {
              "type": "string"
            },
            "didNotDelete": {
              "title": "pushedArray",
              "type": "array",
              "examples": [
                [
                  "Device1",
                  "Device2",
                  "Device3"
                ]
              ]
            }
          }
        },
        "tags": [],
        "groups": []
      }
    },
    {
      "type": "workflow",
      "data": {
        "name": "IAP Artifacts AW GitLab Update",
        "tasks": {
          "2364": {
            "name": "stringConcat",
            "summary": "Concatenates repo id",
            "description": "Concatenates a string with a second string(s). The second parameter can be a string or array.",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "displayName": "String",
            "type": "automatic",
            "variables": {
              "incoming": {
                "str": "https://gitlab.com/api/v4/projects/",
                "stringN": "$var.job.projectArray"
              },
              "outgoing": {
                "combinedStrings": null
              },
              "error": ""
            },
            "deprecated": false,
            "matched": [
              {
                "key": "name",
                "highlightString": "<span class='highlight-string'>concat</span>"
              },
              {
                "key": "summary",
                "highlightString": "<span class='highlight-string'>Concat</span>enates strings together."
              },
              {
                "key": "description",
                "highlightString": "<span class='highlight-string'>Concat</span>enates a string with a second string(s). The second parameter can be a string or array."
              }
            ],
            "groups": [],
            "actor": "Pronghorn",
            "x": 0.7899917965545529,
            "y": 0.5114503816793893,
            "scheduled": false,
            "canvasName": "concat"
          },
          "2763": {
            "name": "ViewData",
            "summary": "Error from Gitlab",
            "description": "View data in a pretty format",
            "location": "Application",
            "app": "WorkFlowEngine",
            "displayName": "Tools",
            "type": "manual",
            "variables": {
              "incoming": {
                "header": "Error from Gitlab",
                "message": "Encountered an error from Gitlab when performing REST POST Commit",
                "body": "$var.job.err",
                "variables": {},
                "btn_success": "Try Again",
                "btn_failure": ""
              },
              "outgoing": {},
              "error": ""
            },
            "view": "/workflow_engine/task/ViewData",
            "deprecated": false,
            "matched": [
              {
                "key": "name",
                "highlightString": "<span class='highlight-string'>ViewData</span>"
              }
            ],
            "groups": [],
            "x": 1.3305716652858326,
            "y": 1.5175438596491229,
            "scheduled": false
          },
          "3556": {
            "name": "newVariable",
            "summary": "Create a Job Variable",
            "description": "Create a new Job variable by Job ID and assign it a value.",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "displayName": "WorkFlowEngine",
            "type": "operation",
            "variables": {
              "incoming": {
                "name": "urlEncodedNamespace",
                "value": [
                  "itentialopensource%2Fpre-built-automations%2Fstaging"
                ]
              },
              "outgoing": {
                "value": null
              }
            },
            "deprecated": false,
            "matched": [
              {
                "key": "summary",
                "highlightString": "Create a <span class='highlight-string'>Job</span> Variable"
              },
              {
                "key": "description",
                "highlightString": "Create a new <span class='highlight-string'>Job</span> variable by Job ID and assign it a value."
              }
            ],
            "groups": [],
            "x": -0.487986743993372,
            "y": 0.30701754385964913
          },
          "7064": {
            "name": "stringConcat",
            "summary": "Create base path",
            "description": "Concatenates a string with a second string(s). The second parameter can be a string or array.",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "displayName": "String",
            "type": "automatic",
            "variables": {
              "incoming": {
                "str": "https://gitlab.com/api/v4/projects/",
                "stringN": "$var.job.urlEncodedNamespace"
              },
              "outgoing": {
                "combinedStrings": null
              },
              "error": ""
            },
            "deprecated": false,
            "matched": [
              {
                "key": "name",
                "highlightString": "<span class='highlight-string'>concat</span>"
              },
              {
                "key": "summary",
                "highlightString": "<span class='highlight-string'>Concat</span>enates strings together."
              },
              {
                "key": "description",
                "highlightString": "<span class='highlight-string'>Concat</span>enates a string with a second string(s). The second parameter can be a string or array."
              }
            ],
            "groups": [],
            "actor": "Pronghorn",
            "x": -0.18227009113504558,
            "y": 0.49298245614035086,
            "scheduled": false,
            "canvasName": "concat"
          },
          "7223": {
            "name": "query",
            "summary": "Query create data",
            "description": "Query data using a dot/bracket notation string and a matching key/value pair.",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "displayName": "WorkFlowEngine",
            "type": "operation",
            "variables": {
              "incoming": {
                "pass_on_null": false,
                "query": "create",
                "obj": "$var.job.artifact"
              },
              "outgoing": {
                "return_data": null
              },
              "error": ""
            },
            "deprecated": false,
            "matched": [
              {
                "key": "name",
                "highlightString": "<span class='highlight-string'>query</span>"
              },
              {
                "key": "summary",
                "highlightString": "<span class='highlight-string'>Query</span> Data Using 'json-query' Format"
              },
              {
                "key": "description",
                "highlightString": "<span class='highlight-string'>Query</span> data using a dot/bracket notation string and a matching key/value pair."
              }
            ],
            "groups": [],
            "x": 0.8982772764561116,
            "y": 0.6992366412213741,
            "scheduled": false
          },
          "workflow_start": {
            "name": "workflow_start",
            "groups": [],
            "x": -0.5161557580778791,
            "y": 0.47368421052631576,
            "summary": "workflow_start",
            "description": "workflow_start"
          },
          "workflow_end": {
            "name": "workflow_end",
            "groups": [],
            "x": 1.8359310910582445,
            "y": 1.0778625954198473,
            "summary": "workflow_end",
            "description": "workflow_end"
          },
          "a7e0": {
            "name": "newVariable",
            "summary": "Create a Job Variable",
            "description": "Create a new Job variable by Job ID and assign it a value.",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "displayName": "WorkFlowEngine",
            "type": "operation",
            "variables": {
              "incoming": {
                "name": "headers",
                "value": {
                  "Authorization": "Bearer __ezebRybmJzPgDMv4nC"
                }
              },
              "outgoing": {
                "value": null
              }
            },
            "deprecated": false,
            "matched": [
              {
                "key": "name",
                "highlightString": "<span class='highlight-string'>new</span>Variable"
              },
              {
                "key": "description",
                "highlightString": "Create a <span class='highlight-string'>new</span> Job variable by Job ID and assign it a value."
              }
            ],
            "groups": [],
            "x": -0.4863297431648716,
            "y": -0.021052631578947368
          },
          "b52c": {
            "name": "restCall",
            "summary": "POST Create Commit",
            "description": "Execute a REST call",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "displayName": "Tools",
            "type": "automatic",
            "variables": {
              "incoming": {
                "uri": "$var.c618.combinedStrings",
                "verb": "POST",
                "user": "",
                "password": "",
                "headers": "$var.a7e0.value",
                "body": "$var.7f83.merged_object",
                "responseHeaders": true
              },
              "outgoing": {
                "response": null
              },
              "error": "$var.job.err"
            },
            "deprecated": false,
            "matched": [
              {
                "key": "name",
                "highlightString": "<span class='highlight-string'>rest</span>Call"
              },
              {
                "key": "summary",
                "highlightString": "<span class='highlight-string'>REST</span> Call"
              },
              {
                "key": "description",
                "highlightString": "Execute a <span class='highlight-string'>REST</span> call"
              }
            ],
            "groups": [],
            "actor": "Pronghorn",
            "x": 1.3305988515176375,
            "y": 1.0763358778625953,
            "scheduled": false
          },
          "7f83": {
            "name": "merge",
            "summary": "Merge Data",
            "description": "Merge data into a single object",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "displayName": "WorkFlowEngine",
            "type": "operation",
            "variables": {
              "incoming": {
                "data_to_merge": [
                  {
                    "key": "branch",
                    "value": {
                      "task": "job",
                      "variable": "branch"
                    }
                  },
                  {
                    "key": "start_branch",
                    "value": {
                      "task": "static",
                      "variable": "master"
                    }
                  },
                  {
                    "key": "commit_message",
                    "value": {
                      "task": "static",
                      "variable": "update from Itential Artifacts"
                    }
                  },
                  {
                    "key": "author_name",
                    "value": {
                      "task": "static",
                      "variable": "Itential Artifacts"
                    }
                  },
                  {
                    "key": "actions",
                    "value": {
                      "task": "d2b2",
                      "variable": "combinedArray"
                    }
                  }
                ]
              },
              "outgoing": {
                "merged_object": null
              }
            },
            "deprecated": false,
            "matched": [
              {
                "key": "name",
                "highlightString": "<span class='highlight-string'>merge</span>"
              },
              {
                "key": "summary",
                "highlightString": "<span class='highlight-string'>Merge</span> Data"
              },
              {
                "key": "description",
                "highlightString": "<span class='highlight-string'>Merge</span> data into a single object"
              }
            ],
            "groups": [],
            "x": 1.3305988515176375,
            "y": 0.5251908396946565
          },
          "5ad7": {
            "name": "query",
            "summary": "Query create commit data",
            "description": "Query data using a dot/bracket notation string and a matching key/value pair.",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "displayName": "WorkFlowEngine",
            "type": "operation",
            "variables": {
              "incoming": {
                "pass_on_null": false,
                "query": "commitActions",
                "obj": "$var.c32d.job_details"
              },
              "outgoing": {
                "return_data": null
              },
              "error": ""
            },
            "deprecated": false,
            "matched": [
              {
                "key": "name",
                "highlightString": "<span class='highlight-string'>query</span>"
              },
              {
                "key": "summary",
                "highlightString": "<span class='highlight-string'>Query</span> Data Using 'json-query' Format"
              },
              {
                "key": "description",
                "highlightString": "<span class='highlight-string'>Query</span> data using a dot/bracket notation string and a matching key/value pair."
              }
            ],
            "groups": [],
            "x": 1.0984413453650532,
            "y": 0.5633587786259542,
            "scheduled": false
          },
          "6e7d": {
            "name": "restCall",
            "summary": "GET Project",
            "description": "Execute a REST call",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "displayName": "Tools",
            "type": "automatic",
            "variables": {
              "incoming": {
                "uri": "$var.b345.combinedStrings",
                "verb": "GET",
                "user": "",
                "password": "",
                "headers": "$var.a7e0.value",
                "body": "",
                "responseHeaders": true
              },
              "outgoing": {
                "response": null
              },
              "error": "$var.job.err"
            },
            "deprecated": false,
            "matched": [
              {
                "key": "name",
                "highlightString": "<span class='highlight-string'>rest</span>Call"
              },
              {
                "key": "summary",
                "highlightString": "<span class='highlight-string'>REST</span> Call"
              },
              {
                "key": "description",
                "highlightString": "Execute a <span class='highlight-string'>REST</span> call"
              }
            ],
            "groups": [],
            "actor": "Pronghorn",
            "x": 0.21292460646230324,
            "y": 0.4964912280701754,
            "scheduled": false
          },
          "bab9": {
            "name": "stringConcat",
            "summary": "Concatenate URL encoding",
            "description": "Concatenates a string with a second string(s). The second parameter can be a string or array.",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "displayName": "String",
            "type": "automatic",
            "variables": {
              "incoming": {
                "str": "$var.7064.combinedStrings",
                "stringN": [
                  "%2F"
                ]
              },
              "outgoing": {
                "combinedStrings": null
              },
              "error": ""
            },
            "deprecated": false,
            "matched": [
              {
                "key": "name",
                "highlightString": "<span class='highlight-string'>concat</span>"
              },
              {
                "key": "summary",
                "highlightString": "<span class='highlight-string'>Concat</span>enates strings together."
              },
              {
                "key": "description",
                "highlightString": "<span class='highlight-string'>Concat</span>enates a string with a second string(s). The second parameter can be a string or array."
              }
            ],
            "groups": [],
            "actor": "Pronghorn",
            "x": -0.056338028169014086,
            "y": 0.49298245614035086,
            "scheduled": false,
            "canvasName": "concat"
          },
          "b345": {
            "name": "stringConcat",
            "summary": "Concatenate repo name",
            "description": "Concatenates a string with a second string(s). The second parameter can be a string or array.",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "displayName": "String",
            "type": "automatic",
            "variables": {
              "incoming": {
                "str": "$var.bab9.combinedStrings",
                "stringN": "$var.job.repoNameArray"
              },
              "outgoing": {
                "combinedStrings": null
              },
              "error": ""
            },
            "deprecated": false,
            "matched": [
              {
                "key": "name",
                "highlightString": "<span class='highlight-string'>concat</span>"
              },
              {
                "key": "summary",
                "highlightString": "<span class='highlight-string'>Concat</span>enates strings together."
              },
              {
                "key": "description",
                "highlightString": "<span class='highlight-string'>Concat</span>enates a string with a second string(s). The second parameter can be a string or array."
              }
            ],
            "groups": [],
            "actor": "Pronghorn",
            "x": 0.0811930405965203,
            "y": 0.48947368421052634,
            "scheduled": false,
            "canvasName": "concat"
          },
          "18ea": {
            "name": "query",
            "summary": "Query repo id",
            "description": "Query data using a dot/bracket notation string and a matching key/value pair.",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "displayName": "WorkFlowEngine",
            "type": "operation",
            "variables": {
              "incoming": {
                "pass_on_null": false,
                "query": "body.id",
                "obj": "$var.6e7d.response"
              },
              "outgoing": {
                "return_data": null
              },
              "error": ""
            },
            "deprecated": false,
            "matched": [
              {
                "key": "name",
                "highlightString": "<span class='highlight-string'>query</span>"
              },
              {
                "key": "summary",
                "highlightString": "<span class='highlight-string'>Query</span> Data Using 'json-query' Format"
              },
              {
                "key": "description",
                "highlightString": "<span class='highlight-string'>Query</span> data using a dot/bracket notation string and a matching key/value pair."
              }
            ],
            "groups": [],
            "x": 0.299917149958575,
            "y": 0.48771929824561405,
            "scheduled": false
          },
          "dfce": {
            "name": "numberToString",
            "summary": "Convert repo id to string.",
            "description": "Returns a string representing the specified Number object.",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "displayName": "Number",
            "type": "automatic",
            "variables": {
              "incoming": {
                "num": "$var.18ea.return_data",
                "radix": ""
              },
              "outgoing": {
                "numToString": null
              },
              "error": ""
            },
            "deprecated": false,
            "matched": [
              {
                "key": "name",
                "highlightString": "to<span class='highlight-string'>String</span>"
              },
              {
                "key": "summary",
                "highlightString": "Convert number to <span class='highlight-string'>string</span>."
              },
              {
                "key": "description",
                "highlightString": "Returns a <span class='highlight-string'>string</span> representing the specified Number object."
              }
            ],
            "groups": [],
            "actor": "Pronghorn",
            "x": 0.4076222038111019,
            "y": 0.49122807017543857,
            "scheduled": false,
            "canvasName": "toString"
          },
          "c618": {
            "name": "stringConcat",
            "summary": "Create commit uri",
            "description": "Concatenates a string with a second string(s). The second parameter can be a string or array.",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "displayName": "String",
            "type": "automatic",
            "variables": {
              "incoming": {
                "str": "$var.2364.combinedStrings",
                "stringN": [
                  "/repository/commits"
                ]
              },
              "outgoing": {
                "combinedStrings": null
              },
              "error": ""
            },
            "deprecated": false,
            "matched": [
              {
                "key": "name",
                "highlightString": "<span class='highlight-string'>concat</span>"
              },
              {
                "key": "summary",
                "highlightString": "<span class='highlight-string'>Concat</span>enates strings together."
              },
              {
                "key": "description",
                "highlightString": "<span class='highlight-string'>Concat</span>enates a string with a second string(s). The second parameter can be a string or array."
              }
            ],
            "groups": [],
            "actor": "Pronghorn",
            "x": 0.8974569319114027,
            "y": 0.5114503816793893,
            "scheduled": false,
            "canvasName": "concat"
          },
          "7b4d": {
            "name": "stringConcat",
            "summary": "Create MR uri",
            "description": "Concatenates a string with a second string(s). The second parameter can be a string or array.",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "displayName": "String",
            "type": "automatic",
            "variables": {
              "incoming": {
                "str": "$var.2364.combinedStrings",
                "stringN": [
                  "/merge_requests"
                ]
              },
              "outgoing": {
                "combinedStrings": null
              },
              "error": ""
            },
            "deprecated": false,
            "matched": [
              {
                "key": "name",
                "highlightString": "<span class='highlight-string'>concat</span>"
              },
              {
                "key": "summary",
                "highlightString": "<span class='highlight-string'>Concat</span>enates strings together."
              },
              {
                "key": "description",
                "highlightString": "<span class='highlight-string'>Concat</span>enates a string with a second string(s). The second parameter can be a string or array."
              }
            ],
            "groups": [],
            "actor": "Pronghorn",
            "x": 1.4126333059885152,
            "y": 0.5206106870229008,
            "scheduled": false,
            "canvasName": "concat"
          },
          "9c5d": {
            "name": "restCall",
            "summary": "POST Create MR",
            "description": "Execute a REST call",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "displayName": "Tools",
            "type": "automatic",
            "variables": {
              "incoming": {
                "uri": "$var.7b4d.combinedStrings",
                "verb": "POST",
                "user": "",
                "password": "",
                "headers": "$var.a7e0.value",
                "body": "$var.b9e.merged_object",
                "responseHeaders": true
              },
              "outgoing": {
                "response": null
              },
              "error": "$var.job.err"
            },
            "deprecated": false,
            "matched": [
              {
                "key": "name",
                "highlightString": "<span class='highlight-string'>rest</span>Call"
              },
              {
                "key": "summary",
                "highlightString": "<span class='highlight-string'>REST</span> Call"
              },
              {
                "key": "description",
                "highlightString": "Execute a <span class='highlight-string'>REST</span> call"
              }
            ],
            "groups": [],
            "actor": "Pronghorn",
            "x": 1.4995898277276456,
            "y": 1.0748091603053436,
            "scheduled": false
          },
          "b9e": {
            "name": "merge",
            "summary": "MR POST body",
            "description": "Merge data into a single object",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "displayName": "WorkFlowEngine",
            "type": "operation",
            "variables": {
              "incoming": {
                "data_to_merge": [
                  {
                    "key": "source_branch",
                    "value": {
                      "task": "job",
                      "variable": "branch"
                    }
                  },
                  {
                    "key": "target_branch",
                    "value": {
                      "task": "static",
                      "variable": "master"
                    }
                  },
                  {
                    "key": "title",
                    "value": {
                      "task": "static",
                      "variable": "update from Itential Artifacts"
                    }
                  },
                  {
                    "key": "remove_source_branch",
                    "value": {
                      "task": "static",
                      "variable": true
                    }
                  }
                ]
              },
              "outgoing": {
                "merged_object": null
              }
            },
            "deprecated": false,
            "matched": [
              {
                "key": "name",
                "highlightString": "<span class='highlight-string'>merge</span>"
              },
              {
                "key": "summary",
                "highlightString": "<span class='highlight-string'>Merge</span> Data"
              },
              {
                "key": "description",
                "highlightString": "<span class='highlight-string'>Merge</span> data into a single object"
              }
            ],
            "groups": [],
            "x": 1.502050861361772,
            "y": 0.5190839694656488
          },
          "e60e": {
            "name": "newVariable",
            "summary": "Create a Job Variable",
            "description": "Create a new Job variable by Job ID and assign it a value.",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "displayName": "WorkFlowEngine",
            "type": "operation",
            "variables": {
              "incoming": {
                "name": "branch",
                "value": "artifact-update"
              },
              "outgoing": {
                "value": null
              }
            },
            "deprecated": false,
            "matched": [
              {
                "key": "summary",
                "highlightString": "Create a <span class='highlight-string'>Job</span> Variable"
              },
              {
                "key": "description",
                "highlightString": "Create a new <span class='highlight-string'>Job</span> variable by Job ID and assign it a value."
              }
            ],
            "groups": [],
            "x": -0.49378624689312345,
            "y": 0.6578947368421053
          },
          "b0a7": {
            "name": "query",
            "summary": "Query MR url",
            "description": "Query data using a dot/bracket notation string and a matching key/value pair.",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "displayName": "WorkFlowEngine",
            "type": "operation",
            "variables": {
              "incoming": {
                "pass_on_null": false,
                "query": "body.web_url",
                "obj": "$var.9c5d.response"
              },
              "outgoing": {
                "return_data": null
              },
              "error": ""
            },
            "deprecated": false,
            "matched": [
              {
                "key": "name",
                "highlightString": "<span class='highlight-string'>query</span>"
              },
              {
                "key": "summary",
                "highlightString": "<span class='highlight-string'>Query</span> Data Using 'json-query' Format"
              },
              {
                "key": "description",
                "highlightString": "<span class='highlight-string'>Query</span> data using a dot/bracket notation string and a matching key/value pair."
              }
            ],
            "groups": [],
            "x": 1.5611156685808039,
            "y": 0.516030534351145,
            "scheduled": false
          },
          "3e07": {
            "name": "merge",
            "summary": "Merge Data",
            "description": "Merge data into a single object",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "displayName": "WorkFlowEngine",
            "type": "operation",
            "variables": {
              "incoming": {
                "data_to_merge": [
                  {
                    "key": "url",
                    "value": {
                      "task": "b0a7",
                      "variable": "return_data"
                    }
                  }
                ]
              },
              "outgoing": {
                "merged_object": null
              }
            },
            "deprecated": false,
            "matched": [
              {
                "key": "name",
                "highlightString": "<span class='highlight-string'>merge</span>"
              },
              {
                "key": "summary",
                "highlightString": "<span class='highlight-string'>Merge</span> Data"
              },
              {
                "key": "description",
                "highlightString": "<span class='highlight-string'>Merge</span> data into a single object"
              }
            ],
            "groups": [],
            "x": 1.6267432321575062,
            "y": 0.517557251908397
          },
          "b739": {
            "name": "makeData",
            "summary": "Make Data",
            "description": "Make Data",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "displayName": "Tools",
            "type": "automatic",
            "variables": {
              "incoming": {
                "input": "Your repo has been updated! Please visit <a href='<!url!>' target=\"_blank\" rel=\"noopener noreferrer\">here</a> to review the pending merge request.",
                "outputType": "string",
                "variables": "$var.3e07.merged_object"
              },
              "outgoing": {
                "output": null
              },
              "error": ""
            },
            "deprecated": false,
            "matched": [
              {
                "key": "name",
                "highlightString": "<span class='highlight-string'>makeData</span>"
              }
            ],
            "groups": [],
            "actor": "Pronghorn",
            "x": 1.7136997538966365,
            "y": 0.5328244274809161,
            "scheduled": false
          },
          "de53": {
            "name": "ViewData",
            "summary": "View Data",
            "description": "View data in a pretty format",
            "location": "Application",
            "app": "WorkFlowEngine",
            "displayName": "Tools",
            "type": "manual",
            "variables": {
              "incoming": {
                "header": "Success",
                "message": "",
                "body": "$var.b739.output",
                "variables": {},
                "btn_success": "",
                "btn_failure": ""
              },
              "outgoing": {},
              "error": ""
            },
            "view": "/workflow_engine/task/ViewData",
            "deprecated": false,
            "matched": [
              {
                "key": "name",
                "highlightString": "<span class='highlight-string'>ViewData</span>"
              }
            ],
            "groups": [],
            "x": 1.7112387202625103,
            "y": 1.0763358778625953,
            "scheduled": false
          },
          "f5a5": {
            "name": "query",
            "summary": "Query update data",
            "description": "Query data using a dot/bracket notation string and a matching key/value pair.",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "displayName": "WorkFlowEngine",
            "type": "operation",
            "variables": {
              "incoming": {
                "pass_on_null": false,
                "query": "update",
                "obj": "$var.job.artifact"
              },
              "outgoing": {
                "return_data": null
              },
              "error": ""
            },
            "deprecated": false,
            "matched": [
              {
                "key": "name",
                "highlightString": "<span class='highlight-string'>query</span>"
              },
              {
                "key": "summary",
                "highlightString": "<span class='highlight-string'>Query</span> Data Using 'json-query' Format"
              },
              {
                "key": "description",
                "highlightString": "<span class='highlight-string'>Query</span> data using a dot/bracket notation string and a matching key/value pair."
              }
            ],
            "groups": [],
            "x": 0.8974569319114027,
            "y": 0.8458015267175573,
            "scheduled": false
          },
          "510e": {
            "name": "query",
            "summary": "Query update commit data",
            "description": "Query data using a dot/bracket notation string and a matching key/value pair.",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "displayName": "WorkFlowEngine",
            "type": "operation",
            "variables": {
              "incoming": {
                "pass_on_null": false,
                "query": "commitActions",
                "obj": "$var.594a.job_details"
              },
              "outgoing": {
                "return_data": null
              },
              "error": ""
            },
            "deprecated": false,
            "matched": [
              {
                "key": "name",
                "highlightString": "<span class='highlight-string'>query</span>"
              },
              {
                "key": "summary",
                "highlightString": "<span class='highlight-string'>Query</span> Data Using 'json-query' Format"
              },
              {
                "key": "description",
                "highlightString": "<span class='highlight-string'>Query</span> data using a dot/bracket notation string and a matching key/value pair."
              }
            ],
            "groups": [],
            "x": 1.099261689909762,
            "y": 0.47022900763358777,
            "scheduled": false
          },
          "d2b2": {
            "name": "arrayConcat",
            "summary": "Concatenates arrays together.",
            "description": "Used to merge two arrays",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "displayName": "Array",
            "type": "automatic",
            "variables": {
              "incoming": {
                "arr": "$var.510e.return_data",
                "arrayN": "$var.5ad7.return_data"
              },
              "outgoing": {
                "combinedArray": null
              },
              "error": ""
            },
            "deprecated": false,
            "matched": [
              {
                "key": "name",
                "highlightString": "<span class='highlight-string'>concat</span>"
              },
              {
                "key": "summary",
                "highlightString": "<span class='highlight-string'>Concat</span>enates arrays together."
              }
            ],
            "groups": [],
            "actor": "Pronghorn",
            "x": 1.2149302707136997,
            "y": 0.5221374045801527,
            "scheduled": false,
            "canvasName": "concat"
          },
          "ae90": {
            "name": "newVariable",
            "summary": "Create a Job Variable",
            "description": "Create a new Job variable by Job ID and assign it a value.",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "displayName": "WorkFlowEngine",
            "type": "operation",
            "variables": {
              "incoming": {
                "name": "repoNameArray",
                "value": []
              },
              "outgoing": {
                "value": null
              }
            },
            "deprecated": false,
            "matched": [
              {
                "key": "name",
                "highlightString": "<span class='highlight-string'>new</span>Variable"
              },
              {
                "key": "description",
                "highlightString": "Create a <span class='highlight-string'>new</span> Job variable by Job ID and assign it a value."
              }
            ],
            "groups": [],
            "x": -0.5733222866611434,
            "y": 1.0263157894736843
          },
          "69c5": {
            "name": "push",
            "canvasName": "push",
            "summary": "Push Item to Array",
            "description": "Push item to a job variable array",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "displayName": "WorkFlowEngine",
            "type": "operation",
            "variables": {
              "incoming": {
                "job_variable": "repoNameArray",
                "item_to_push": "$var.job.repoName"
              },
              "outgoing": {
                "job_variable_value": null
              }
            },
            "deprecated": false,
            "matched": [
              {
                "key": "canvasName",
                "highlightString": "<span class='highlight-string'>push</span>"
              },
              {
                "key": "summary",
                "highlightString": "<span class='highlight-string'>Push</span> Item to Array"
              },
              {
                "key": "description",
                "highlightString": "<span class='highlight-string'>Push</span> item to a job variable array"
              }
            ],
            "groups": [],
            "x": -0.4275062137531069,
            "y": 1.0228070175438597
          },
          "e914": {
            "name": "ViewData",
            "summary": "Error from Gitlab",
            "description": "View data in a pretty format",
            "location": "Application",
            "app": "WorkFlowEngine",
            "displayName": "Tools",
            "type": "manual",
            "variables": {
              "incoming": {
                "header": "Error from Gitlab",
                "message": "Encountered an error from Gitlab when performing REST GET",
                "body": "$var.job.err",
                "variables": {},
                "btn_success": "Try Again",
                "btn_failure": ""
              },
              "outgoing": {},
              "error": ""
            },
            "view": "/workflow_engine/task/ViewData",
            "deprecated": false,
            "matched": [
              {
                "key": "name",
                "highlightString": "<span class='highlight-string'>ViewData</span>"
              }
            ],
            "groups": [],
            "x": 0.21706710853355426,
            "y": 1.0719298245614035,
            "scheduled": false
          },
          "1cf0": {
            "name": "newVariable",
            "summary": "Create a Job Variable",
            "description": "Create a new Job variable by Job ID and assign it a value.",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "displayName": "WorkFlowEngine",
            "type": "operation",
            "variables": {
              "incoming": {
                "name": "projectArray",
                "value": []
              },
              "outgoing": {
                "value": null
              }
            },
            "deprecated": false,
            "matched": [
              {
                "key": "name",
                "highlightString": "<span class='highlight-string'>new</span>Variable"
              },
              {
                "key": "description",
                "highlightString": "Create a <span class='highlight-string'>new</span> Job variable by Job ID and assign it a value."
              }
            ],
            "groups": [],
            "x": 0.536039768019884,
            "y": 0.4982456140350877
          },
          "65fe": {
            "name": "push",
            "canvasName": "push",
            "summary": "Push Item to Array",
            "description": "Push item to a job variable array",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "displayName": "WorkFlowEngine",
            "type": "operation",
            "variables": {
              "incoming": {
                "job_variable": "projectArray",
                "item_to_push": "$var.dfce.numToString"
              },
              "outgoing": {
                "job_variable_value": null
              }
            },
            "deprecated": false,
            "matched": [
              {
                "key": "canvasName",
                "highlightString": "<span class='highlight-string'>push</span>"
              },
              {
                "key": "summary",
                "highlightString": "<span class='highlight-string'>Push</span> Item to Array"
              },
              {
                "key": "description",
                "highlightString": "<span class='highlight-string'>Push</span> item to a job variable array"
              }
            ],
            "groups": [],
            "x": 0.652029826014913,
            "y": 0.5157894736842106
          },
          "7ea3": {
            "name": "ViewData",
            "summary": "Error from Gitlab",
            "description": "View data in a pretty format",
            "location": "Application",
            "app": "WorkFlowEngine",
            "displayName": "Tools",
            "type": "manual",
            "variables": {
              "incoming": {
                "header": "Error from Gitlab",
                "message": "Encountered an error from Gitlab when performing REST POST MR",
                "body": "$var.job.err",
                "variables": {},
                "btn_success": "Try Again",
                "btn_failure": ""
              },
              "outgoing": {},
              "error": ""
            },
            "view": "/workflow_engine/task/ViewData",
            "deprecated": false,
            "matched": [
              {
                "key": "name",
                "highlightString": "<span class='highlight-string'>ViewData</span>"
              }
            ],
            "groups": [],
            "x": 1.5211267605633803,
            "y": 1.5175438596491229,
            "scheduled": false
          },
          "c32d": {
            "name": "childJob",
            "canvasName": "childJob",
            "summary": "Create Commit Data",
            "description": "Run a child Job inside a Workflow",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "displayName": "WorkFlowEngine",
            "type": "operation",
            "variables": {
              "incoming": {
                "task": "",
                "workflow": "IAP Artifacts AW GitLab Commit Data",
                "variables": {
                  "artifact": {
                    "variable": "",
                    "task": "7223",
                    "value": "return_data"
                  },
                  "action": {
                    "variable": "",
                    "task": "static",
                    "value": "create"
                  }
                },
                "data_array": "",
                "transformation": "",
                "loopType": ""
              },
              "outgoing": {
                "job_details": null
              }
            },
            "deprecated": false,
            "matched": [
              {
                "key": "canvasName",
                "highlightString": "<span class='highlight-string'>childJob</span>"
              }
            ],
            "groups": [],
            "actor": "job",
            "x": 0.8972366148531952,
            "y": 1.0788690476190477
          },
          "594a": {
            "name": "childJob",
            "canvasName": "childJob",
            "summary": "Update Commit Data",
            "description": "Run a child Job inside a Workflow",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "displayName": "WorkFlowEngine",
            "type": "operation",
            "variables": {
              "incoming": {
                "task": "",
                "workflow": "IAP Artifacts AW GitLab Commit Data",
                "variables": {
                  "artifact": {
                    "variable": "",
                    "task": "f5a5",
                    "value": "return_data"
                  },
                  "action": {
                    "variable": "",
                    "task": "static",
                    "value": "update"
                  }
                },
                "data_array": "",
                "transformation": "",
                "loopType": ""
              },
              "outgoing": {
                "job_details": null
              }
            },
            "deprecated": false,
            "matched": [
              {
                "key": "canvasName",
                "highlightString": "<span class='highlight-string'>childJob</span>"
              }
            ],
            "groups": [],
            "actor": "job",
            "x": 1.0967184801381693,
            "y": 1.0803571428571428
          }
        },
        "transitions": {
          "1483": {},
          "2364": {
            "c618": {
              "type": "standard",
              "state": "success"
            }
          },
          "2763": {
            "b52c": {
              "type": "revert",
              "state": "success"
            }
          },
          "3556": {
            "7064": {
              "type": "standard",
              "state": "success"
            }
          },
          "7064": {
            "bab9": {
              "type": "standard",
              "state": "success"
            }
          },
          "7223": {
            "f5a5": {
              "type": "standard",
              "state": "success"
            }
          },
          "workflow_start": {
            "3556": {
              "type": "standard",
              "state": "success"
            },
            "a7e0": {
              "type": "standard",
              "state": "success"
            },
            "e60e": {
              "type": "standard",
              "state": "success"
            },
            "ae90": {
              "type": "standard",
              "state": "success"
            }
          },
          "workflow_end": {},
          "a7e0": {
            "7064": {
              "type": "standard",
              "state": "success"
            }
          },
          "6d39": {},
          "75aa": {},
          "bff1": {},
          "bf00": {},
          "518f": {},
          "89af": {},
          "aade": {},
          "b52c": {
            "2763": {
              "type": "standard",
              "state": "error"
            },
            "7b4d": {
              "type": "standard",
              "state": "success"
            }
          },
          "7f83": {
            "b52c": {
              "type": "standard",
              "state": "success"
            }
          },
          "5ad7": {
            "510e": {
              "type": "standard",
              "state": "success"
            }
          },
          "a04c": {},
          "6e7d": {
            "18ea": {
              "type": "standard",
              "state": "success"
            },
            "e914": {
              "type": "standard",
              "state": "error"
            }
          },
          "bab9": {
            "b345": {
              "type": "standard",
              "state": "success"
            }
          },
          "b345": {
            "6e7d": {
              "type": "standard",
              "state": "success"
            }
          },
          "18ea": {
            "dfce": {
              "type": "standard",
              "state": "success"
            }
          },
          "c708": {},
          "dfce": {
            "1cf0": {
              "type": "standard",
              "state": "success"
            }
          },
          "c618": {
            "7223": {
              "type": "standard",
              "state": "success"
            }
          },
          "7b4d": {
            "b9e": {
              "type": "standard",
              "state": "success"
            }
          },
          "9c5d": {
            "b0a7": {
              "type": "standard",
              "state": "success"
            },
            "7ea3": {
              "type": "standard",
              "state": "error"
            }
          },
          "b9e": {
            "9c5d": {
              "type": "standard",
              "state": "success"
            }
          },
          "e60e": {
            "7064": {
              "type": "standard",
              "state": "success"
            }
          },
          "b0a7": {
            "3e07": {
              "type": "standard",
              "state": "success"
            }
          },
          "3e07": {
            "b739": {
              "type": "standard",
              "state": "success"
            }
          },
          "b739": {
            "de53": {
              "type": "standard",
              "state": "success"
            }
          },
          "de53": {
            "workflow_end": {
              "type": "standard",
              "state": "success"
            }
          },
          "f5a5": {
            "c32d": {
              "type": "standard",
              "state": "success"
            }
          },
          "84da": {},
          "510e": {
            "d2b2": {
              "type": "standard",
              "state": "success"
            }
          },
          "d2b2": {
            "7f83": {
              "type": "standard",
              "state": "success"
            }
          },
          "ae90": {
            "69c5": {
              "type": "standard",
              "state": "success"
            }
          },
          "69c5": {
            "7064": {
              "type": "standard",
              "state": "success"
            }
          },
          "e914": {
            "6e7d": {
              "type": "revert",
              "state": "success"
            }
          },
          "1cf0": {
            "65fe": {
              "type": "standard",
              "state": "success"
            }
          },
          "65fe": {
            "2364": {
              "type": "standard",
              "state": "success"
            }
          },
          "7ea3": {
            "9c5d": {
              "type": "revert",
              "state": "success"
            }
          },
          "c32d": {
            "594a": {
              "type": "standard",
              "state": "success"
            }
          },
          "594a": {
            "5ad7": {
              "type": "standard",
              "state": "success"
            }
          }
        },
        "font_size": 12,
        "created": "2019-11-20T23:37:55.807Z",
        "created_by": {
          "provenance": "Local AAA",
          "username": "admin@pronghorn",
          "firstname": "admin",
          "inactive": false,
          "email": ""
        },
        "createdVersion": "4.5.3-2019.2.7.0",
        "last_updated": "2021-11-09T14:55:00.577Z",
        "last_updated_by": {
          "provenance": "Local AAA",
          "username": "admin@pronghorn",
          "firstname": "admin",
          "inactive": false,
          "email": ""
        },
        "lastUpdatedVersion": "5.40.5-2021.1.59.0",
        "type": "automation",
        "description": null,
        "inputSchema": {
          "type": "object",
          "properties": {
            "artifact": {
              "type": "object",
              "examples": [
                {
                  "name": "value"
                }
              ]
            },
            "repoName": {
              "type": [
                "array",
                "boolean",
                "null",
                "number",
                "object",
                "string"
              ]
            }
          },
          "required": [
            "artifact",
            "repoName"
          ]
        },
        "outputSchema": {
          "type": "object",
          "properties": {
            "artifact": {
              "type": "object",
              "examples": [
                {
                  "name": "value"
                }
              ]
            },
            "repoName": {
              "type": [
                "array",
                "boolean",
                "null",
                "number",
                "object",
                "string"
              ]
            },
            "_id": {
              "type": "string",
              "pattern": "^[0-9a-f]{24}$"
            },
            "initiator": {
              "type": "string"
            },
            "projectArray": {
              "type": [
                "array",
                "boolean",
                "null",
                "number",
                "object",
                "string"
              ]
            },
            "err": {
              "type": [
                "array",
                "boolean",
                "null",
                "number",
                "object",
                "string"
              ]
            },
            "urlEncodedNamespace": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "headers": {
              "type": "object",
              "properties": {
                "Authorization": {
                  "type": "string"
                }
              }
            },
            "branch": {
              "type": "string"
            },
            "repoNameArray": {
              "type": [
                "array",
                "boolean",
                "null",
                "number",
                "object",
                "string"
              ]
            }
          }
        },
        "tags": [],
        "groups": []
      }
    },
    {
      "type": "workflow",
      "data": {
        "name": "IAP Artifacts AW GitLab Pull",
        "tasks": {
          "2148": {
            "name": "query",
            "summary": "Query Data Using 'json-query' Format",
            "description": "Query data using a dot/bracket notation string and a matching key/value pair.",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "displayName": "WorkFlowEngine",
            "type": "operation",
            "variables": {
              "incoming": {
                "pass_on_null": false,
                "query": "body",
                "obj": "$var.6e7d.response"
              },
              "outgoing": {
                "return_data": "$var.job.fileContents"
              },
              "error": ""
            },
            "deprecated": false,
            "matched": [
              {
                "key": "name",
                "highlightString": "<span class='highlight-string'>query</span>"
              },
              {
                "key": "summary",
                "highlightString": "<span class='highlight-string'>Query</span> Data Using 'json-query' Format"
              },
              {
                "key": "description",
                "highlightString": "<span class='highlight-string'>Query</span> data using a dot/bracket notation string and a matching key/value pair."
              }
            ],
            "groups": [],
            "x": 0.8929188255613126,
            "y": 0.5014880952380952,
            "scheduled": false
          },
          "2711": {
            "name": "newVariable",
            "canvasName": "newVariable",
            "summary": "Create a Job Variable",
            "description": "Create a new Job variable by Job ID and assign it a value.",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "displayName": "WorkFlowEngine",
            "type": "operation",
            "variables": {
              "incoming": {
                "name": "fileNameArray",
                "value": []
              },
              "outgoing": {
                "value": null
              }
            },
            "deprecated": false,
            "matched": [
              {
                "key": "canvasName",
                "highlightString": "new<span class='highlight-string'>Var</span>iable"
              },
              {
                "key": "summary",
                "highlightString": "Create a Job <span class='highlight-string'>Var</span>iable"
              },
              {
                "key": "description",
                "highlightString": "Create a new Job <span class='highlight-string'>var</span>iable by Job ID and assign it a value."
              }
            ],
            "groups": [],
            "x": 0.5872193436960277,
            "y": 0.5223214285714286
          },
          "2756": {
            "name": "query",
            "canvasName": "query",
            "summary": "Query Data Using 'json-query' Format",
            "description": "Query data using a dot/bracket notation string and a matching key/value pair.",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "displayName": "WorkFlowEngine",
            "type": "operation",
            "variables": {
              "incoming": {
                "pass_on_null": false,
                "query": "",
                "obj": "$var.job.namespace"
              },
              "outgoing": {
                "return_data": null
              },
              "error": ""
            },
            "deprecated": false,
            "matched": [
              {
                "key": "canvasName",
                "highlightString": "<span class='highlight-string'>query</span>"
              },
              {
                "key": "summary",
                "highlightString": "<span class='highlight-string'>Query</span> Data Using 'json-query' Format"
              },
              {
                "key": "description",
                "highlightString": "<span class='highlight-string'>Query</span> data using a dot/bracket notation string and a matching key/value pair."
              }
            ],
            "groups": [],
            "x": -0.6623488773747841,
            "y": 0.5014880952380952,
            "scheduled": false
          },
          "3556": {
            "name": "newVariable",
            "summary": "Create a Job Variable",
            "description": "Create a new Job variable by Job ID and assign it a value.",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "displayName": "WorkFlowEngine",
            "type": "operation",
            "variables": {
              "incoming": {
                "name": "urlEncodedNamespace",
                "value": []
              },
              "outgoing": {
                "value": null
              }
            },
            "deprecated": false,
            "matched": [
              {
                "key": "summary",
                "highlightString": "Create a <span class='highlight-string'>Job</span> Variable"
              },
              {
                "key": "description",
                "highlightString": "Create a new <span class='highlight-string'>Job</span> variable by Job ID and assign it a value."
              }
            ],
            "groups": [],
            "x": -0.5656303972366149,
            "y": 0.5119047619047619
          },
          "7064": {
            "name": "stringConcat",
            "summary": "Create base path",
            "description": "Concatenates a string with a second string(s). The second parameter can be a string or array.",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "displayName": "String",
            "type": "automatic",
            "variables": {
              "incoming": {
                "str": "https://gitlab.com/api/v4/projects/",
                "stringN": "$var.job.urlEncodedNamespace"
              },
              "outgoing": {
                "combinedStrings": null
              },
              "error": ""
            },
            "deprecated": false,
            "matched": [
              {
                "key": "name",
                "highlightString": "<span class='highlight-string'>concat</span>"
              },
              {
                "key": "summary",
                "highlightString": "<span class='highlight-string'>Concat</span>enates strings together."
              },
              {
                "key": "description",
                "highlightString": "<span class='highlight-string'>Concat</span>enates a string with a second string(s). The second parameter can be a string or array."
              }
            ],
            "groups": [],
            "actor": "Pronghorn",
            "x": -0.2823834196891192,
            "y": 0.5252976190476191,
            "scheduled": false,
            "canvasName": "concat"
          },
          "9759": {
            "name": "push",
            "canvasName": "push",
            "summary": "Push Item to Array",
            "description": "Push item to a job variable array",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "displayName": "WorkFlowEngine",
            "type": "operation",
            "variables": {
              "incoming": {
                "job_variable": "repoNameArray",
                "item_to_push": "$var.job.repoName"
              },
              "outgoing": {
                "job_variable_value": null
              }
            },
            "deprecated": false,
            "matched": [
              {
                "key": "canvasName",
                "highlightString": "<span class='highlight-string'>push</span>"
              },
              {
                "key": "summary",
                "highlightString": "<span class='highlight-string'>Push</span> Item to Array"
              },
              {
                "key": "description",
                "highlightString": "<span class='highlight-string'>Push</span> item to a job variable array"
              }
            ],
            "groups": [],
            "x": -0.42573402417962003,
            "y": 0.6904761904761905
          },
          "workflow_start": {
            "name": "workflow_start",
            "groups": [],
            "x": -0.7253886010362695,
            "y": 0.5044642857142857,
            "summary": "workflow_start",
            "description": "workflow_start"
          },
          "workflow_end": {
            "name": "workflow_end",
            "groups": [],
            "x": 0.9525043177892919,
            "y": 0.5059523809523809,
            "summary": "workflow_end",
            "description": "workflow_end"
          },
          "a7e0": {
            "name": "newVariable",
            "summary": "Create a Job Variable",
            "description": "Create a new Job variable by Job ID and assign it a value.",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "displayName": "WorkFlowEngine",
            "type": "operation",
            "variables": {
              "incoming": {
                "name": "headers",
                "value": {
                  "Authorization": "Bearer __ezebRybmJzPgDMv4nC"
                }
              },
              "outgoing": {
                "value": null
              }
            },
            "deprecated": false,
            "matched": [
              {
                "key": "name",
                "highlightString": "<span class='highlight-string'>new</span>Variable"
              },
              {
                "key": "description",
                "highlightString": "Create a <span class='highlight-string'>new</span> Job variable by Job ID and assign it a value."
              }
            ],
            "groups": [],
            "x": -0.5449050086355786,
            "y": 0.32589285714285715
          },
          "6e7d": {
            "name": "restCall",
            "summary": "GET file",
            "description": "Execute a REST call",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "displayName": "Tools",
            "type": "automatic",
            "variables": {
              "incoming": {
                "uri": "$var.f4d7.combinedStrings",
                "verb": "GET",
                "user": "",
                "password": "",
                "headers": "$var.job.headers",
                "body": "",
                "responseHeaders": true
              },
              "outgoing": {
                "response": null
              },
              "error": ""
            },
            "deprecated": false,
            "matched": [
              {
                "key": "name",
                "highlightString": "<span class='highlight-string'>rest</span>Call"
              },
              {
                "key": "summary",
                "highlightString": "<span class='highlight-string'>REST</span> Call"
              },
              {
                "key": "description",
                "highlightString": "Execute a <span class='highlight-string'>REST</span> call"
              }
            ],
            "groups": [],
            "actor": "Pronghorn",
            "x": 0.7944732297063903,
            "y": 0.8050595238095238,
            "scheduled": false
          },
          "4ec0": {
            "name": "newVariable",
            "summary": "Create a Job Variable",
            "description": "Create a new Job variable by Job ID and assign it a value.",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "displayName": "WorkFlowEngine",
            "type": "operation",
            "variables": {
              "incoming": {
                "name": "repoNameArray",
                "value": []
              },
              "outgoing": {
                "value": null
              }
            },
            "deprecated": false,
            "matched": [
              {
                "key": "summary",
                "highlightString": "Create a <span class='highlight-string'>Job</span> Variable"
              },
              {
                "key": "description",
                "highlightString": "Create a new <span class='highlight-string'>Job</span> variable by Job ID and assign it a value."
              }
            ],
            "groups": [],
            "x": -0.5466321243523317,
            "y": 0.6889880952380952
          },
          "934a": {
            "name": "replace",
            "canvasName": "replace",
            "summary": "URL encode filename",
            "description": "Returns a new string with some or all matches of a pattern replaced by a replacement. The pattern can be a string or a RegExp, and the replacement can be a string or a function to be called for each match (function type not supported in workflow engine).",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "displayName": "String",
            "type": "automatic",
            "variables": {
              "incoming": {
                "str": "$var.job.fileName",
                "substr": ".",
                "newSubstr": "%2E"
              },
              "outgoing": {
                "replacedString": null
              },
              "error": ""
            },
            "deprecated": true,
            "matched": [
              {
                "key": "canvasName",
                "highlightString": "<span class='highlight-string'>replace</span>"
              },
              {
                "key": "summary",
                "highlightString": "<span class='highlight-string'>Replace</span>s a string with another string."
              },
              {
                "key": "description",
                "highlightString": "Returns a new string with some or all matches of a pattern <span class='highlight-string'>replace</span>d by a replacement. The pattern can be a string or a RegExp, and the replacement can be a string or a function to be called for each match (function type not supported in workflow engine)."
              }
            ],
            "groups": [],
            "actor": "Pronghorn",
            "x": 0.3005181347150259,
            "y": 0.5252976190476191,
            "scheduled": false
          },
          "c232": {
            "name": "push",
            "canvasName": "push",
            "summary": "Push Item to Array",
            "description": "Push item to a job variable array",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "displayName": "WorkFlowEngine",
            "type": "operation",
            "variables": {
              "incoming": {
                "job_variable": "fileNameArray",
                "item_to_push": "$var.job.URLencodedFilename"
              },
              "outgoing": {
                "job_variable_value": null
              }
            },
            "deprecated": false,
            "matched": [
              {
                "key": "canvasName",
                "highlightString": "<span class='highlight-string'>push</span>"
              },
              {
                "key": "summary",
                "highlightString": "<span class='highlight-string'>Push</span> Item to Array"
              },
              {
                "key": "description",
                "highlightString": "<span class='highlight-string'>Push</span> item to a job variable array"
              }
            ],
            "groups": [],
            "x": 0.6951640759930915,
            "y": 0.5252976190476191
          },
          "f4d7": {
            "name": "stringConcat",
            "canvasName": "concat",
            "summary": "Create full path",
            "description": "Concatenates a string with an array of strings.",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "displayName": "String",
            "type": "automatic",
            "variables": {
              "incoming": {
                "str": "$var.job.basePath",
                "stringN": "$var.job.fileNameArray"
              },
              "outgoing": {
                "combinedStrings": null
              },
              "error": ""
            },
            "deprecated": true,
            "matched": [
              {
                "key": "canvasName",
                "highlightString": "<span class='highlight-string'>concat</span>"
              },
              {
                "key": "summary",
                "highlightString": "<span class='highlight-string'>Concat</span>enates strings together."
              },
              {
                "key": "description",
                "highlightString": "<span class='highlight-string'>Concat</span>enates a string with an array of strings."
              }
            ],
            "groups": [],
            "actor": "Pronghorn",
            "x": 0.7970639032815199,
            "y": 0.5282738095238095,
            "scheduled": false
          },
          "32c6": {
            "name": "push",
            "canvasName": "push",
            "summary": "Push Item to Array",
            "description": "Push item to a job variable array",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "displayName": "WorkFlowEngine",
            "type": "operation",
            "variables": {
              "incoming": {
                "job_variable": "urlEncodedNamespace",
                "item_to_push": "$var.2756.return_data"
              },
              "outgoing": {
                "job_variable_value": null
              }
            },
            "deprecated": false,
            "matched": [
              {
                "key": "canvasName",
                "highlightString": "<span class='highlight-string'>push</span>"
              },
              {
                "key": "summary",
                "highlightString": "<span class='highlight-string'>Push</span> Item to Array"
              },
              {
                "key": "description",
                "highlightString": "<span class='highlight-string'>Push</span> item to a job variable array"
              }
            ],
            "groups": [],
            "x": -0.42573402417962003,
            "y": 0.5104166666666666
          },
          "ede2": {
            "name": "stringConcat",
            "canvasName": "concat",
            "summary": "Concatenates url encoding",
            "description": "Concatenates a string with an array of strings.",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "displayName": "String",
            "type": "automatic",
            "variables": {
              "incoming": {
                "str": "$var.7064.combinedStrings",
                "stringN": [
                  "%2F"
                ]
              },
              "outgoing": {
                "combinedStrings": null
              },
              "error": ""
            },
            "deprecated": true,
            "matched": [
              {
                "key": "canvasName",
                "highlightString": "<span class='highlight-string'>concat</span>"
              },
              {
                "key": "summary",
                "highlightString": "<span class='highlight-string'>Concat</span>enates strings together."
              },
              {
                "key": "description",
                "highlightString": "<span class='highlight-string'>Concat</span>enates a string with an array of strings."
              }
            ],
            "groups": [],
            "actor": "Pronghorn",
            "x": -0.14766839378238342,
            "y": 0.5267857142857143,
            "scheduled": false
          },
          "5bf9": {
            "name": "stringConcat",
            "canvasName": "concat",
            "summary": "Concatenates repo name",
            "description": "Concatenates a string with an array of strings.",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "displayName": "String",
            "type": "automatic",
            "variables": {
              "incoming": {
                "str": "$var.ede2.combinedStrings",
                "stringN": "$var.job.repoNameArray"
              },
              "outgoing": {
                "combinedStrings": null
              },
              "error": ""
            },
            "deprecated": true,
            "matched": [
              {
                "key": "canvasName",
                "highlightString": "<span class='highlight-string'>concat</span>"
              },
              {
                "key": "summary",
                "highlightString": "<span class='highlight-string'>Concat</span>enates strings together."
              },
              {
                "key": "description",
                "highlightString": "<span class='highlight-string'>Concat</span>enates a string with an array of strings."
              }
            ],
            "groups": [],
            "actor": "Pronghorn",
            "x": -0.0008635578583765112,
            "y": 0.5267857142857143,
            "scheduled": false
          },
          "bea0": {
            "name": "stringConcat",
            "canvasName": "concat",
            "summary": "Concatenates files endpoint",
            "description": "Concatenates a string with an array of strings.",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "displayName": "String",
            "type": "automatic",
            "variables": {
              "incoming": {
                "str": "$var.5bf9.combinedStrings",
                "stringN": [
                  "/repository/files/"
                ]
              },
              "outgoing": {
                "combinedStrings": "$var.job.basePath"
              },
              "error": ""
            },
            "deprecated": true,
            "matched": [
              {
                "key": "canvasName",
                "highlightString": "<span class='highlight-string'>concat</span>"
              },
              {
                "key": "summary",
                "highlightString": "<span class='highlight-string'>Concat</span>enates strings together."
              },
              {
                "key": "description",
                "highlightString": "<span class='highlight-string'>Concat</span>enates a string with an array of strings."
              }
            ],
            "groups": [],
            "actor": "Pronghorn",
            "x": 0.15112262521588946,
            "y": 0.5267857142857143,
            "scheduled": false
          },
          "b9e0": {
            "name": "stringConcat",
            "canvasName": "concat",
            "summary": "Concatenates raw endpoint",
            "description": "Concatenates a string with an array of strings.",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "displayName": "String",
            "type": "automatic",
            "variables": {
              "incoming": {
                "str": "$var.934a.replacedString",
                "stringN": [
                  "/raw?ref=master"
                ]
              },
              "outgoing": {
                "combinedStrings": "$var.job.URLencodedFilename"
              },
              "error": ""
            },
            "deprecated": true,
            "matched": [
              {
                "key": "canvasName",
                "highlightString": "<span class='highlight-string'>concat</span>"
              },
              {
                "key": "summary",
                "highlightString": "<span class='highlight-string'>Concat</span>enates strings together."
              },
              {
                "key": "description",
                "highlightString": "<span class='highlight-string'>Concat</span>enates a string with an array of strings."
              }
            ],
            "groups": [],
            "actor": "Pronghorn",
            "x": 0.44905008635578586,
            "y": 0.5238095238095238,
            "scheduled": false
          }
        },
        "transitions": {
          "1483": {},
          "2148": {
            "workflow_end": {
              "type": "standard",
              "state": "success"
            }
          },
          "2711": {
            "c232": {
              "type": "standard",
              "state": "success"
            }
          },
          "2756": {
            "3556": {
              "type": "standard",
              "state": "success"
            }
          },
          "3556": {
            "32c6": {
              "type": "standard",
              "state": "success"
            }
          },
          "7064": {
            "ede2": {
              "type": "standard",
              "state": "success"
            }
          },
          "7197": {},
          "9133": {},
          "9759": {
            "7064": {
              "type": "standard",
              "state": "success"
            }
          },
          "workflow_start": {
            "2756": {
              "type": "standard",
              "state": "success"
            },
            "a7e0": {
              "type": "standard",
              "state": "success"
            },
            "4ec0": {
              "type": "standard",
              "state": "success"
            }
          },
          "workflow_end": {},
          "a7e0": {
            "7064": {
              "type": "standard",
              "state": "success"
            }
          },
          "6d39": {},
          "75aa": {},
          "bff1": {},
          "bf00": {},
          "518f": {},
          "89af": {},
          "aade": {},
          "b52c": {},
          "a04c": {},
          "6e7d": {
            "2148": {
              "type": "standard",
              "state": "success"
            }
          },
          "c708": {},
          "c618": {},
          "9c5d": {},
          "b739": {},
          "b6d1": {},
          "4ec0": {
            "9759": {
              "type": "standard",
              "state": "success"
            }
          },
          "934a": {
            "b9e0": {
              "type": "standard",
              "state": "success"
            }
          },
          "c232": {
            "f4d7": {
              "type": "standard",
              "state": "success"
            }
          },
          "f4d7": {
            "6e7d": {
              "type": "standard",
              "state": "success"
            }
          },
          "7d41": {},
          "32c6": {
            "7064": {
              "type": "standard",
              "state": "success"
            }
          },
          "ede2": {
            "5bf9": {
              "type": "standard",
              "state": "success"
            }
          },
          "5bf9": {
            "bea0": {
              "type": "standard",
              "state": "success"
            }
          },
          "bea0": {
            "934a": {
              "type": "standard",
              "state": "success"
            }
          },
          "b9e0": {
            "2711": {
              "type": "standard",
              "state": "success"
            }
          }
        },
        "font_size": 12,
        "created": "2019-12-03T18:31:09.972Z",
        "created_by": {
          "provenance": "Local AAA",
          "username": "admin@pronghorn",
          "firstname": "admin",
          "inactive": false,
          "email": ""
        },
        "createdVersion": "4.5.3-2019.2.7.0",
        "last_updated": "2021-11-09T14:55:00.628Z",
        "last_updated_by": {
          "provenance": "Local AAA",
          "username": "admin@pronghorn",
          "firstname": "admin",
          "inactive": false,
          "email": ""
        },
        "lastUpdatedVersion": "5.40.5-2021.1.59.0",
        "type": "automation",
        "description": null,
        "inputSchema": {
          "type": "object",
          "properties": {
            "namespace": {
              "type": "object",
              "examples": [
                {
                  "name": "value"
                }
              ]
            },
            "repoName": {
              "type": [
                "array",
                "boolean",
                "null",
                "number",
                "object",
                "string"
              ]
            },
            "fileName": {
              "title": "str",
              "type": "string",
              "examples": [
                "Hello World"
              ]
            }
          },
          "required": [
            "namespace",
            "repoName",
            "fileName"
          ]
        },
        "outputSchema": {
          "type": "object",
          "properties": {
            "namespace": {
              "type": "object",
              "examples": [
                {
                  "name": "value"
                }
              ]
            },
            "repoName": {
              "type": [
                "array",
                "boolean",
                "null",
                "number",
                "object",
                "string"
              ]
            },
            "fileName": {
              "title": "str",
              "type": "string",
              "examples": [
                "Hello World"
              ]
            },
            "_id": {
              "type": "string",
              "pattern": "^[0-9a-f]{24}$"
            },
            "initiator": {
              "type": "string"
            },
            "fileContents": {
              "type": [
                "string",
                "number",
                "object",
                "integer",
                "array",
                "boolean",
                "null"
              ],
              "examples": [
                "value"
              ]
            },
            "fileNameArray": {
              "type": [
                "array",
                "boolean",
                "null",
                "number",
                "object",
                "string"
              ]
            },
            "urlEncodedNamespace": {
              "type": [
                "array",
                "boolean",
                "null",
                "number",
                "object",
                "string"
              ]
            },
            "repoNameArray": {
              "type": [
                "array",
                "boolean",
                "null",
                "number",
                "object",
                "string"
              ]
            },
            "headers": {
              "type": "object",
              "properties": {
                "Authorization": {
                  "type": "string"
                }
              }
            },
            "URLencodedFilename": {
              "title": "combinedStrings",
              "type": "string",
              "examples": [
                "Hello World"
              ]
            },
            "basePath": {
              "title": "combinedStrings",
              "type": "string",
              "examples": [
                "Hello World"
              ]
            }
          }
        },
        "tags": [],
        "groups": []
      }
    },
    {
      "type": "workflow",
      "data": {
        "name": "IAP Artifacts AW Discover Components",
        "tasks": {
          "834": {
            "name": "componentDiscovery",
            "canvasName": "componentDiscovery",
            "summary": "Performs discovery on Automation Catalogs or Workflows",
            "description": "Discovers any referenced components within automation catalogs",
            "location": "Application",
            "locationType": null,
            "app": "AppArtifacts",
            "displayName": "AppArtifacts",
            "type": "automatic",
            "variables": {
              "incoming": {
                "entryPoint": "$var.5e6b.merged_object"
              },
              "outgoing": {
                "discovery": "$var.job.discovery"
              },
              "error": ""
            },
            "deprecated": false,
            "matched": [
              {
                "key": "canvasName",
                "highlightString": "component<span class='highlight-string'>Disc</span>overy"
              },
              {
                "key": "summary",
                "highlightString": "Performs <span class='highlight-string'>disc</span>overy on Automation Catalogs or Workflows"
              },
              {
                "key": "description",
                "highlightString": "<span class='highlight-string'>Disc</span>overs any referenced components within automation catalogs"
              }
            ],
            "groups": [],
            "actor": "Pronghorn",
            "x": 0.601899827288428,
            "y": 0.486607142857143,
            "scheduled": false
          },
          "2749": {
            "name": "query",
            "canvasName": "query",
            "summary": "Query forms from form",
            "description": "Query data using a dot/bracket notation string and a matching key/value pair.",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "displayName": "WorkFlowEngine",
            "type": "operation",
            "variables": {
              "incoming": {
                "pass_on_null": false,
                "query": "forms",
                "obj": "$var.6f9c.return_data"
              },
              "outgoing": {
                "return_data": null
              },
              "error": ""
            },
            "deprecated": false,
            "matched": [
              {
                "key": "canvasName",
                "highlightString": "<span class='highlight-string'>query</span>"
              },
              {
                "key": "summary",
                "highlightString": "<span class='highlight-string'>Query</span> Data Using 'json-query' Format"
              },
              {
                "key": "description",
                "highlightString": "<span class='highlight-string'>Query</span> data using a dot/bracket notation string and a matching key/value pair."
              }
            ],
            "groups": [],
            "x": 1.5552677029361,
            "y": 0.619047619047619,
            "scheduled": false
          },
          "5875": {
            "name": "modify",
            "canvasName": "modify",
            "summary": "Modify automations",
            "description": "Modify data",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "displayName": "WorkFlowEngine",
            "type": "operation",
            "variables": {
              "incoming": {
                "object_to_update": "$var.job.components",
                "query": "automations",
                "new_value": "$var.624e.return_data"
              },
              "outgoing": {
                "updated_object": "$var.job.components"
              },
              "error": ""
            },
            "deprecated": false,
            "matched": [
              {
                "key": "canvasName",
                "highlightString": "<span class='highlight-string'>modify</span>"
              },
              {
                "key": "summary",
                "highlightString": "<span class='highlight-string'>Modify</span> Data"
              },
              {
                "key": "description",
                "highlightString": "<span class='highlight-string'>Modify</span> data"
              }
            ],
            "groups": [],
            "x": 0.914507772020725,
            "y": 0.5625,
            "scheduled": false
          },
          "7144": {
            "name": "merge",
            "canvasName": "merge",
            "summary": "Merge Discovery Data",
            "description": "Merge data into a single object",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "displayName": "WorkFlowEngine",
            "type": "operation",
            "variables": {
              "incoming": {
                "data_to_merge": [
                  {
                    "key": "components",
                    "value": {
                      "task": "job",
                      "variable": "components"
                    }
                  }
                ]
              },
              "outgoing": {
                "merged_object": null
              }
            },
            "deprecated": false,
            "matched": [
              {
                "key": "canvasName",
                "highlightString": "<span class='highlight-string'>merge</span>"
              },
              {
                "key": "summary",
                "highlightString": "<span class='highlight-string'>Merge</span> Data"
              },
              {
                "key": "description",
                "highlightString": "<span class='highlight-string'>Merge</span> data into a single object"
              }
            ],
            "groups": [],
            "x": 1.0138169257340242,
            "y": 2.0907894736842105
          },
          "workflow_start": {
            "name": "workflow_start",
            "groups": [],
            "x": -0.17012089810017272,
            "y": 0.4842105263157895
          },
          "workflow_end": {
            "name": "workflow_end",
            "groups": [],
            "x": 2.03022452504318,
            "y": 0.84375
          },
          "2d7f": {
            "name": "query",
            "canvasName": "query",
            "summary": "Get Array Automation Catalogs",
            "description": "Query data using a dot/bracket notation string and a matching key/value pair.",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "displayName": "WorkFlowEngine",
            "type": "operation",
            "variables": {
              "incoming": {
                "pass_on_null": false,
                "query": "automationCatalogs.name",
                "obj": "$var.job.artifact"
              },
              "outgoing": {
                "return_data": null
              },
              "error": ""
            },
            "deprecated": false,
            "matched": [
              {
                "key": "canvasName",
                "highlightString": "<span class='highlight-string'>query</span>"
              },
              {
                "key": "summary",
                "highlightString": "<span class='highlight-string'>Query</span> Data Using 'json-query' Format"
              },
              {
                "key": "description",
                "highlightString": "<span class='highlight-string'>Query</span> data using a dot/bracket notation string and a matching key/value pair."
              }
            ],
            "groups": [],
            "x": 0.0941278065630397,
            "y": 0.395833333333333,
            "scheduled": false
          },
          "51d6": {
            "name": "query",
            "canvasName": "query",
            "summary": "Get Array Automation Workflows.",
            "description": "Query data using a dot/bracket notation string and a matching key/value pair.",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "displayName": "WorkFlowEngine",
            "type": "operation",
            "variables": {
              "incoming": {
                "pass_on_null": false,
                "query": "automationWorkflows.name",
                "obj": "$var.job.artifact"
              },
              "outgoing": {
                "return_data": null
              },
              "error": ""
            },
            "deprecated": false,
            "matched": [
              {
                "key": "canvasName",
                "highlightString": "<span class='highlight-string'>query</span>"
              },
              {
                "key": "summary",
                "highlightString": "<span class='highlight-string'>Query</span> Data Using 'json-query' Format"
              },
              {
                "key": "description",
                "highlightString": "<span class='highlight-string'>Query</span> data using a dot/bracket notation string and a matching key/value pair."
              }
            ],
            "groups": [],
            "x": 0.0975820379965458,
            "y": 0.59077380952381,
            "scheduled": false
          },
          "5dc2": {
            "name": "query",
            "canvasName": "query",
            "summary": "Query Component Map",
            "description": "Query data using a dot/bracket notation string and a matching key/value pair.",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "displayName": "WorkFlowEngine",
            "type": "operation",
            "variables": {
              "incoming": {
                "pass_on_null": false,
                "query": "componentMap",
                "obj": "$var.job.discovery"
              },
              "outgoing": {
                "return_data": null
              },
              "error": ""
            },
            "deprecated": false,
            "matched": [
              {
                "key": "canvasName",
                "highlightString": "<span class='highlight-string'>query</span>"
              },
              {
                "key": "summary",
                "highlightString": "<span class='highlight-string'>Query</span> Data Using 'json-query' Format"
              },
              {
                "key": "description",
                "highlightString": "<span class='highlight-string'>Query</span> data using a dot/bracket notation string and a matching key/value pair."
              }
            ],
            "groups": [],
            "x": 0.738341968911917,
            "y": 0.483630952380952,
            "scheduled": false
          },
          "66d8": {
            "name": "ShowJsonForm",
            "canvasName": "ShowJsonForm",
            "summary": "Show Json Form",
            "description": "Show Json Form",
            "location": "Application",
            "app": "JsonForms",
            "displayName": "JsonForms",
            "type": "manual",
            "variables": {
              "incoming": {
                "form_id": "Artifact Components",
                "instance_data": "$var.7144.merged_object"
              },
              "outgoing": {
                "export": "$var.job.mergedComponents"
              },
              "error": ""
            },
            "view": "/json-forms/task/ShowJsonForm",
            "deprecated": false,
            "matched": [],
            "groups": [],
            "x": 1.12435233160622,
            "y": 0.483630952380952,
            "scheduled": false
          },
          "aa5f": {
            "name": "query",
            "canvasName": "query",
            "summary": "Query workflow",
            "description": "Query data using a dot/bracket notation string and a matching key/value pair.",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "displayName": "WorkFlowEngine",
            "type": "operation",
            "variables": {
              "incoming": {
                "pass_on_null": false,
                "query": "workflow",
                "obj": "$var.5dc2.return_data"
              },
              "outgoing": {
                "return_data": null
              },
              "error": ""
            },
            "deprecated": false,
            "matched": [
              {
                "key": "canvasName",
                "highlightString": "<span class='highlight-string'>query</span>"
              },
              {
                "key": "summary",
                "highlightString": "<span class='highlight-string'>Query</span> Data Using 'json-query' Format"
              },
              {
                "key": "description",
                "highlightString": "<span class='highlight-string'>Query</span> data using a dot/bracket notation string and a matching key/value pair."
              }
            ],
            "groups": [],
            "x": 0.816062176165803,
            "y": 0.380952380952381,
            "scheduled": false
          },
          "624e": {
            "name": "query",
            "canvasName": "query",
            "summary": "Query ac-agenda-job",
            "description": "Query data using a dot/bracket notation string and a matching key/value pair.",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "displayName": "WorkFlowEngine",
            "type": "operation",
            "variables": {
              "incoming": {
                "pass_on_null": false,
                "query": "ac-agenda-job",
                "obj": "$var.5dc2.return_data"
              },
              "outgoing": {
                "return_data": null
              },
              "error": ""
            },
            "deprecated": false,
            "matched": [
              {
                "key": "canvasName",
                "highlightString": "<span class='highlight-string'>query</span>"
              },
              {
                "key": "summary",
                "highlightString": "<span class='highlight-string'>Query</span> Data Using 'json-query' Format"
              },
              {
                "key": "description",
                "highlightString": "<span class='highlight-string'>Query</span> data using a dot/bracket notation string and a matching key/value pair."
              }
            ],
            "groups": [],
            "x": 0.820379965457686,
            "y": 0.543154761904762,
            "scheduled": false
          },
          "2f07": {
            "name": "query",
            "canvasName": "query",
            "summary": "Query forms",
            "description": "Query data using a dot/bracket notation string and a matching key/value pair.",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "displayName": "WorkFlowEngine",
            "type": "operation",
            "variables": {
              "incoming": {
                "pass_on_null": false,
                "query": "forms",
                "obj": "$var.5dc2.return_data"
              },
              "outgoing": {
                "return_data": null
              },
              "error": ""
            },
            "deprecated": false,
            "matched": [
              {
                "key": "canvasName",
                "highlightString": "<span class='highlight-string'>query</span>"
              },
              {
                "key": "summary",
                "highlightString": "<span class='highlight-string'>Query</span> Data Using 'json-query' Format"
              },
              {
                "key": "description",
                "highlightString": "<span class='highlight-string'>Query</span> data using a dot/bracket notation string and a matching key/value pair."
              }
            ],
            "groups": [],
            "x": 0.822107081174439,
            "y": 0.717261904761905,
            "scheduled": false
          },
          "a796": {
            "name": "query",
            "canvasName": "query",
            "summary": "Query template",
            "description": "Query data using a dot/bracket notation string and a matching key/value pair.",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "displayName": "WorkFlowEngine",
            "type": "operation",
            "variables": {
              "incoming": {
                "pass_on_null": false,
                "query": "template",
                "obj": "$var.5dc2.return_data"
              },
              "outgoing": {
                "return_data": null
              },
              "error": ""
            },
            "deprecated": false,
            "matched": [
              {
                "key": "canvasName",
                "highlightString": "<span class='highlight-string'>query</span>"
              },
              {
                "key": "summary",
                "highlightString": "<span class='highlight-string'>Query</span> Data Using 'json-query' Format"
              },
              {
                "key": "description",
                "highlightString": "<span class='highlight-string'>Query</span> data using a dot/bracket notation string and a matching key/value pair."
              }
            ],
            "groups": [],
            "x": 0.822970639032815,
            "y": 0.898809523809524,
            "scheduled": false
          },
          "5fa9": {
            "name": "newVariable",
            "canvasName": "newVariable",
            "summary": "Create a Job Variable",
            "description": "Create a new Job variable by Job ID and assign it a value.",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "displayName": "WorkFlowEngine",
            "type": "operation",
            "variables": {
              "incoming": {
                "name": "components",
                "value": {
                  "workflows": [],
                  "automations": [],
                  "jsonForms": [],
                  "templates": [],
                  "forms": [],
                  "commandTemplates": [],
                  "analyticTemplates": [],
                  "goldenConfigTrees": [],
                  "transformations": []
                }
              },
              "outgoing": {
                "value": null
              }
            },
            "deprecated": false,
            "matched": [
              {
                "key": "summary",
                "highlightString": "Create a <span class='highlight-string'>Job</span> Variable"
              },
              {
                "key": "description",
                "highlightString": "Create a new <span class='highlight-string'>Job</span> variable by Job ID and assign it a value."
              }
            ],
            "groups": [],
            "x": 0.673575129533679,
            "y": 0.709821428571429
          },
          "b24c": {
            "name": "modify",
            "canvasName": "modify",
            "summary": "Modify workflows",
            "description": "Modify data",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "displayName": "WorkFlowEngine",
            "type": "operation",
            "variables": {
              "incoming": {
                "object_to_update": "$var.job.components",
                "query": "workflows",
                "new_value": "$var.aa5f.return_data"
              },
              "outgoing": {
                "updated_object": "$var.job.components"
              },
              "error": ""
            },
            "deprecated": false,
            "matched": [
              {
                "key": "canvasName",
                "highlightString": "<span class='highlight-string'>modify</span>"
              },
              {
                "key": "summary",
                "highlightString": "<span class='highlight-string'>Modify</span> Data"
              },
              {
                "key": "description",
                "highlightString": "<span class='highlight-string'>Modify</span> data"
              }
            ],
            "groups": [],
            "x": 0.914507772020725,
            "y": 0.389880952380952,
            "scheduled": false
          },
          "f0f": {
            "name": "modify",
            "canvasName": "modify",
            "summary": "Modify forms",
            "description": "Modify data",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "displayName": "WorkFlowEngine",
            "type": "operation",
            "variables": {
              "incoming": {
                "object_to_update": "$var.job.components",
                "query": "forms",
                "new_value": "$var.2f07.return_data"
              },
              "outgoing": {
                "updated_object": "$var.job.components"
              },
              "error": ""
            },
            "deprecated": false,
            "matched": [
              {
                "key": "canvasName",
                "highlightString": "<span class='highlight-string'>modify</span>"
              },
              {
                "key": "summary",
                "highlightString": "<span class='highlight-string'>Modify</span> Data"
              },
              {
                "key": "description",
                "highlightString": "<span class='highlight-string'>Modify</span> data"
              }
            ],
            "groups": [],
            "x": 0.913644214162349,
            "y": 0.733630952380952,
            "scheduled": false
          },
          "6b26": {
            "name": "modify",
            "canvasName": "modify",
            "summary": "Modify templates",
            "description": "Modify data",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "displayName": "WorkFlowEngine",
            "type": "operation",
            "variables": {
              "incoming": {
                "object_to_update": "$var.job.components",
                "query": "templates",
                "new_value": "$var.a796.return_data"
              },
              "outgoing": {
                "updated_object": "$var.job.components"
              },
              "error": ""
            },
            "deprecated": false,
            "matched": [
              {
                "key": "canvasName",
                "highlightString": "<span class='highlight-string'>modify</span>"
              },
              {
                "key": "summary",
                "highlightString": "<span class='highlight-string'>Modify</span> Data"
              },
              {
                "key": "description",
                "highlightString": "<span class='highlight-string'>Modify</span> data"
              }
            ],
            "groups": [],
            "x": 0.913644214162349,
            "y": 0.901785714285714,
            "scheduled": false
          },
          "5e51": {
            "name": "modify",
            "canvasName": "modify",
            "summary": "Modify jsonForms",
            "description": "Modify data",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "displayName": "WorkFlowEngine",
            "type": "operation",
            "variables": {
              "incoming": {
                "object_to_update": "$var.job.components",
                "query": "jsonForms",
                "new_value": "$var.dfce.return_data"
              },
              "outgoing": {
                "updated_object": "$var.job.components"
              },
              "error": ""
            },
            "deprecated": false,
            "matched": [
              {
                "key": "canvasName",
                "highlightString": "<span class='highlight-string'>modify</span>"
              },
              {
                "key": "summary",
                "highlightString": "<span class='highlight-string'>Modify</span> Data"
              },
              {
                "key": "description",
                "highlightString": "<span class='highlight-string'>Modify</span> data"
              }
            ],
            "groups": [],
            "x": 0.914507772020725,
            "y": 1.07440476190476,
            "scheduled": false
          },
          "dfce": {
            "name": "query",
            "canvasName": "query",
            "summary": "Query json-forms",
            "description": "Query data using a dot/bracket notation string and a matching key/value pair.",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "displayName": "WorkFlowEngine",
            "type": "operation",
            "variables": {
              "incoming": {
                "pass_on_null": false,
                "query": "json-forms",
                "obj": "$var.5dc2.return_data"
              },
              "outgoing": {
                "return_data": null
              },
              "error": ""
            },
            "deprecated": false,
            "matched": [
              {
                "key": "canvasName",
                "highlightString": "<span class='highlight-string'>query</span>"
              },
              {
                "key": "summary",
                "highlightString": "<span class='highlight-string'>Query</span> Data Using 'json-query' Format"
              },
              {
                "key": "description",
                "highlightString": "<span class='highlight-string'>Query</span> data using a dot/bracket notation string and a matching key/value pair."
              }
            ],
            "groups": [],
            "x": 0.824697754749568,
            "y": 1.06845238095238,
            "scheduled": false
          },
          "dab7": {
            "name": "query",
            "canvasName": "query",
            "summary": "Query mop-template",
            "description": "Query data using a dot/bracket notation string and a matching key/value pair.",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "displayName": "WorkFlowEngine",
            "type": "operation",
            "variables": {
              "incoming": {
                "pass_on_null": false,
                "query": "mop-template",
                "obj": "$var.5dc2.return_data"
              },
              "outgoing": {
                "return_data": null
              },
              "error": ""
            },
            "deprecated": false,
            "matched": [
              {
                "key": "canvasName",
                "highlightString": "<span class='highlight-string'>query</span>"
              },
              {
                "key": "summary",
                "highlightString": "<span class='highlight-string'>Query</span> Data Using 'json-query' Format"
              },
              {
                "key": "description",
                "highlightString": "<span class='highlight-string'>Query</span> data using a dot/bracket notation string and a matching key/value pair."
              }
            ],
            "groups": [],
            "x": 0.827288428324698,
            "y": 1.26339285714286,
            "scheduled": false
          },
          "e00a": {
            "name": "modify",
            "canvasName": "modify",
            "summary": "Modify commandTemplates",
            "description": "Modify data",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "displayName": "WorkFlowEngine",
            "type": "operation",
            "variables": {
              "incoming": {
                "object_to_update": "$var.job.components",
                "query": "commandTemplates",
                "new_value": "$var.dab7.return_data"
              },
              "outgoing": {
                "updated_object": "$var.job.components"
              },
              "error": ""
            },
            "deprecated": false,
            "matched": [
              {
                "key": "canvasName",
                "highlightString": "<span class='highlight-string'>modify</span>"
              },
              {
                "key": "summary",
                "highlightString": "<span class='highlight-string'>Modify</span> Data"
              },
              {
                "key": "description",
                "highlightString": "<span class='highlight-string'>Modify</span> data"
              }
            ],
            "groups": [],
            "x": 0.933506044905009,
            "y": 1.25446428571429,
            "scheduled": false
          },
          "e600": {
            "name": "query",
            "canvasName": "query",
            "summary": "Query mop-analytic-template",
            "description": "Query data using a dot/bracket notation string and a matching key/value pair.",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "displayName": "WorkFlowEngine",
            "type": "operation",
            "variables": {
              "incoming": {
                "pass_on_null": false,
                "query": "mop-analytic-template",
                "obj": "$var.5dc2.return_data"
              },
              "outgoing": {
                "return_data": null
              },
              "error": ""
            },
            "deprecated": false,
            "matched": [
              {
                "key": "canvasName",
                "highlightString": "<span class='highlight-string'>query</span>"
              },
              {
                "key": "summary",
                "highlightString": "<span class='highlight-string'>Query</span> Data Using 'json-query' Format"
              },
              {
                "key": "description",
                "highlightString": "<span class='highlight-string'>Query</span> data using a dot/bracket notation string and a matching key/value pair."
              }
            ],
            "groups": [],
            "x": 0.828151986183074,
            "y": 1.45089285714286,
            "scheduled": false
          },
          "a3da": {
            "name": "modify",
            "canvasName": "modify",
            "summary": "Modify analyticTemplates",
            "description": "Modify data",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "displayName": "WorkFlowEngine",
            "type": "operation",
            "variables": {
              "incoming": {
                "object_to_update": "$var.job.components",
                "query": "analyticTemplates",
                "new_value": "$var.e600.return_data"
              },
              "outgoing": {
                "updated_object": "$var.job.components"
              },
              "error": ""
            },
            "deprecated": false,
            "matched": [
              {
                "key": "canvasName",
                "highlightString": "<span class='highlight-string'>modify</span>"
              },
              {
                "key": "summary",
                "highlightString": "<span class='highlight-string'>Modify</span> Data"
              },
              {
                "key": "description",
                "highlightString": "<span class='highlight-string'>Modify</span> data"
              }
            ],
            "groups": [],
            "x": 0.931778929188256,
            "y": 1.45089285714286,
            "scheduled": false
          },
          "a5ab": {
            "name": "modify",
            "canvasName": "modify",
            "summary": "Modify goldenConfigTrees",
            "description": "Modify data",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "displayName": "WorkFlowEngine",
            "type": "operation",
            "variables": {
              "incoming": {
                "object_to_update": "$var.job.components",
                "query": "goldenConfigTrees",
                "new_value": "$var.f35a.return_data"
              },
              "outgoing": {
                "updated_object": "$var.job.components"
              },
              "error": ""
            },
            "deprecated": false,
            "matched": [
              {
                "key": "canvasName",
                "highlightString": "<span class='highlight-string'>modify</span>"
              },
              {
                "key": "summary",
                "highlightString": "<span class='highlight-string'>Modify</span> Data"
              },
              {
                "key": "description",
                "highlightString": "<span class='highlight-string'>Modify</span> data"
              }
            ],
            "groups": [],
            "x": 0.939550949913644,
            "y": 1.64136904761905,
            "scheduled": false
          },
          "f35a": {
            "name": "query",
            "canvasName": "query",
            "summary": "Query golden-config",
            "description": "Query data using a dot/bracket notation string and a matching key/value pair.",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "displayName": "WorkFlowEngine",
            "type": "operation",
            "variables": {
              "incoming": {
                "pass_on_null": false,
                "query": "golden-config",
                "obj": "$var.5dc2.return_data"
              },
              "outgoing": {
                "return_data": null
              },
              "error": ""
            },
            "deprecated": false,
            "matched": [
              {
                "key": "canvasName",
                "highlightString": "<span class='highlight-string'>query</span>"
              },
              {
                "key": "summary",
                "highlightString": "<span class='highlight-string'>Query</span> Data Using 'json-query' Format"
              },
              {
                "key": "description",
                "highlightString": "<span class='highlight-string'>Query</span> data using a dot/bracket notation string and a matching key/value pair."
              }
            ],
            "groups": [],
            "x": 0.829879101899827,
            "y": 1.63541666666667,
            "scheduled": false
          },
          "6f9c": {
            "name": "query",
            "canvasName": "query",
            "summary": "Query components from form",
            "description": "Query data using a dot/bracket notation string and a matching key/value pair.",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "displayName": "WorkFlowEngine",
            "type": "operation",
            "variables": {
              "incoming": {
                "pass_on_null": false,
                "query": "components",
                "obj": "$var.job.mergedComponents"
              },
              "outgoing": {
                "return_data": null
              },
              "error": ""
            },
            "deprecated": false,
            "matched": [
              {
                "key": "canvasName",
                "highlightString": "<span class='highlight-string'>query</span>"
              },
              {
                "key": "summary",
                "highlightString": "<span class='highlight-string'>Query</span> Data Using 'json-query' Format"
              },
              {
                "key": "description",
                "highlightString": "<span class='highlight-string'>Query</span> data using a dot/bracket notation string and a matching key/value pair."
              }
            ],
            "groups": [],
            "x": 1.37305699481865,
            "y": 0.474702380952381,
            "scheduled": false
          },
          "ca33": {
            "name": "query",
            "canvasName": "query",
            "summary": "Query automations from form",
            "description": "Query data using a dot/bracket notation string and a matching key/value pair.",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "displayName": "WorkFlowEngine",
            "type": "operation",
            "variables": {
              "incoming": {
                "pass_on_null": false,
                "query": "automations",
                "obj": "$var.6f9c.return_data"
              },
              "outgoing": {
                "return_data": null
              },
              "error": ""
            },
            "deprecated": false,
            "matched": [
              {
                "key": "canvasName",
                "highlightString": "<span class='highlight-string'>query</span>"
              },
              {
                "key": "summary",
                "highlightString": "<span class='highlight-string'>Query</span> Data Using 'json-query' Format"
              },
              {
                "key": "description",
                "highlightString": "<span class='highlight-string'>Query</span> data using a dot/bracket notation string and a matching key/value pair."
              }
            ],
            "groups": [],
            "x": 1.35405872193437,
            "y": 0.666666666666667,
            "scheduled": false
          },
          "f4fa": {
            "name": "query",
            "canvasName": "query",
            "summary": "Query workflows from form",
            "description": "Query data using a dot/bracket notation string and a matching key/value pair.",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "displayName": "WorkFlowEngine",
            "type": "operation",
            "variables": {
              "incoming": {
                "pass_on_null": false,
                "query": "workflows",
                "obj": "$var.6f9c.return_data"
              },
              "outgoing": {
                "return_data": null
              },
              "error": ""
            },
            "deprecated": false,
            "matched": [
              {
                "key": "canvasName",
                "highlightString": "<span class='highlight-string'>query</span>"
              },
              {
                "key": "summary",
                "highlightString": "<span class='highlight-string'>Query</span> Data Using 'json-query' Format"
              },
              {
                "key": "description",
                "highlightString": "<span class='highlight-string'>Query</span> data using a dot/bracket notation string and a matching key/value pair."
              }
            ],
            "groups": [],
            "x": 1.41882556131261,
            "y": 0.660714285714286,
            "scheduled": false
          },
          "a9df": {
            "name": "query",
            "canvasName": "query",
            "summary": "Query jsonForms from form",
            "description": "Query data using a dot/bracket notation string and a matching key/value pair.",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "displayName": "WorkFlowEngine",
            "type": "operation",
            "variables": {
              "incoming": {
                "pass_on_null": false,
                "query": "jsonForms",
                "obj": "$var.6f9c.return_data"
              },
              "outgoing": {
                "return_data": null
              },
              "error": ""
            },
            "deprecated": false,
            "matched": [
              {
                "key": "canvasName",
                "highlightString": "<span class='highlight-string'>query</span>"
              },
              {
                "key": "summary",
                "highlightString": "<span class='highlight-string'>Query</span> Data Using 'json-query' Format"
              },
              {
                "key": "description",
                "highlightString": "<span class='highlight-string'>Query</span> data using a dot/bracket notation string and a matching key/value pair."
              }
            ],
            "groups": [],
            "x": 1.48618307426598,
            "y": 0.645833333333333,
            "scheduled": false
          },
          "e6f7": {
            "name": "query",
            "canvasName": "query",
            "summary": "Query analyticTemplates from form",
            "description": "Query data using a dot/bracket notation string and a matching key/value pair.",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "displayName": "WorkFlowEngine",
            "type": "operation",
            "variables": {
              "incoming": {
                "pass_on_null": false,
                "query": "analyticTemplates",
                "obj": "$var.6f9c.return_data"
              },
              "outgoing": {
                "return_data": null
              },
              "error": ""
            },
            "deprecated": false,
            "matched": [
              {
                "key": "canvasName",
                "highlightString": "<span class='highlight-string'>query</span>"
              },
              {
                "key": "summary",
                "highlightString": "<span class='highlight-string'>Query</span> Data Using 'json-query' Format"
              },
              {
                "key": "description",
                "highlightString": "<span class='highlight-string'>Query</span> data using a dot/bracket notation string and a matching key/value pair."
              }
            ],
            "groups": [],
            "x": 1.75043177892919,
            "y": 0.486607142857143,
            "scheduled": false
          },
          "7ca3": {
            "name": "query",
            "canvasName": "query",
            "summary": "Query templates from form",
            "description": "Query data using a dot/bracket notation string and a matching key/value pair.",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "displayName": "WorkFlowEngine",
            "type": "operation",
            "variables": {
              "incoming": {
                "pass_on_null": false,
                "query": "templates",
                "obj": "$var.6f9c.return_data"
              },
              "outgoing": {
                "return_data": null
              },
              "error": ""
            },
            "deprecated": false,
            "matched": [
              {
                "key": "canvasName",
                "highlightString": "<span class='highlight-string'>query</span>"
              },
              {
                "key": "summary",
                "highlightString": "<span class='highlight-string'>Query</span> Data Using 'json-query' Format"
              },
              {
                "key": "description",
                "highlightString": "<span class='highlight-string'>Query</span> data using a dot/bracket notation string and a matching key/value pair."
              }
            ],
            "groups": [],
            "x": 1.62348877374784,
            "y": 0.578869047619048,
            "scheduled": false
          },
          "7fb0": {
            "name": "query",
            "canvasName": "query",
            "summary": "Query commandTemplates from form",
            "description": "Query data using a dot/bracket notation string and a matching key/value pair.",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "displayName": "WorkFlowEngine",
            "type": "operation",
            "variables": {
              "incoming": {
                "pass_on_null": false,
                "query": "commandTemplates",
                "obj": "$var.6f9c.return_data"
              },
              "outgoing": {
                "return_data": null
              },
              "error": ""
            },
            "deprecated": false,
            "matched": [
              {
                "key": "canvasName",
                "highlightString": "<span class='highlight-string'>query</span>"
              },
              {
                "key": "summary",
                "highlightString": "<span class='highlight-string'>Query</span> Data Using 'json-query' Format"
              },
              {
                "key": "description",
                "highlightString": "<span class='highlight-string'>Query</span> data using a dot/bracket notation string and a matching key/value pair."
              }
            ],
            "groups": [],
            "x": 1.6839378238342,
            "y": 0.53125,
            "scheduled": false
          },
          "e651": {
            "name": "query",
            "canvasName": "query",
            "summary": "Query goldenConfigTrees from form",
            "description": "Query data using a dot/bracket notation string and a matching key/value pair.",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "displayName": "WorkFlowEngine",
            "type": "operation",
            "variables": {
              "incoming": {
                "pass_on_null": false,
                "query": "goldenConfigTrees",
                "obj": "$var.6f9c.return_data"
              },
              "outgoing": {
                "return_data": null
              },
              "error": ""
            },
            "deprecated": false,
            "matched": [
              {
                "key": "canvasName",
                "highlightString": "<span class='highlight-string'>query</span>"
              },
              {
                "key": "summary",
                "highlightString": "<span class='highlight-string'>Query</span> Data Using 'json-query' Format"
              },
              {
                "key": "description",
                "highlightString": "<span class='highlight-string'>Query</span> data using a dot/bracket notation string and a matching key/value pair."
              }
            ],
            "groups": [],
            "x": 1.80656303972366,
            "y": 0.427083333333333,
            "scheduled": false
          },
          "47d6": {
            "name": "merge",
            "canvasName": "merge",
            "summary": "Merge Component Data to original form",
            "description": "Merge data into a single object",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "displayName": "WorkFlowEngine",
            "type": "operation",
            "variables": {
              "incoming": {
                "data_to_merge": [
                  {
                    "key": "ac-agenda-job",
                    "value": {
                      "task": "ca33",
                      "variable": "return_data"
                    }
                  },
                  {
                    "key": "workflow",
                    "value": {
                      "task": "f4fa",
                      "variable": "return_data"
                    }
                  },
                  {
                    "key": "json-forms",
                    "value": {
                      "task": "a9df",
                      "variable": "return_data"
                    }
                  },
                  {
                    "key": "forms",
                    "value": {
                      "task": "2749",
                      "variable": "return_data"
                    }
                  },
                  {
                    "key": "template",
                    "value": {
                      "task": "7ca3",
                      "variable": "return_data"
                    }
                  },
                  {
                    "key": "mop-template",
                    "value": {
                      "task": "7fb0",
                      "variable": "return_data"
                    }
                  },
                  {
                    "key": "mop-analytic-template",
                    "value": {
                      "task": "e6f7",
                      "variable": "return_data"
                    }
                  },
                  {
                    "key": "golden-config",
                    "value": {
                      "task": "e651",
                      "variable": "return_data"
                    }
                  },
                  {
                    "key": "transformation",
                    "value": {
                      "task": "1ee5",
                      "variable": "return_data"
                    }
                  }
                ]
              },
              "outgoing": {
                "merged_object": null
              }
            },
            "deprecated": false,
            "matched": [
              {
                "key": "canvasName",
                "highlightString": "<span class='highlight-string'>merge</span>"
              },
              {
                "key": "summary",
                "highlightString": "<span class='highlight-string'>Merge</span> Data"
              },
              {
                "key": "description",
                "highlightString": "<span class='highlight-string'>Merge</span> data into a single object"
              }
            ],
            "groups": [],
            "x": 1.60189982728843,
            "y": 0.854166666666667
          },
          "3dc1": {
            "name": "setObjectKey",
            "canvasName": "setObjectKey",
            "summary": "Set componentMap Key",
            "description": "Set an object key",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "displayName": "Object",
            "type": "automatic",
            "variables": {
              "incoming": {
                "obj": "$var.job.discovery",
                "path": [
                  "componentMap"
                ],
                "value": "$var.47d6.merged_object"
              },
              "outgoing": {
                "object": "$var.job.discovery"
              },
              "error": ""
            },
            "deprecated": true,
            "matched": [
              {
                "key": "canvasName",
                "highlightString": "<span class='highlight-string'>setObj</span>ectKey"
              }
            ],
            "groups": [],
            "actor": "Pronghorn",
            "x": 1.9006908462867,
            "y": 0.852678571428571,
            "scheduled": false
          },
          "c9b2": {
            "name": "prepareExports",
            "canvasName": "prepareExports",
            "summary": "Export components",
            "description": "Prepare list of selected individual components for export. Takes in the component map, filters components selected for export, and outputs an array of component maps and dependencies for each item.",
            "location": "Application",
            "locationType": null,
            "app": "AppArtifacts",
            "displayName": "AppArtifacts",
            "type": "automatic",
            "variables": {
              "incoming": {
                "componentMap": "$var.47d6.merged_object"
              },
              "outgoing": {
                "List": "$var.job.exports"
              },
              "error": ""
            },
            "deprecated": false,
            "matched": [
              {
                "key": "canvasName",
                "highlightString": "<span class='highlight-string'>prepare</span>Exports"
              },
              {
                "key": "description",
                "highlightString": "<span class='highlight-string'>Prepare</span> list of selected individual components for export. Takes in the component map, filters components selected for export, and outputs an array of component maps and dependencies for each item."
              }
            ],
            "groups": [],
            "actor": "Pronghorn",
            "x": 1.73316062176166,
            "y": 0.852678571428571,
            "scheduled": false
          },
          "5e6b": {
            "name": "merge",
            "canvasName": "merge",
            "summary": "Merge Data",
            "description": "Merge data into a single object",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "type": "operation",
            "displayName": "WorkFlowEngine",
            "variables": {
              "incoming": {
                "data_to_merge": [
                  {
                    "key": "automation",
                    "value": {
                      "task": "2d7f",
                      "variable": "return_data"
                    }
                  },
                  {
                    "key": "workflow",
                    "value": {
                      "task": "51d6",
                      "variable": "return_data"
                    }
                  },
                  {
                    "key": "transformation",
                    "value": {
                      "task": "93bc",
                      "variable": "return_data"
                    }
                  }
                ]
              },
              "outgoing": {
                "merged_object": null
              }
            },
            "deprecated": false,
            "matched": [
              {
                "key": "canvasName",
                "highlightString": "<span class='highlight-string'>merge</span>"
              },
              {
                "key": "summary",
                "highlightString": "<span class='highlight-string'>Merge</span> Data"
              },
              {
                "key": "description",
                "highlightString": "<span class='highlight-string'>Merge</span> data into a single object"
              }
            ],
            "groups": [],
            "x": 0.33906633906633904,
            "y": 0.48027057497181513
          },
          "d162": {
            "name": "evaluation",
            "canvasName": "evaluation",
            "summary": "Run Evaluation Task",
            "description": "Run an evaluation",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "type": "operation",
            "displayName": "WorkFlowEngine",
            "variables": {
              "incoming": {
                "all_true_flag": false,
                "evaluation_groups": [
                  {
                    "all_true_flag": false,
                    "evaluations": [
                      {
                        "query": "zeroTouch",
                        "operand_1": {
                          "variable": "artifact",
                          "task": "job"
                        },
                        "operator": "==",
                        "operand_2": {
                          "variable": false,
                          "task": "static"
                        }
                      }
                    ]
                  }
                ]
              },
              "outgoing": {
                "return_value": null
              }
            },
            "deprecated": false,
            "matched": [
              {
                "key": "canvasName",
                "highlightString": "<span class='highlight-string'>eval</span>uation"
              },
              {
                "key": "summary",
                "highlightString": "Run <span class='highlight-string'>Eval</span>uation Task"
              },
              {
                "key": "description",
                "highlightString": "Run an <span class='highlight-string'>eval</span>uation"
              }
            ],
            "groups": [],
            "x": 1.151986183074266,
            "y": 0.9023485784919654
          },
          "f2e9": {
            "name": "newVariable",
            "canvasName": "newVariable",
            "summary": "Create a Job Variable",
            "description": "Create a new Job variable by Job ID and assign it a value.",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "type": "operation",
            "displayName": "WorkFlowEngine",
            "variables": {
              "incoming": {
                "name": "mergedComponents",
                "value": "$var.7144.merged_object"
              },
              "outgoing": {
                "value": null
              }
            },
            "deprecated": false,
            "matched": [
              {
                "key": "summary",
                "highlightString": "Create a <span class='highlight-string'>Job</span> Variable"
              },
              {
                "key": "description",
                "highlightString": "Create a new <span class='highlight-string'>Job</span> variable by Job ID and assign it a value."
              }
            ],
            "groups": [],
            "x": 1.13568281938326,
            "y": 1.2886435331230284
          },
          "4c38": {
            "name": "query",
            "canvasName": "query",
            "summary": "Query transformation",
            "description": "Query data using a dot/bracket notation string and a matching key/value pair.",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "displayName": "WorkFlowEngine",
            "type": "operation",
            "variables": {
              "incoming": {
                "pass_on_null": false,
                "query": "transformation",
                "obj": "$var.5dc2.return_data"
              },
              "outgoing": {
                "return_data": null
              },
              "error": ""
            },
            "deprecated": false,
            "matched": [
              {
                "key": "canvasName",
                "highlightString": "<span class='highlight-string'>query</span>"
              },
              {
                "key": "summary",
                "highlightString": "<span class='highlight-string'>Query</span> Data Using 'json-query' Format"
              },
              {
                "key": "description",
                "highlightString": "<span class='highlight-string'>Query</span> data using a dot/bracket notation string and a matching key/value pair."
              }
            ],
            "groups": [],
            "x": 0.8298791018998273,
            "y": 1.8723684210526317,
            "scheduled": false
          },
          "9e15": {
            "name": "modify",
            "canvasName": "modify",
            "summary": "Modify transformations",
            "description": "Modify data",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "displayName": "WorkFlowEngine",
            "type": "operation",
            "variables": {
              "incoming": {
                "object_to_update": "$var.job.components",
                "query": "transformations",
                "new_value": "$var.4c38.return_data"
              },
              "outgoing": {
                "updated_object": "$var.job.components"
              },
              "error": ""
            },
            "deprecated": false,
            "matched": [
              {
                "key": "canvasName",
                "highlightString": "<span class='highlight-string'>modify</span>"
              },
              {
                "key": "summary",
                "highlightString": "<span class='highlight-string'>Modify</span> Data"
              },
              {
                "key": "description",
                "highlightString": "<span class='highlight-string'>Modify</span> data"
              }
            ],
            "groups": [],
            "x": 0.9455958549222798,
            "y": 1.8710526315789473,
            "scheduled": false
          },
          "1ee5": {
            "name": "query",
            "canvasName": "query",
            "summary": "Query transformations from form",
            "description": "Query data using a dot/bracket notation string and a matching key/value pair.",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "displayName": "WorkFlowEngine",
            "type": "operation",
            "variables": {
              "incoming": {
                "pass_on_null": false,
                "query": "transformations",
                "obj": "$var.6f9c.return_data"
              },
              "outgoing": {
                "return_data": null
              },
              "error": ""
            },
            "deprecated": false,
            "matched": [
              {
                "key": "canvasName",
                "highlightString": "<span class='highlight-string'>query</span>"
              },
              {
                "key": "summary",
                "highlightString": "<span class='highlight-string'>Query</span> Data Using 'json-query' Format"
              },
              {
                "key": "description",
                "highlightString": "<span class='highlight-string'>Query</span> data using a dot/bracket notation string and a matching key/value pair."
              }
            ],
            "groups": [],
            "x": 1.8592400690846287,
            "y": 0.3618421052631579,
            "scheduled": false
          },
          "93bc": {
            "name": "query",
            "canvasName": "query",
            "summary": "Query JST",
            "description": "Query data using a dot/bracket notation string and a matching key/value pair.",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "type": "operation",
            "displayName": "WorkFlowEngine",
            "variables": {
              "incoming": {
                "pass_on_null": false,
                "query": "jst",
                "obj": "$var.job.artifact"
              },
              "outgoing": {
                "return_data": null
              },
              "error": ""
            },
            "deprecated": false,
            "matched": [
              {
                "key": "canvasName",
                "highlightString": "<span class='highlight-string'>query</span>"
              },
              {
                "key": "summary",
                "highlightString": "<span class='highlight-string'>Query</span> Data Using 'json-query' Format"
              },
              {
                "key": "description",
                "highlightString": "<span class='highlight-string'>Query</span> data using a dot/bracket notation string and a matching key/value pair."
              }
            ],
            "groups": [],
            "x": -0.024179620034542316,
            "y": 0.4855263157894737,
            "scheduled": false
          }
        },
        "transitions": {
          "834": {
            "5fa9": {
              "type": "standard",
              "state": "success"
            }
          },
          "2749": {
            "47d6": {
              "type": "standard",
              "state": "success"
            }
          },
          "5875": {
            "2f07": {
              "type": "standard",
              "state": "success"
            }
          },
          "7144": {
            "f2e9": {
              "type": "standard",
              "state": "success"
            }
          },
          "workflow_start": {
            "93bc": {
              "type": "standard",
              "state": "success"
            }
          },
          "workflow_end": {},
          "2d7f": {
            "5e6b": {
              "type": "standard",
              "state": "success"
            }
          },
          "51d6": {
            "5e6b": {
              "type": "standard",
              "state": "success"
            }
          },
          "5dc2": {
            "aa5f": {
              "type": "standard",
              "state": "success"
            }
          },
          "66d8": {
            "6f9c": {
              "type": "standard",
              "state": "success"
            }
          },
          "aa5f": {
            "b24c": {
              "type": "standard",
              "state": "success"
            },
            "624e": {
              "type": "standard",
              "state": "failure"
            }
          },
          "624e": {
            "5875": {
              "type": "standard",
              "state": "success"
            },
            "2f07": {
              "type": "standard",
              "state": "failure"
            }
          },
          "c8f0": {},
          "2f07": {
            "f0f": {
              "type": "standard",
              "state": "success"
            },
            "a796": {
              "type": "standard",
              "state": "failure"
            }
          },
          "a796": {
            "6b26": {
              "type": "standard",
              "state": "success"
            },
            "dfce": {
              "type": "standard",
              "state": "failure"
            }
          },
          "5fa9": {
            "5dc2": {
              "type": "standard",
              "state": "success"
            }
          },
          "b24c": {
            "624e": {
              "type": "standard",
              "state": "success"
            }
          },
          "f0f": {
            "a796": {
              "type": "standard",
              "state": "success"
            }
          },
          "6b26": {
            "dfce": {
              "type": "standard",
              "state": "success"
            }
          },
          "5e51": {
            "dab7": {
              "type": "standard",
              "state": "success"
            }
          },
          "dfce": {
            "5e51": {
              "type": "standard",
              "state": "success"
            },
            "dab7": {
              "type": "standard",
              "state": "failure"
            }
          },
          "dab7": {
            "e00a": {
              "type": "standard",
              "state": "success"
            },
            "e600": {
              "type": "standard",
              "state": "failure"
            }
          },
          "e00a": {
            "e600": {
              "type": "standard",
              "state": "success"
            }
          },
          "e600": {
            "a3da": {
              "type": "standard",
              "state": "success"
            },
            "f35a": {
              "type": "standard",
              "state": "failure"
            }
          },
          "a3da": {
            "f35a": {
              "type": "standard",
              "state": "success"
            }
          },
          "a5ab": {
            "4c38": {
              "type": "standard",
              "state": "success"
            }
          },
          "f35a": {
            "a5ab": {
              "type": "standard",
              "state": "success"
            },
            "4c38": {
              "type": "standard",
              "state": "failure"
            }
          },
          "6f9c": {
            "2749": {
              "type": "standard",
              "state": "success"
            },
            "ca33": {
              "type": "standard",
              "state": "success"
            },
            "f4fa": {
              "type": "standard",
              "state": "success"
            },
            "a9df": {
              "type": "standard",
              "state": "success"
            },
            "7ca3": {
              "type": "standard",
              "state": "success"
            },
            "7fb0": {
              "type": "standard",
              "state": "success"
            },
            "e6f7": {
              "type": "standard",
              "state": "success"
            },
            "e651": {
              "type": "standard",
              "state": "success"
            },
            "1ee5": {
              "type": "standard",
              "state": "success"
            }
          },
          "ca33": {
            "47d6": {
              "type": "standard",
              "state": "success"
            }
          },
          "f4fa": {
            "47d6": {
              "type": "standard",
              "state": "success"
            }
          },
          "a9df": {
            "47d6": {
              "type": "standard",
              "state": "success"
            }
          },
          "e6f7": {
            "47d6": {
              "type": "standard",
              "state": "success"
            }
          },
          "7ca3": {
            "47d6": {
              "type": "standard",
              "state": "success"
            }
          },
          "7fb0": {
            "47d6": {
              "type": "standard",
              "state": "success"
            }
          },
          "e651": {
            "47d6": {
              "type": "standard",
              "state": "success"
            }
          },
          "47d6": {
            "c9b2": {
              "type": "standard",
              "state": "success"
            }
          },
          "3dc1": {
            "workflow_end": {
              "type": "standard",
              "state": "success"
            }
          },
          "fd8d": {},
          "b8e8": {},
          "2a8b": {},
          "c9b2": {
            "3dc1": {
              "type": "standard",
              "state": "success"
            }
          },
          "5e6b": {
            "834": {
              "type": "standard",
              "state": "success"
            }
          },
          "d162": {
            "6f9c": {
              "type": "standard",
              "state": "failure"
            },
            "66d8": {
              "type": "standard",
              "state": "success"
            }
          },
          "f2e9": {
            "d162": {
              "type": "standard",
              "state": "success"
            }
          },
          "4c38": {
            "7144": {
              "type": "standard",
              "state": "failure"
            },
            "9e15": {
              "type": "standard",
              "state": "success"
            }
          },
          "9e15": {
            "7144": {
              "type": "standard",
              "state": "success"
            }
          },
          "1ee5": {
            "47d6": {
              "type": "standard",
              "state": "success"
            }
          },
          "93bc": {
            "2d7f": {
              "type": "standard",
              "state": "failure"
            },
            "51d6": {
              "type": "standard",
              "state": "failure"
            },
            "5e6b": {
              "type": "standard",
              "state": "success"
            }
          }
        },
        "font_size": 12,
        "created": "2020-03-27T16:46:32.533Z",
        "created_by": {
          "provenance": "Local AAA",
          "username": "Itential Artifacts",
          "firstname": "admin",
          "inactive": true,
          "email": ""
        },
        "createdVersion": "5.5.9-2019.3.0.0",
        "last_updated": "2021-11-09T14:55:00.674Z",
        "last_updated_by": {
          "provenance": "Local AAA",
          "username": "admin@pronghorn",
          "firstname": "admin",
          "inactive": false,
          "email": ""
        },
        "lastUpdatedVersion": "5.40.5-2021.1.59.0",
        "type": "automation",
        "description": null,
        "inputSchema": {
          "type": "object",
          "properties": {
            "artifact": {
              "type": "object",
              "examples": [
                {
                  "name": "value"
                }
              ]
            }
          },
          "required": [
            "artifact"
          ]
        },
        "outputSchema": {
          "type": "object",
          "properties": {
            "artifact": {
              "type": "object",
              "examples": [
                {
                  "name": "value"
                }
              ]
            },
            "_id": {
              "type": "string",
              "pattern": "^[0-9a-f]{24}$"
            },
            "initiator": {
              "type": "string"
            },
            "discovery": {
              "title": "object",
              "type": "object",
              "properties": {},
              "examples": [
                {
                  "first": {
                    "second": {
                      "third": "last"
                    }
                  }
                }
              ]
            },
            "components": {
              "type": [
                "array",
                "string",
                "boolean",
                "integer",
                "number",
                "object"
              ],
              "examples": [
                "updated item"
              ]
            },
            "mergedComponents": {
              "type": [
                "array",
                "boolean",
                "null",
                "number",
                "object",
                "string"
              ]
            },
            "exports": {
              "type": "array"
            }
          }
        },
        "tags": [],
        "groups": []
      }
    },
    {
      "type": "workflow",
      "data": {
        "name": "IAP Artifacts AW Create Git Repo",
        "tasks": {
          "6244": {
            "name": "query",
            "canvasName": "query",
            "summary": "Artifact Name",
            "description": "Query data using a dot/bracket notation string and a matching key/value pair.",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "displayName": "WorkFlowEngine",
            "type": "operation",
            "variables": {
              "incoming": {
                "pass_on_null": false,
                "query": "name",
                "obj": "$var.job.export"
              },
              "outgoing": {
                "return_data": null
              },
              "error": ""
            },
            "deprecated": false,
            "matched": [
              {
                "key": "canvasName",
                "highlightString": "<span class='highlight-string'>query</span>"
              },
              {
                "key": "summary",
                "highlightString": "<span class='highlight-string'>Query</span> Data Using 'json-query' Format"
              },
              {
                "key": "description",
                "highlightString": "<span class='highlight-string'>Query</span> data using a dot/bracket notation string and a matching key/value pair."
              }
            ],
            "groups": [],
            "x": -0.957685664939551,
            "y": 0.40131578947368424,
            "scheduled": false
          },
          "workflow_start": {
            "name": "workflow_start",
            "groups": [],
            "x": -1.0613126079447324,
            "y": 0.4131578947368421,
            "summary": "workflow_start",
            "description": "workflow_start"
          },
          "workflow_end": {
            "name": "workflow_end",
            "groups": [],
            "x": -0.42400690846286704,
            "y": 0.39210526315789473,
            "summary": "workflow_end",
            "description": "workflow_end"
          },
          "1e4c": {
            "name": "query",
            "summary": "Artifact Description",
            "description": "Query data using a dot/bracket notation string and a matching key/value pair.",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "displayName": "WorkFlowEngine",
            "type": "operation",
            "variables": {
              "incoming": {
                "pass_on_null": false,
                "query": "description",
                "obj": "$var.job.export"
              },
              "outgoing": {
                "return_data": null
              },
              "error": ""
            },
            "deprecated": false,
            "matched": [
              {
                "key": "name",
                "highlightString": "<span class='highlight-string'>query</span>"
              },
              {
                "key": "summary",
                "highlightString": "<span class='highlight-string'>Query</span> Data Using 'json-query' Format"
              },
              {
                "key": "description",
                "highlightString": "<span class='highlight-string'>Query</span> data using a dot/bracket notation string and a matching key/value pair."
              }
            ],
            "groups": [],
            "x": -0.853195164075993,
            "y": 0.4039473684210526,
            "scheduled": false
          },
          "6ae6": {
            "name": "childJob",
            "canvasName": "childJob",
            "summary": "Create on GitLab",
            "description": "Run a child Job inside a Workflow",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "displayName": "WorkFlowEngine",
            "type": "operation",
            "variables": {
              "incoming": {
                "task": "",
                "workflow": "IAP Artifacts AW GitLab Create Link",
                "variables": {
                  "description": {
                    "variable": "",
                    "task": "1e4c",
                    "value": "return_data"
                  },
                  "artifact": {
                    "variable": "",
                    "task": "job",
                    "editable": true,
                    "value": "publishedArtifact"
                  },
                  "repoName": {
                    "variable": "",
                    "task": "6244",
                    "value": "return_data"
                  }
                },
                "data_array": "",
                "transformation": "",
                "loopType": ""
              },
              "outgoing": {
                "job_details": null
              }
            },
            "deprecated": false,
            "matched": [
              {
                "key": "canvasName",
                "highlightString": "<span class='highlight-string'>childJob</span>"
              }
            ],
            "groups": [],
            "actor": "job",
            "x": -0.7245250431778929,
            "y": 0.3986842105263158
          },
          "42ef": {
            "name": "query",
            "canvasName": "query",
            "summary": "Query Gitlab Link",
            "description": "Query data using a dot/bracket notation string and a matching key/value pair.",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "type": "operation",
            "displayName": "WorkFlowEngine",
            "variables": {
              "incoming": {
                "pass_on_null": false,
                "query": "homepage",
                "obj": "$var.6ae6.job_details"
              },
              "outgoing": {
                "return_data": "$var.job.gitlabLink"
              },
              "error": ""
            },
            "deprecated": false,
            "matched": [
              {
                "key": "canvasName",
                "highlightString": "<span class='highlight-string'>query</span>"
              },
              {
                "key": "summary",
                "highlightString": "<span class='highlight-string'>Query</span> Data Using 'json-query' Format"
              },
              {
                "key": "description",
                "highlightString": "<span class='highlight-string'>Query</span> data using a dot/bracket notation string and a matching key/value pair."
              }
            ],
            "groups": [],
            "x": -0.5302245250431779,
            "y": 0.3986842105263158,
            "scheduled": false
          }
        },
        "transitions": {
          "4778": {},
          "6244": {
            "1e4c": {
              "type": "standard",
              "state": "success"
            }
          },
          "workflow_start": {
            "6244": {
              "type": "standard",
              "state": "success"
            }
          },
          "workflow_end": {},
          "a671": {},
          "1e4c": {
            "6ae6": {
              "type": "standard",
              "state": "success"
            }
          },
          "f186": {},
          "4d92": {},
          "de5e": {},
          "6cad": {},
          "b3bd": {},
          "6ae6": {
            "42ef": {
              "type": "standard",
              "state": "success"
            }
          },
          "fe56": {},
          "42ef": {
            "workflow_end": {
              "type": "standard",
              "state": "success"
            }
          }
        },
        "font_size": 12,
        "created": "2020-05-20T20:47:44.495Z",
        "created_by": {
          "provenance": "Local AAA",
          "username": "admin@pronghorn",
          "firstname": "admin",
          "inactive": false,
          "email": ""
        },
        "createdVersion": "5.10.4-2020.1.3.0",
        "last_updated": "2021-11-09T14:55:00.710Z",
        "last_updated_by": {
          "provenance": "Local AAA",
          "username": "admin@pronghorn",
          "firstname": "admin",
          "inactive": false,
          "email": ""
        },
        "lastUpdatedVersion": "5.40.5-2021.1.59.0",
        "type": "automation",
        "description": null,
        "inputSchema": {
          "type": "object",
          "properties": {
            "export": {
              "type": "object",
              "examples": [
                {
                  "name": "value"
                }
              ]
            },
            "publishedArtifact": {
              "type": [
                "array",
                "boolean",
                "null",
                "number",
                "object",
                "string"
              ]
            }
          },
          "required": [
            "export",
            "publishedArtifact"
          ]
        },
        "outputSchema": {
          "type": "object",
          "properties": {
            "export": {
              "type": "object",
              "examples": [
                {
                  "name": "value"
                }
              ]
            },
            "publishedArtifact": {
              "type": [
                "array",
                "boolean",
                "null",
                "number",
                "object",
                "string"
              ]
            },
            "_id": {
              "type": "string",
              "pattern": "^[0-9a-f]{24}$"
            },
            "initiator": {
              "type": "string"
            },
            "gitlabLink": {
              "type": [
                "string",
                "number",
                "object",
                "integer",
                "array",
                "boolean",
                "null"
              ],
              "examples": [
                "value"
              ]
            }
          }
        },
        "tags": [],
        "groups": []
      }
    },
    {
      "type": "workflow",
      "data": {
        "name": "IAP Artifacts AW Create Published Artifact",
        "tasks": {
          "4011": {
            "name": "transformation",
            "canvasName": "transformation",
            "summary": "JSON Transformation",
            "description": "Perform a JSON Transformation using the JST library.",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "type": "operation",
            "displayName": "WorkFlowEngine",
            "variables": {
              "incoming": {
                "tr_id": "5f287844d76d950aa5f59814",
                "variableMap": {
                  "incoming": "$var.job.publishedArtifact"
                },
                "options": {
                  "extractOutput": false,
                  "validateIncoming": false,
                  "revertToDefaultValue": true
                }
              },
              "outgoing": {
                "outgoing": null
              }
            },
            "deprecated": false,
            "matched": [
              {
                "key": "description",
                "highlightString": "Perform a JSON Transformation using the <span class='highlight-string'>JST</span> library."
              }
            ],
            "groups": [],
            "x": 0.8517308948399739,
            "y": 0.3495440729483283,
            "task_name": "fixPackageJson"
          },
          "4742": {
            "name": "newVariable",
            "canvasName": "newVariable",
            "summary": "Create a Job Variable",
            "description": "Create a new Job variable by Job ID and assign it a value.",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "type": "operation",
            "displayName": "WorkFlowEngine",
            "variables": {
              "incoming": {
                "name": "export",
                "value": "$var.9b57.merged_object"
              },
              "outgoing": {
                "value": null
              }
            },
            "deprecated": false,
            "matched": [
              {
                "key": "canvasName",
                "highlightString": "<span class='highlight-string'>newVa</span>riable"
              }
            ],
            "groups": [],
            "x": -1.003454231433506,
            "y": 0.5118421052631579
          },
          "6244": {
            "name": "query",
            "canvasName": "query",
            "summary": "Artifact Name",
            "description": "Query data using a dot/bracket notation string and a matching key/value pair.",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "displayName": "WorkFlowEngine",
            "type": "operation",
            "variables": {
              "incoming": {
                "pass_on_null": false,
                "query": "name",
                "obj": "$var.job.export"
              },
              "outgoing": {
                "return_data": null
              },
              "error": ""
            },
            "deprecated": false,
            "matched": [
              {
                "key": "canvasName",
                "highlightString": "<span class='highlight-string'>query</span>"
              },
              {
                "key": "summary",
                "highlightString": "<span class='highlight-string'>Query</span> Data Using 'json-query' Format"
              },
              {
                "key": "description",
                "highlightString": "<span class='highlight-string'>Query</span> data using a dot/bracket notation string and a matching key/value pair."
              }
            ],
            "groups": [],
            "x": -0.8860103626943006,
            "y": 0.4017857142857143,
            "scheduled": false
          },
          "9658": {
            "name": "query",
            "summary": "Components",
            "description": "Query data using a dot/bracket notation string and a matching key/value pair.",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "displayName": "WorkFlowEngine",
            "type": "operation",
            "variables": {
              "incoming": {
                "pass_on_null": false,
                "query": "componentMap",
                "obj": "$var.job.discovery"
              },
              "outgoing": {
                "return_data": null
              },
              "error": ""
            },
            "deprecated": false,
            "matched": [
              {
                "key": "name",
                "highlightString": "<span class='highlight-string'>query</span>"
              },
              {
                "key": "summary",
                "highlightString": "<span class='highlight-string'>Query</span> Data Using 'json-query' Format"
              },
              {
                "key": "description",
                "highlightString": "<span class='highlight-string'>Query</span> data using a dot/bracket notation string and a matching key/value pair."
              }
            ],
            "groups": [],
            "x": 0.3799654576856649,
            "y": 0.38095238095238093,
            "scheduled": false
          },
          "workflow_start": {
            "name": "workflow_start",
            "groups": [],
            "x": -1.3851468048359241,
            "y": 0.3894736842105263,
            "summary": "workflow_start",
            "description": "workflow_start"
          },
          "workflow_end": {
            "name": "workflow_end",
            "groups": [],
            "x": 1.0518134715025906,
            "y": 0.3224368499257058,
            "summary": "workflow_end",
            "description": "workflow_end"
          },
          "1e4c": {
            "name": "query",
            "summary": "Artifact Description",
            "description": "Query data using a dot/bracket notation string and a matching key/value pair.",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "displayName": "WorkFlowEngine",
            "type": "operation",
            "variables": {
              "incoming": {
                "pass_on_null": false,
                "query": "description",
                "obj": "$var.job.export"
              },
              "outgoing": {
                "return_data": null
              },
              "error": ""
            },
            "deprecated": false,
            "matched": [
              {
                "key": "name",
                "highlightString": "<span class='highlight-string'>query</span>"
              },
              {
                "key": "summary",
                "highlightString": "<span class='highlight-string'>Query</span> Data Using 'json-query' Format"
              },
              {
                "key": "description",
                "highlightString": "<span class='highlight-string'>Query</span> data using a dot/bracket notation string and a matching key/value pair."
              }
            ],
            "groups": [],
            "x": -0.8160621761658031,
            "y": 0.40476190476190477,
            "scheduled": false
          },
          "bd28": {
            "name": "query",
            "summary": "Artifact Readme",
            "description": "Query data using a dot/bracket notation string and a matching key/value pair.",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "displayName": "WorkFlowEngine",
            "type": "operation",
            "variables": {
              "incoming": {
                "pass_on_null": false,
                "query": "readme",
                "obj": "$var.job.export"
              },
              "outgoing": {
                "return_data": null
              },
              "error": ""
            },
            "deprecated": false,
            "matched": [
              {
                "key": "name",
                "highlightString": "<span class='highlight-string'>query</span>"
              },
              {
                "key": "summary",
                "highlightString": "<span class='highlight-string'>Query</span> Data Using 'json-query' Format"
              },
              {
                "key": "description",
                "highlightString": "<span class='highlight-string'>Query</span> data using a dot/bracket notation string and a matching key/value pair."
              }
            ],
            "groups": [],
            "x": -0.6804835924006909,
            "y": 0.4107142857142857,
            "scheduled": false
          },
          "ce7a": {
            "name": "query",
            "summary": "Artifact Keywords",
            "description": "Query data using a dot/bracket notation string and a matching key/value pair.",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "displayName": "WorkFlowEngine",
            "type": "operation",
            "variables": {
              "incoming": {
                "pass_on_null": false,
                "query": "keywords",
                "obj": "$var.job.export"
              },
              "outgoing": {
                "return_data": null
              },
              "error": ""
            },
            "deprecated": false,
            "matched": [
              {
                "key": "name",
                "highlightString": "<span class='highlight-string'>query</span>"
              },
              {
                "key": "summary",
                "highlightString": "<span class='highlight-string'>Query</span> Data Using 'json-query' Format"
              },
              {
                "key": "description",
                "highlightString": "<span class='highlight-string'>Query</span> data using a dot/bracket notation string and a matching key/value pair."
              }
            ],
            "groups": [],
            "x": -0.15457685664939552,
            "y": 0.41220238095238093,
            "scheduled": false
          },
          "999c": {
            "name": "merge",
            "summary": "Metadata",
            "description": "Merge data into a single object",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "displayName": "WorkFlowEngine",
            "type": "operation",
            "variables": {
              "incoming": {
                "data_to_merge": [
                  {
                    "key": "name",
                    "value": {
                      "task": "6244",
                      "variable": "return_data",
                      "editable": true
                    }
                  },
                  {
                    "key": "description",
                    "value": {
                      "task": "1e4c",
                      "variable": "return_data"
                    }
                  },
                  {
                    "key": "contributor",
                    "value": {
                      "task": "90c4",
                      "variable": "return_data"
                    }
                  },
                  {
                    "key": "readme",
                    "value": {
                      "task": "bd28",
                      "variable": "return_data"
                    }
                  },
                  {
                    "key": "license",
                    "value": {
                      "task": "job",
                      "variable": "license"
                    }
                  },
                  {
                    "key": "categories",
                    "value": {
                      "task": "job",
                      "variable": "categories"
                    }
                  },
                  {
                    "key": "keywords",
                    "value": {
                      "task": "job",
                      "variable": "keywords"
                    }
                  },
                  {
                    "key": "dependencies",
                    "value": {
                      "task": "2b90",
                      "variable": "return_data"
                    }
                  }
                ]
              },
              "outgoing": {
                "merged_object": null
              }
            },
            "deprecated": false,
            "matched": [
              {
                "key": "name",
                "highlightString": "<span class='highlight-string'>merge</span>"
              },
              {
                "key": "summary",
                "highlightString": "<span class='highlight-string'>Merge</span> Data"
              },
              {
                "key": "description",
                "highlightString": "<span class='highlight-string'>Merge</span> data into a single object"
              }
            ],
            "groups": [],
            "x": 0.29965457685664937,
            "y": 0.3913690476190476
          },
          "2b90": {
            "name": "query",
            "summary": "Artifact Dependencies",
            "description": "Query data using a dot/bracket notation string and a matching key/value pair.",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "displayName": "WorkFlowEngine",
            "type": "operation",
            "variables": {
              "incoming": {
                "pass_on_null": false,
                "query": "dependencies",
                "obj": "$var.job.discovery"
              },
              "outgoing": {
                "return_data": null
              },
              "error": ""
            },
            "deprecated": false,
            "matched": [
              {
                "key": "name",
                "highlightString": "<span class='highlight-string'>query</span>"
              },
              {
                "key": "summary",
                "highlightString": "<span class='highlight-string'>Query</span> Data Using 'json-query' Format"
              },
              {
                "key": "description",
                "highlightString": "<span class='highlight-string'>Query</span> data using a dot/bracket notation string and a matching key/value pair."
              }
            ],
            "groups": [],
            "x": 0.2219343696027634,
            "y": 0.3913690476190476,
            "scheduled": false
          },
          "8bd7": {
            "name": "merge",
            "summary": "Artifact Data",
            "description": "Merge data into a single object",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "displayName": "WorkFlowEngine",
            "type": "operation",
            "variables": {
              "incoming": {
                "data_to_merge": [
                  {
                    "key": "metadata",
                    "value": {
                      "task": "999c",
                      "variable": "merged_object"
                    }
                  },
                  {
                    "key": "components",
                    "value": {
                      "task": "9658",
                      "variable": "return_data"
                    }
                  }
                ]
              },
              "outgoing": {
                "merged_object": null
              }
            },
            "deprecated": false,
            "matched": [
              {
                "key": "name",
                "highlightString": "<span class='highlight-string'>merge</span>"
              },
              {
                "key": "summary",
                "highlightString": "<span class='highlight-string'>Merge</span> Data"
              },
              {
                "key": "description",
                "highlightString": "<span class='highlight-string'>Merge</span> data into a single object"
              }
            ],
            "groups": [],
            "x": 0.46113989637305697,
            "y": 0.3898809523809524
          },
          "63b": {
            "name": "ShowJsonForm",
            "canvasName": "ShowJsonForm",
            "summary": "Collect artifact metadata",
            "description": "Show Json Form",
            "location": "Application",
            "app": "JsonForms",
            "displayName": "JsonForms",
            "type": "manual",
            "variables": {
              "incoming": {
                "form_id": "Artifact Metadata",
                "instance_data": "$var.279e.merged_object"
              },
              "outgoing": {
                "export": "$var.job.export"
              },
              "error": ""
            },
            "view": "/json-forms/task/ShowJsonForm",
            "deprecated": false,
            "matched": [
              {
                "key": "canvasName",
                "highlightString": "<span class='highlight-string'>Show</span>JsonForm"
              },
              {
                "key": "summary",
                "highlightString": "<span class='highlight-string'>Show</span> Json Form"
              },
              {
                "key": "description",
                "highlightString": "<span class='highlight-string'>Show</span> Json Form"
              }
            ],
            "groups": [],
            "x": -1.0129533678756477,
            "y": 0.2776315789473684,
            "scheduled": false
          },
          "279e": {
            "name": "merge",
            "canvasName": "merge",
            "summary": "Merge Data",
            "description": "Merge data into a single object",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "displayName": "WorkFlowEngine",
            "type": "operation",
            "variables": {
              "incoming": {
                "data_to_merge": [
                  {
                    "key": "readme",
                    "value": {
                      "task": "job",
                      "variable": "readme",
                      "editable": true
                    }
                  },
                  {
                    "key": "name",
                    "value": {
                      "task": "job",
                      "variable": "name"
                    }
                  }
                ]
              },
              "outgoing": {
                "merged_object": null
              }
            },
            "deprecated": false,
            "matched": [
              {
                "key": "canvasName",
                "highlightString": "<span class='highlight-string'>merge</span>"
              },
              {
                "key": "summary",
                "highlightString": "<span class='highlight-string'>Merge</span> Data"
              },
              {
                "key": "description",
                "highlightString": "<span class='highlight-string'>Merge</span> data into a single object"
              }
            ],
            "groups": [],
            "x": -1.1640759930915372,
            "y": 0.2881578947368421
          },
          "1f91": {
            "name": "newVariable",
            "canvasName": "newVariable",
            "summary": "Create a Job Variable",
            "description": "Create a new Job variable by Job ID and assign it a value.",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "displayName": "WorkFlowEngine",
            "type": "operation",
            "variables": {
              "incoming": {
                "name": "keywords",
                "value": []
              },
              "outgoing": {
                "value": null
              }
            },
            "deprecated": false,
            "matched": [
              {
                "key": "summary",
                "highlightString": "Create a <span class='highlight-string'>Job</span> Variable"
              },
              {
                "key": "description",
                "highlightString": "Create a new <span class='highlight-string'>Job</span> variable by Job ID and assign it a value."
              }
            ],
            "groups": [],
            "x": -0.0051813471502590676,
            "y": 0.5610119047619048
          },
          "8eb0": {
            "name": "newVariable",
            "canvasName": "newVariable",
            "summary": "Create a Job Variable",
            "description": "Create a new Job variable by Job ID and assign it a value.",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "displayName": "WorkFlowEngine",
            "type": "operation",
            "variables": {
              "incoming": {
                "name": "license",
                "value": ""
              },
              "outgoing": {
                "value": null
              }
            },
            "deprecated": false,
            "matched": [
              {
                "key": "summary",
                "highlightString": "Create a <span class='highlight-string'>Job</span> Variable"
              },
              {
                "key": "description",
                "highlightString": "Create a new <span class='highlight-string'>Job</span> variable by Job ID and assign it a value."
              }
            ],
            "groups": [],
            "x": -0.5846286701208981,
            "y": 0.5788690476190477
          },
          "352a": {
            "name": "query",
            "canvasName": "query",
            "summary": "Artifact License",
            "description": "Query data using a dot/bracket notation string and a matching key/value pair.",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "displayName": "WorkFlowEngine",
            "type": "operation",
            "variables": {
              "incoming": {
                "pass_on_null": false,
                "query": "license",
                "obj": "$var.job.export"
              },
              "outgoing": {
                "return_data": "$var.job.license"
              },
              "error": ""
            },
            "deprecated": false,
            "matched": [
              {
                "key": "canvasName",
                "highlightString": "<span class='highlight-string'>query</span>"
              },
              {
                "key": "summary",
                "highlightString": "<span class='highlight-string'>Query</span> Data Using 'json-query' Format"
              },
              {
                "key": "description",
                "highlightString": "<span class='highlight-string'>Query</span> data using a dot/bracket notation string and a matching key/value pair."
              }
            ],
            "groups": [],
            "x": -0.6157167530224525,
            "y": 0.40773809523809523,
            "scheduled": false
          },
          "c7e1": {
            "name": "childJob",
            "canvasName": "childJob",
            "summary": "Create keywords array",
            "description": "Run a child Job inside a Workflow",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "displayName": "WorkFlowEngine",
            "type": "operation",
            "variables": {
              "incoming": {
                "task": "",
                "workflow": "IAP Artifacts AW Create Array",
                "variables": {
                  "items": {
                    "variable": "",
                    "task": "ce7a",
                    "value": "return_data"
                  },
                  "key": {
                    "variable": "",
                    "task": "static",
                    "value": "keyword"
                  }
                },
                "data_array": "",
                "transformation": "",
                "loopType": ""
              },
              "outgoing": {
                "job_details": null
              }
            },
            "deprecated": false,
            "matched": [
              {
                "key": "canvasName",
                "highlightString": "<span class='highlight-string'>childJob</span>"
              }
            ],
            "groups": [],
            "actor": "job",
            "x": -0.010362694300518135,
            "y": 0.25595238095238093
          },
          "fe56": {
            "name": "query",
            "canvasName": "query",
            "summary": "Query keywords array",
            "description": "Query data using a dot/bracket notation string and a matching key/value pair.",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "displayName": "WorkFlowEngine",
            "type": "operation",
            "variables": {
              "incoming": {
                "pass_on_null": false,
                "query": "result",
                "obj": "$var.c7e1.job_details"
              },
              "outgoing": {
                "return_data": "$var.job.keywords"
              },
              "error": ""
            },
            "deprecated": false,
            "matched": [
              {
                "key": "canvasName",
                "highlightString": "<span class='highlight-string'>query</span>"
              },
              {
                "key": "summary",
                "highlightString": "<span class='highlight-string'>Query</span> Data Using 'json-query' Format"
              },
              {
                "key": "description",
                "highlightString": "<span class='highlight-string'>Query</span> data using a dot/bracket notation string and a matching key/value pair."
              }
            ],
            "groups": [],
            "x": 0.12953367875647667,
            "y": 0.25297619047619047,
            "scheduled": false
          },
          "7ccc": {
            "name": "query",
            "canvasName": "query",
            "summary": "Query categories",
            "description": "Query data using a dot/bracket notation string and a matching key/value pair.",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "displayName": "WorkFlowEngine",
            "type": "operation",
            "variables": {
              "incoming": {
                "pass_on_null": false,
                "query": "categories",
                "obj": "$var.job.export"
              },
              "outgoing": {
                "return_data": null
              },
              "error": ""
            },
            "deprecated": false,
            "matched": [
              {
                "key": "canvasName",
                "highlightString": "<span class='highlight-string'>query</span>"
              },
              {
                "key": "summary",
                "highlightString": "<span class='highlight-string'>Query</span> Data Using 'json-query' Format"
              },
              {
                "key": "description",
                "highlightString": "<span class='highlight-string'>Query</span> data using a dot/bracket notation string and a matching key/value pair."
              }
            ],
            "groups": [],
            "x": -0.5509499136442142,
            "y": 0.41369047619047616,
            "scheduled": false
          },
          "71ac": {
            "name": "newVariable",
            "canvasName": "newVariable",
            "summary": "Create a Job Variable",
            "description": "Create a new Job variable by Job ID and assign it a value.",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "displayName": "WorkFlowEngine",
            "type": "operation",
            "variables": {
              "incoming": {
                "name": "categories",
                "value": []
              },
              "outgoing": {
                "value": null
              }
            },
            "deprecated": false,
            "matched": [
              {
                "key": "summary",
                "highlightString": "Create a <span class='highlight-string'>Job</span> <span class='highlight-string'>Var</span>iable"
              },
              {
                "key": "description",
                "highlightString": "Create a new <span class='highlight-string'>Job</span> <span class='highlight-string'>var</span>iable by Job ID and assign it a value."
              },
              {
                "key": "canvasName",
                "highlightString": "new<span class='highlight-string'>Var</span>iable"
              }
            ],
            "groups": [],
            "x": -0.40328151986183075,
            "y": 0.5744047619047619
          },
          "45fe": {
            "name": "childJob",
            "canvasName": "childJob",
            "summary": "Create categories array",
            "description": "Run a child Job inside a Workflow",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "displayName": "WorkFlowEngine",
            "type": "operation",
            "variables": {
              "incoming": {
                "task": "",
                "workflow": "IAP Artifacts AW Create Array",
                "variables": {
                  "items": {
                    "variable": "",
                    "task": "7ccc",
                    "value": "return_data"
                  },
                  "key": {
                    "variable": "",
                    "task": "static",
                    "value": "category"
                  }
                },
                "data_array": "",
                "transformation": "",
                "loopType": ""
              },
              "outgoing": {
                "job_details": null
              }
            },
            "deprecated": false,
            "matched": [
              {
                "key": "canvasName",
                "highlightString": "<span class='highlight-string'>childJob</span>"
              }
            ],
            "groups": [],
            "actor": "job",
            "x": -0.40241796200345425,
            "y": 0.2619047619047619
          },
          "34b6": {
            "name": "query",
            "canvasName": "query",
            "summary": "Query categories array",
            "description": "Query data using a dot/bracket notation string and a matching key/value pair.",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "displayName": "WorkFlowEngine",
            "type": "operation",
            "variables": {
              "incoming": {
                "pass_on_null": false,
                "query": "result",
                "obj": "$var.45fe.job_details"
              },
              "outgoing": {
                "return_data": "$var.job.categories"
              },
              "error": ""
            },
            "deprecated": false,
            "matched": [
              {
                "key": "canvasName",
                "highlightString": "<span class='highlight-string'>query</span>"
              },
              {
                "key": "summary",
                "highlightString": "<span class='highlight-string'>Query</span> Data Using 'json-query' Format"
              },
              {
                "key": "description",
                "highlightString": "<span class='highlight-string'>Query</span> data using a dot/bracket notation string and a matching key/value pair."
              }
            ],
            "groups": [],
            "x": -0.26770293609671847,
            "y": 0.27529761904761907,
            "scheduled": false
          },
          "90c4": {
            "name": "query",
            "canvasName": "query",
            "summary": "Artifact Contributor",
            "description": "Query data using a dot/bracket notation string and a matching key/value pair.",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "displayName": "WorkFlowEngine",
            "type": "operation",
            "variables": {
              "incoming": {
                "pass_on_null": false,
                "query": "contributor",
                "obj": "$var.job.export"
              },
              "outgoing": {
                "return_data": null
              },
              "error": ""
            },
            "deprecated": false,
            "matched": [
              {
                "key": "canvasName",
                "highlightString": "<span class='highlight-string'>query</span>"
              },
              {
                "key": "summary",
                "highlightString": "<span class='highlight-string'>Query</span> Data Using 'json-query' Format"
              },
              {
                "key": "description",
                "highlightString": "<span class='highlight-string'>Query</span> data using a dot/bracket notation string and a matching key/value pair."
              }
            ],
            "groups": [],
            "x": -0.7478411053540587,
            "y": 0.40625,
            "scheduled": false
          },
          "27ae": {
            "name": "createPublishedArtifactFromScratch",
            "canvasName": "createPublishedArtifactFromScratch",
            "summary": "Creates artifact for publishing without DB calls",
            "description": "Creates JSON object containing artifact file structure and all associated data from input tasks without touching database",
            "location": "Application",
            "locationType": null,
            "app": "AppArtifacts",
            "type": "automatic",
            "displayName": "AppArtifacts",
            "variables": {
              "incoming": {
                "artifactData": "$var.8bd7.merged_object",
                "modules": "$var.job.modules",
                "packageJson": "$var.job.packageJson"
              },
              "outgoing": {
                "callback": "$var.job.publishedArtifact"
              },
              "error": ""
            },
            "deprecated": false,
            "matched": [
              {
                "key": "canvasName",
                "highlightString": "<span class='highlight-string'>create</span>PublishedArtifactFromScratch"
              },
              {
                "key": "summary",
                "highlightString": "<span class='highlight-string'>Create</span>s artifact for publishing without DB calls"
              },
              {
                "key": "description",
                "highlightString": "<span class='highlight-string'>Create</span>s JSON object containing artifact file structure and all associated data from input tasks without touching database"
              }
            ],
            "groups": [],
            "actor": "Pronghorn",
            "x": 0.6796200345423143,
            "y": 0.3355263157894737,
            "scheduled": false
          },
          "b324": {
            "name": "evaluation",
            "canvasName": "evaluation",
            "summary": "Run Evaluation Task",
            "description": "Run an evaluation",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "type": "operation",
            "displayName": "WorkFlowEngine",
            "variables": {
              "incoming": {
                "all_true_flag": false,
                "evaluation_groups": [
                  {
                    "all_true_flag": false,
                    "evaluations": [
                      {
                        "query": "",
                        "operand_1": {
                          "variable": "zeroTouch",
                          "task": "job",
                          "editable": true
                        },
                        "operator": "==",
                        "operand_2": {
                          "variable": false,
                          "task": "static"
                        }
                      }
                    ]
                  }
                ]
              },
              "outgoing": {
                "return_value": null
              }
            },
            "deprecated": false,
            "matched": [
              {
                "key": "canvasName",
                "highlightString": "<span class='highlight-string'>eval</span>uation"
              },
              {
                "key": "summary",
                "highlightString": "Run <span class='highlight-string'>Eval</span>uation Task"
              },
              {
                "key": "description",
                "highlightString": "Run an <span class='highlight-string'>eval</span>uation"
              }
            ],
            "groups": [],
            "x": -1.2590673575129534,
            "y": 0.38552631578947366
          },
          "9b57": {
            "name": "merge",
            "canvasName": "merge",
            "summary": "Merge Data",
            "description": "Merge data into a single object",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "displayName": "WorkFlowEngine",
            "type": "operation",
            "variables": {
              "incoming": {
                "data_to_merge": [
                  {
                    "key": "readme",
                    "value": {
                      "task": "job",
                      "variable": "readme",
                      "editable": true
                    }
                  },
                  {
                    "key": "name",
                    "value": {
                      "task": "job",
                      "variable": "name"
                    }
                  },
                  {
                    "key": "contributor",
                    "value": {
                      "task": "static",
                      "variable": "ItentialArtifacts"
                    }
                  },
                  {
                    "key": "description",
                    "value": {
                      "task": "static",
                      "variable": "Default artifact description"
                    }
                  },
                  {
                    "key": "components",
                    "value": {
                      "task": "static",
                      "variable": {}
                    }
                  }
                ]
              },
              "outgoing": {
                "merged_object": null
              }
            },
            "deprecated": false,
            "matched": [
              {
                "key": "canvasName",
                "highlightString": "<span class='highlight-string'>merge</span>"
              },
              {
                "key": "summary",
                "highlightString": "<span class='highlight-string'>Merge</span> Data"
              },
              {
                "key": "description",
                "highlightString": "<span class='highlight-string'>Merge</span> data into a single object"
              }
            ],
            "groups": [],
            "x": -1.1545768566493955,
            "y": 0.5184210526315789
          },
          "dd7": {
            "name": "query",
            "summary": "Query out publishedArtifact as Job Variable",
            "description": "Query out publishedArtifact as Job Variable",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "displayName": "WorkFlowEngine",
            "type": "operation",
            "variables": {
              "incoming": {
                "pass_on_null": false,
                "query": "outgoing",
                "obj": "$var.4011.outgoing"
              },
              "outgoing": {
                "return_data": "$var.job.publishedArtifact"
              },
              "error": ""
            },
            "deprecated": false,
            "matched": [
              {
                "key": "name",
                "highlightString": "<span class='highlight-string'>query</span>"
              },
              {
                "key": "summary",
                "highlightString": "<span class='highlight-string'>Query</span> Data Using 'json-query' Format"
              },
              {
                "key": "description",
                "highlightString": "<span class='highlight-string'>Query</span> data using a dot/bracket notation string and a matching key/value pair."
              }
            ],
            "groups": [],
            "x": 0.9455958549222798,
            "y": 0.3298662704309064,
            "scheduled": false
          },
          "80d3": {
            "name": "evaluation",
            "canvasName": "evaluation",
            "summary": "Run Evaluation Task",
            "description": "Run an evaluation",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "type": "operation",
            "displayName": "WorkFlowEngine",
            "variables": {
              "incoming": {
                "all_true_flag": false,
                "evaluation_groups": [
                  {
                    "all_true_flag": false,
                    "evaluations": [
                      {
                        "query": "",
                        "operand_1": {
                          "variable": "scope",
                          "task": "job",
                          "editable": true
                        },
                        "operator": "==",
                        "operand_2": {
                          "variable": "@itentialopensource",
                          "task": "static"
                        }
                      }
                    ]
                  }
                ]
              },
              "outgoing": {
                "return_value": null
              }
            },
            "deprecated": false,
            "matched": [
              {
                "key": "canvasName",
                "highlightString": "<span class='highlight-string'>eval</span>uation"
              },
              {
                "key": "summary",
                "highlightString": "Run <span class='highlight-string'>Eval</span>uation Task"
              },
              {
                "key": "description",
                "highlightString": "Run an <span class='highlight-string'>eval</span>uation"
              }
            ],
            "groups": [],
            "x": 0.5613870665417057,
            "y": 0.5180505415162455
          },
          "922b": {
            "name": "transformation",
            "canvasName": "transformation",
            "summary": "JSON Transformation",
            "description": "Perform a JSON Transformation using the JST library.",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "type": "operation",
            "displayName": "WorkFlowEngine",
            "variables": {
              "incoming": {
                "tr_id": "60026031e30efd085ffcfb57",
                "variableMap": {
                  "scope": "$var.job.scope",
                  "packageJson": "$var.job.packageJson"
                },
                "options": {
                  "extractOutput": true
                }
              },
              "outgoing": {
                "packageJson": null
              }
            },
            "deprecated": false,
            "matched": [
              {
                "key": "description",
                "highlightString": "Perform a JSON Transformation using the <span class='highlight-string'>JST</span> library."
              }
            ],
            "groups": [],
            "x": 0.6701030927835051,
            "y": 0.6498194945848376,
            "task_name": "changeScopePackageJson"
          },
          "a3c8": {
            "name": "createPublishedArtifactFromScratch",
            "canvasName": "createPublishedArtifactFromScratch",
            "summary": "Creates artifact for publishing without DB calls",
            "description": "Creates JSON object containing artifact file structure and all associated data from input tasks without touching database",
            "location": "Application",
            "locationType": null,
            "app": "AppArtifacts",
            "type": "automatic",
            "displayName": "AppArtifacts",
            "variables": {
              "incoming": {
                "artifactData": "$var.8bd7.merged_object",
                "modules": "$var.job.modules",
                "packageJson": "$var.922b.packageJson"
              },
              "outgoing": {
                "callback": "$var.job.publishedArtifact"
              },
              "error": ""
            },
            "deprecated": false,
            "matched": [
              {
                "key": "canvasName",
                "highlightString": "<span class='highlight-string'>createPubl</span>ishedArtifactFromScratch"
              }
            ],
            "groups": [],
            "actor": "Pronghorn",
            "x": 0.8556701030927835,
            "y": 0.7635379061371841,
            "scheduled": false
          }
        },
        "transitions": {
          "4011": {
            "dd7": {
              "type": "standard",
              "state": "success"
            }
          },
          "4742": {
            "6244": {
              "type": "standard",
              "state": "success"
            }
          },
          "4778": {},
          "6244": {
            "1e4c": {
              "type": "standard",
              "state": "success"
            }
          },
          "9658": {
            "8bd7": {
              "type": "standard",
              "state": "success"
            }
          },
          "workflow_start": {
            "b324": {
              "type": "standard",
              "state": "success"
            }
          },
          "workflow_end": {},
          "a671": {},
          "1e4c": {
            "90c4": {
              "type": "standard",
              "state": "success"
            }
          },
          "bd28": {
            "352a": {
              "type": "standard",
              "state": "success"
            }
          },
          "ce7a": {
            "c7e1": {
              "type": "standard",
              "state": "success"
            },
            "1f91": {
              "type": "standard",
              "state": "failure"
            }
          },
          "999c": {
            "9658": {
              "type": "standard",
              "state": "success"
            }
          },
          "2b90": {
            "999c": {
              "type": "standard",
              "state": "success"
            }
          },
          "8bd7": {
            "80d3": {
              "type": "standard",
              "state": "success"
            }
          },
          "f186": {},
          "4d92": {},
          "63b": {
            "6244": {
              "type": "standard",
              "state": "success"
            }
          },
          "279e": {
            "63b": {
              "type": "standard",
              "state": "success"
            }
          },
          "de5e": {},
          "6cad": {},
          "b3bd": {},
          "1f91": {
            "2b90": {
              "type": "standard",
              "state": "success"
            }
          },
          "8eb0": {
            "7ccc": {
              "type": "standard",
              "state": "success"
            }
          },
          "352a": {
            "8eb0": {
              "type": "standard",
              "state": "failure"
            },
            "7ccc": {
              "type": "standard",
              "state": "success"
            }
          },
          "c7e1": {
            "fe56": {
              "type": "standard",
              "state": "success"
            }
          },
          "fe56": {
            "2b90": {
              "type": "standard",
              "state": "success"
            }
          },
          "7ccc": {
            "71ac": {
              "type": "standard",
              "state": "failure"
            },
            "45fe": {
              "type": "standard",
              "state": "success"
            }
          },
          "71ac": {
            "ce7a": {
              "type": "standard",
              "state": "success"
            }
          },
          "45fe": {
            "34b6": {
              "type": "standard",
              "state": "success"
            }
          },
          "34b6": {
            "ce7a": {
              "type": "standard",
              "state": "success"
            }
          },
          "90c4": {
            "bd28": {
              "type": "standard",
              "state": "success"
            }
          },
          "27ae": {
            "4011": {
              "type": "standard",
              "state": "success"
            }
          },
          "b324": {
            "279e": {
              "type": "standard",
              "state": "success"
            },
            "9b57": {
              "type": "standard",
              "state": "failure"
            }
          },
          "abf8": {},
          "9b57": {
            "4742": {
              "type": "standard",
              "state": "success"
            }
          },
          "dd7": {
            "workflow_end": {
              "type": "standard",
              "state": "success"
            }
          },
          "80d3": {
            "27ae": {
              "type": "standard",
              "state": "success"
            },
            "922b": {
              "type": "standard",
              "state": "failure"
            }
          },
          "922b": {
            "a3c8": {
              "type": "standard",
              "state": "success"
            }
          },
          "a3c8": {
            "4011": {
              "type": "standard",
              "state": "success"
            }
          }
        },
        "font_size": 12,
        "created": "2020-05-20T20:40:42.159Z",
        "created_by": {
          "provenance": "Local AAA",
          "username": "admin@pronghorn",
          "firstname": "admin",
          "inactive": false,
          "email": ""
        },
        "createdVersion": "5.10.4-2020.1.3.0",
        "last_updated": "2021-11-09T14:55:00.730Z",
        "last_updated_by": {
          "provenance": "Local AAA",
          "username": "admin@pronghorn",
          "firstname": "admin",
          "inactive": false,
          "email": ""
        },
        "lastUpdatedVersion": "5.40.5-2021.1.59.0",
        "type": "automation",
        "description": null,
        "inputSchema": {
          "type": "object",
          "properties": {
            "discovery": {
              "type": "object",
              "examples": [
                {
                  "name": "value"
                }
              ]
            },
            "readme": {
              "type": [
                "array",
                "boolean",
                "null",
                "number",
                "object",
                "string"
              ]
            },
            "name": {
              "type": [
                "array",
                "boolean",
                "null",
                "number",
                "object",
                "string"
              ]
            },
            "modules": {
              "type": "array"
            },
            "packageJson": {
              "$id": "packageJson",
              "type": "object",
              "properties": {
                "name": {
                  "type": "string",
                  "examples": [
                    "@random/artifact-template"
                  ]
                },
                "version": {
                  "type": "string",
                  "examples": [
                    "0.0.6"
                  ]
                },
                "description": {
                  "type": "string",
                  "examples": [
                    "Template for creating new artifacts"
                  ]
                },
                "scripts": {
                  "type": "object",
                  "properties": {
                    "test": {
                      "type": "string",
                      "examples": [
                        "echo \"Error: no test specified\" && exit 1"
                      ]
                    },
                    "deploy": {
                      "type": "string",
                      "examples": [
                        "echo not needed npm publish --access=public --registry=http://registry.npmjs.org"
                      ]
                    },
                    "validateSchema": {
                      "type": "string",
                      "examples": [
                        "node test/manifestTester.js manifest.json manifest-schema.json"
                      ]
                    },
                    "validateSchemaLinks": {
                      "type": "string",
                      "examples": [
                        "node test/manifestLinkTester.js manifest.json"
                      ]
                    },
                    "generateImageLinks": {
                      "type": "string",
                      "examples": [
                        "node utils/generateImageLinks.js"
                      ]
                    }
                  },
                  "required": []
                },
                "repository": {
                  "type": "object",
                  "properties": {
                    "type": {
                      "type": "string",
                      "examples": [
                        "git"
                      ]
                    },
                    "url": {
                      "type": "string",
                      "examples": [
                        "https://gitlab.com/itentialopensource/pre-built-automations/artifact-template.git"
                      ]
                    }
                  },
                  "required": []
                },
                "keywords": {
                  "type": "array",
                  "items": {
                    "type": "string",
                    "examples": [
                      "Itential"
                    ]
                  }
                },
                "contributors": {
                  "type": "array",
                  "items": {
                    "type": "string",
                    "examples": [
                      "Itential Artifacts"
                    ]
                  }
                },
                "author": {
                  "type": "string",
                  "examples": [
                    "Itential Artifacts"
                  ]
                },
                "license": {
                  "type": "string",
                  "examples": [
                    "Apache-2.0"
                  ]
                },
                "devDependencies": {
                  "type": "object",
                  "properties": {
                    "r2": {
                      "type": "string",
                      "examples": [
                        "^2.0.1"
                      ]
                    },
                    "ajv": {
                      "type": "string",
                      "examples": [
                        "6.10.0"
                      ]
                    },
                    "better-ajv-errors": {
                      "type": "string",
                      "examples": [
                        "^0.6.1"
                      ]
                    },
                    "fs-extra": {
                      "type": "string",
                      "examples": [
                        "^7.0.1"
                      ]
                    }
                  },
                  "required": []
                }
              },
              "required": []
            },
            "zeroTouch": {
              "type": [
                "array",
                "boolean",
                "null",
                "number",
                "object",
                "string"
              ]
            },
            "scope": {
              "$id": "scope",
              "type": "string"
            }
          },
          "required": [
            "discovery",
            "readme",
            "name",
            "modules",
            "packageJson",
            "zeroTouch",
            "scope"
          ]
        },
        "outputSchema": {
          "type": "object",
          "properties": {
            "discovery": {
              "type": "object",
              "examples": [
                {
                  "name": "value"
                }
              ]
            },
            "readme": {
              "type": [
                "array",
                "boolean",
                "null",
                "number",
                "object",
                "string"
              ]
            },
            "name": {
              "type": [
                "array",
                "boolean",
                "null",
                "number",
                "object",
                "string"
              ]
            },
            "modules": {
              "type": "array"
            },
            "packageJson": {
              "$id": "packageJson",
              "type": "object",
              "properties": {
                "name": {
                  "type": "string",
                  "examples": [
                    "@random/artifact-template"
                  ]
                },
                "version": {
                  "type": "string",
                  "examples": [
                    "0.0.6"
                  ]
                },
                "description": {
                  "type": "string",
                  "examples": [
                    "Template for creating new artifacts"
                  ]
                },
                "scripts": {
                  "type": "object",
                  "properties": {
                    "test": {
                      "type": "string",
                      "examples": [
                        "echo \"Error: no test specified\" && exit 1"
                      ]
                    },
                    "deploy": {
                      "type": "string",
                      "examples": [
                        "echo not needed npm publish --access=public --registry=http://registry.npmjs.org"
                      ]
                    },
                    "validateSchema": {
                      "type": "string",
                      "examples": [
                        "node test/manifestTester.js manifest.json manifest-schema.json"
                      ]
                    },
                    "validateSchemaLinks": {
                      "type": "string",
                      "examples": [
                        "node test/manifestLinkTester.js manifest.json"
                      ]
                    },
                    "generateImageLinks": {
                      "type": "string",
                      "examples": [
                        "node utils/generateImageLinks.js"
                      ]
                    }
                  },
                  "required": []
                },
                "repository": {
                  "type": "object",
                  "properties": {
                    "type": {
                      "type": "string",
                      "examples": [
                        "git"
                      ]
                    },
                    "url": {
                      "type": "string",
                      "examples": [
                        "https://gitlab.com/itentialopensource/pre-built-automations/artifact-template.git"
                      ]
                    }
                  },
                  "required": []
                },
                "keywords": {
                  "type": "array",
                  "items": {
                    "type": "string",
                    "examples": [
                      "Itential"
                    ]
                  }
                },
                "contributors": {
                  "type": "array",
                  "items": {
                    "type": "string",
                    "examples": [
                      "Itential Artifacts"
                    ]
                  }
                },
                "author": {
                  "type": "string",
                  "examples": [
                    "Itential Artifacts"
                  ]
                },
                "license": {
                  "type": "string",
                  "examples": [
                    "Apache-2.0"
                  ]
                },
                "devDependencies": {
                  "type": "object",
                  "properties": {
                    "r2": {
                      "type": "string",
                      "examples": [
                        "^2.0.1"
                      ]
                    },
                    "ajv": {
                      "type": "string",
                      "examples": [
                        "6.10.0"
                      ]
                    },
                    "better-ajv-errors": {
                      "type": "string",
                      "examples": [
                        "^0.6.1"
                      ]
                    },
                    "fs-extra": {
                      "type": "string",
                      "examples": [
                        "^7.0.1"
                      ]
                    }
                  },
                  "required": []
                }
              },
              "required": []
            },
            "zeroTouch": {
              "type": [
                "array",
                "boolean",
                "null",
                "number",
                "object",
                "string"
              ]
            },
            "scope": {
              "$id": "scope",
              "type": "string"
            },
            "_id": {
              "type": "string",
              "pattern": "^[0-9a-f]{24}$"
            },
            "initiator": {
              "type": "string"
            },
            "publishedArtifact": {
              "type": [
                "string",
                "number",
                "object",
                "integer",
                "array",
                "boolean",
                "null"
              ],
              "examples": [
                "value"
              ]
            },
            "export": {
              "type": [
                "array",
                "boolean",
                "null",
                "number",
                "object",
                "string"
              ]
            },
            "license": {
              "type": "string"
            },
            "categories": {
              "type": "array"
            },
            "keywords": {
              "type": "array"
            }
          }
        },
        "tags": [],
        "groups": []
      }
    },
    {
      "type": "workflow",
      "data": {
        "name": "IAP Artifacts AW Install AE Artifact",
        "tasks": {
          "workflow_start": {
            "name": "workflow_start",
            "groups": [],
            "x": 0.3991189427312775,
            "y": 0.4148264984227129,
            "summary": "workflow_start",
            "description": "workflow_start"
          },
          "workflow_end": {
            "name": "workflow_end",
            "groups": [],
            "x": 1.1823788546255507,
            "y": 0.3911671924290221,
            "summary": "workflow_end",
            "description": "workflow_end"
          },
          "86d3": {
            "name": "addArtifactToAdminEssentials",
            "canvasName": "addArtifactToAdminEssentials",
            "summary": "Adds an artifact to AE via direct mongo injection",
            "description": "Adds an artifact created from a published artifact to admin essentials",
            "location": "Application",
            "locationType": null,
            "app": "AppArtifacts",
            "type": "automatic",
            "displayName": "AppArtifacts",
            "variables": {
              "incoming": {
                "artifactBundle": "$var.job.artifactBundle"
              },
              "outgoing": {
                "AEArtifactID": null
              },
              "error": ""
            },
            "deprecated": false,
            "matched": [
              {
                "key": "canvasName",
                "highlightString": "<span class='highlight-string'>add</span>ArtifactToAdminEssentials"
              },
              {
                "key": "summary",
                "highlightString": "<span class='highlight-string'>Add</span>s an artifact to AE via direct mongo injection"
              },
              {
                "key": "description",
                "highlightString": "<span class='highlight-string'>Add</span>s an artifact created from a published artifact to admin essentials"
              }
            ],
            "groups": [],
            "actor": "Pronghorn",
            "x": 0.5850220264317181,
            "y": 0.42113564668769715,
            "scheduled": false
          },
          "df98": {
            "name": "makeData",
            "canvasName": "makeData",
            "summary": "Convert input into a different data type",
            "description": "This task takes an input and converts it to a different data type. For example, converting a number into a string.",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "type": "automatic",
            "displayName": "Tools",
            "variables": {
              "incoming": {
                "input": "/admin/artifacts/export/<!id!>",
                "outputType": "string",
                "variables": "$var.b538.merged_object"
              },
              "outgoing": {
                "output": "$var.job.artifactLink"
              },
              "error": ""
            },
            "deprecated": false,
            "matched": [
              {
                "key": "canvasName",
                "highlightString": "<span class='highlight-string'>makeData</span>"
              }
            ],
            "groups": [],
            "actor": "Pronghorn",
            "x": 1.0189982728842832,
            "y": 0.3986842105263158,
            "scheduled": false
          },
          "b538": {
            "name": "merge",
            "canvasName": "merge",
            "summary": "Merge Data",
            "description": "Merge data into a single object",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "type": "operation",
            "displayName": "WorkFlowEngine",
            "variables": {
              "incoming": {
                "data_to_merge": [
                  {
                    "key": "id",
                    "value": {
                      "task": "86d3",
                      "variable": "AEArtifactID"
                    }
                  }
                ]
              },
              "outgoing": {
                "merged_object": null
              }
            },
            "deprecated": false,
            "matched": [
              {
                "key": "canvasName",
                "highlightString": "<span class='highlight-string'>merge</span>"
              },
              {
                "key": "summary",
                "highlightString": "<span class='highlight-string'>Merge</span> Data"
              },
              {
                "key": "description",
                "highlightString": "<span class='highlight-string'>Merge</span> data into a single object"
              }
            ],
            "groups": [],
            "x": 0.8211453744493392,
            "y": 0.41324921135646686
          }
        },
        "transitions": {
          "168": {},
          "4778": {},
          "6244": {},
          "workflow_start": {
            "86d3": {
              "type": "standard",
              "state": "success"
            }
          },
          "workflow_end": {},
          "a671": {},
          "bd28": {},
          "f186": {},
          "4d92": {},
          "de5e": {},
          "6cad": {},
          "b3bd": {},
          "8eb0": {},
          "7ccc": {},
          "86d3": {
            "b538": {
              "type": "standard",
              "state": "success"
            }
          },
          "df98": {
            "workflow_end": {
              "type": "standard",
              "state": "success"
            }
          },
          "b538": {
            "df98": {
              "type": "standard",
              "state": "success"
            }
          }
        },
        "font_size": 12,
        "created": "2020-05-20T20:45:43.214Z",
        "created_by": {
          "provenance": "Local AAA",
          "username": "admin@pronghorn",
          "firstname": "admin",
          "inactive": false,
          "email": ""
        },
        "createdVersion": "5.10.4-2020.1.3.0",
        "last_updated": "2021-11-09T14:55:00.770Z",
        "last_updated_by": {
          "provenance": "Local AAA",
          "username": "admin@pronghorn",
          "firstname": "admin",
          "inactive": false,
          "email": ""
        },
        "lastUpdatedVersion": "5.40.5-2021.1.59.0",
        "type": "automation",
        "description": null,
        "inputSchema": {
          "type": "object",
          "properties": {
            "artifactBundle": {
              "type": "object"
            }
          },
          "required": [
            "artifactBundle"
          ]
        },
        "outputSchema": {
          "type": "object",
          "properties": {
            "artifactBundle": {
              "type": "object"
            },
            "_id": {
              "type": "string",
              "pattern": "^[0-9a-f]{24}$"
            },
            "initiator": {
              "type": "string"
            },
            "artifactLink": {
              "title": "output",
              "type": [
                "array",
                "string",
                "boolean",
                "number",
                "object"
              ]
            }
          }
        },
        "tags": [],
        "groups": []
      }
    },
    {
      "type": "workflow",
      "data": {
        "name": "IAP Artifacts AW GitLab Commit Data",
        "tasks": {
          "1601": {
            "name": "push",
            "summary": "Push Item to Array",
            "description": "Push item to a job variable array",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "displayName": "WorkFlowEngine",
            "type": "operation",
            "variables": {
              "incoming": {
                "job_variable": "commitActions",
                "item_to_push": "$var.6cdf.merged_object"
              },
              "outgoing": {
                "job_variable_value": null
              }
            },
            "deprecated": false,
            "matched": [
              {
                "key": "name",
                "highlightString": "<span class='highlight-string'>push</span>"
              },
              {
                "key": "summary",
                "highlightString": "<span class='highlight-string'>Push</span> Item to Array"
              },
              {
                "key": "description",
                "highlightString": "<span class='highlight-string'>Push</span> item to a job variable array"
              }
            ],
            "groups": [],
            "x": 1.54716981132075,
            "y": 1.45343511450382
          },
          "2450": {
            "name": "query",
            "summary": "Query name (first nested)",
            "description": "Query data using a dot/bracket notation string and a matching key/value pair.",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "displayName": "WorkFlowEngine",
            "type": "operation",
            "variables": {
              "incoming": {
                "pass_on_null": false,
                "query": "name",
                "obj": "$var.798a.current_item"
              },
              "outgoing": {
                "return_data": null
              },
              "error": ""
            },
            "deprecated": false,
            "matched": [
              {
                "key": "name",
                "highlightString": "<span class='highlight-string'>query</span>"
              },
              {
                "key": "summary",
                "highlightString": "<span class='highlight-string'>Query</span> Data Using 'json-query' Format"
              },
              {
                "key": "description",
                "highlightString": "<span class='highlight-string'>Query</span> data using a dot/bracket notation string and a matching key/value pair."
              }
            ],
            "groups": [],
            "x": 0.625102543068089,
            "y": 0.99236641221374,
            "scheduled": false
          },
          "3697": {
            "name": "evaluation",
            "summary": "Evaluation: Directory?",
            "description": "Run an evaluation",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "displayName": "WorkFlowEngine",
            "type": "operation",
            "variables": {
              "incoming": {
                "all_true_flag": false,
                "evaluation_groups": [
                  {
                    "all_true_flag": false,
                    "evaluations": [
                      {
                        "query": "",
                        "operand_1": {
                          "variable": "return_data",
                          "task": "db0b"
                        },
                        "operator": "==",
                        "operand_2": {
                          "variable": "file",
                          "task": "static"
                        }
                      }
                    ]
                  }
                ]
              },
              "outgoing": {
                "return_value": null
              }
            },
            "deprecated": false,
            "matched": [
              {
                "key": "name",
                "highlightString": "<span class='highlight-string'>eval</span>uation"
              },
              {
                "key": "summary",
                "highlightString": "Run <span class='highlight-string'>Eval</span>uation Task"
              },
              {
                "key": "description",
                "highlightString": "Run an <span class='highlight-string'>eval</span>uation"
              }
            ],
            "groups": [],
            "x": 0.968006562756358,
            "y": 1.04885496183206
          },
          "4001": {
            "name": "evaluation",
            "summary": "Evaluation: File?",
            "description": "Run an evaluation",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "displayName": "WorkFlowEngine",
            "type": "operation",
            "variables": {
              "incoming": {
                "all_true_flag": false,
                "evaluation_groups": [
                  {
                    "all_true_flag": false,
                    "evaluations": [
                      {
                        "query": "",
                        "operand_1": {
                          "variable": "return_data",
                          "task": "6433"
                        },
                        "operator": "==",
                        "operand_2": {
                          "variable": "file",
                          "task": "static"
                        }
                      }
                    ]
                  }
                ]
              },
              "outgoing": {
                "return_value": null
              }
            },
            "deprecated": false,
            "matched": [
              {
                "key": "name",
                "highlightString": "<span class='highlight-string'>eval</span>uation"
              },
              {
                "key": "summary",
                "highlightString": "Run <span class='highlight-string'>Eval</span>uation Task"
              },
              {
                "key": "description",
                "highlightString": "Run an <span class='highlight-string'>eval</span>uation"
              }
            ],
            "groups": [],
            "x": 0.404429860541427,
            "y": 0.745038167938931
          },
          "6433": {
            "name": "query",
            "summary": "Query type",
            "description": "Query data using a dot/bracket notation string and a matching key/value pair.",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "displayName": "WorkFlowEngine",
            "type": "operation",
            "variables": {
              "incoming": {
                "pass_on_null": false,
                "query": "type",
                "obj": "$var.e24a.current_item"
              },
              "outgoing": {
                "return_data": null
              },
              "error": ""
            },
            "deprecated": false,
            "matched": [
              {
                "key": "name",
                "highlightString": "<span class='highlight-string'>query</span>"
              },
              {
                "key": "summary",
                "highlightString": "<span class='highlight-string'>Query</span> Data Using 'json-query' Format"
              },
              {
                "key": "description",
                "highlightString": "<span class='highlight-string'>Query</span> data using a dot/bracket notation string and a matching key/value pair."
              }
            ],
            "groups": [],
            "x": 0.332239540607055,
            "y": 0.653435114503817,
            "scheduled": false
          },
          "7554": {
            "name": "stringConcat",
            "summary": "Concatenate / file",
            "description": "Concatenates a string with a second string(s). The second parameter can be a string or array.",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "displayName": "String",
            "type": "automatic",
            "variables": {
              "incoming": {
                "str": "$var.f401.combinedStrings",
                "stringN": [
                  "/"
                ]
              },
              "outgoing": {
                "combinedStrings": null
              },
              "error": ""
            },
            "deprecated": false,
            "matched": [
              {
                "key": "app",
                "highlightString": "<span class='highlight-string'>String</span>Methods"
              },
              {
                "key": "summary",
                "highlightString": "Concatenates <span class='highlight-string'>string</span>s together."
              },
              {
                "key": "description",
                "highlightString": "Concatenates a <span class='highlight-string'>string</span> with a second string(s). The second parameter can be a string or array."
              }
            ],
            "groups": [],
            "actor": "Pronghorn",
            "x": 1.23789991796555,
            "y": 1.44885496183206,
            "scheduled": false,
            "canvasName": "concat"
          },
          "workflow_start": {
            "name": "workflow_start",
            "groups": [],
            "x": 0.10090237899918,
            "y": 0.474809160305344,
            "summary": "workflow_start",
            "description": "workflow_start"
          },
          "workflow_end": {
            "name": "workflow_end",
            "groups": [],
            "x": 0.400328137817884,
            "y": 0.476335877862595,
            "summary": "workflow_end",
            "description": "workflow_end"
          },
          "e24a": {
            "name": "forEach",
            "summary": "For Each Loop",
            "description": "Iterate over each item in an array",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "displayName": "WorkFlowEngine",
            "type": "operation",
            "variables": {
              "incoming": {
                "data_array": "$var.job.artifact"
              },
              "outgoing": {
                "current_item": null
              },
              "error": ""
            },
            "deprecated": false,
            "matched": [
              {
                "key": "name",
                "highlightString": "<span class='highlight-string'>for</span><span class='highlight-string'>Each</span>"
              },
              {
                "key": "summary",
                "highlightString": "<span class='highlight-string'>For</span> <span class='highlight-string'>Each</span> Loop"
              },
              {
                "key": "description",
                "highlightString": "Iterate over <span class='highlight-string'>each</span> item in an array"
              }
            ],
            "groups": [],
            "x": 0.312551271534044,
            "y": 0.483969465648855,
            "scheduled": false
          },
          "fcfb": {
            "name": "newVariable",
            "summary": "Create a Job Variable",
            "description": "Create a new Job variable by Job ID and assign it a value.",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "displayName": "WorkFlowEngine",
            "type": "operation",
            "variables": {
              "incoming": {
                "name": "commitActions",
                "value": []
              },
              "outgoing": {
                "value": null
              }
            },
            "deprecated": false,
            "matched": [
              {
                "key": "summary",
                "highlightString": "Create a <span class='highlight-string'>Job</span> Variable"
              },
              {
                "key": "description",
                "highlightString": "Create a new <span class='highlight-string'>Job</span> variable by Job ID and assign it a value."
              }
            ],
            "groups": [],
            "x": 0.202625102543068,
            "y": 0.488549618320611
          },
          "ec3b": {
            "name": "query",
            "summary": "Query name",
            "description": "Query data using a dot/bracket notation string and a matching key/value pair.",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "displayName": "WorkFlowEngine",
            "type": "operation",
            "variables": {
              "incoming": {
                "pass_on_null": false,
                "query": "name",
                "obj": "$var.e24a.current_item"
              },
              "outgoing": {
                "return_data": null
              },
              "error": ""
            },
            "deprecated": false,
            "matched": [
              {
                "key": "name",
                "highlightString": "<span class='highlight-string'>query</span>"
              },
              {
                "key": "summary",
                "highlightString": "<span class='highlight-string'>Query</span> Data Using 'json-query' Format"
              },
              {
                "key": "description",
                "highlightString": "<span class='highlight-string'>Query</span> data using a dot/bracket notation string and a matching key/value pair."
              }
            ],
            "groups": [],
            "x": 0.385561936013125,
            "y": 0.644274809160305,
            "scheduled": false
          },
          "7bf5": {
            "name": "query",
            "summary": "Query content",
            "description": "Query data using a dot/bracket notation string and a matching key/value pair.",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "displayName": "WorkFlowEngine",
            "type": "operation",
            "variables": {
              "incoming": {
                "pass_on_null": false,
                "query": "content",
                "obj": "$var.e24a.current_item"
              },
              "outgoing": {
                "return_data": null
              },
              "error": ""
            },
            "deprecated": false,
            "matched": [
              {
                "key": "name",
                "highlightString": "<span class='highlight-string'>query</span>"
              },
              {
                "key": "summary",
                "highlightString": "<span class='highlight-string'>Query</span> Data Using 'json-query' Format"
              },
              {
                "key": "description",
                "highlightString": "<span class='highlight-string'>Query</span> data using a dot/bracket notation string and a matching key/value pair."
              }
            ],
            "groups": [],
            "x": 0.346185397867104,
            "y": 0.751145038167939,
            "scheduled": false
          },
          "d8c5": {
            "name": "push",
            "summary": "Push Item to Array",
            "description": "Push item to a job variable array",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "displayName": "WorkFlowEngine",
            "type": "operation",
            "variables": {
              "incoming": {
                "job_variable": "commitActions",
                "item_to_push": "$var.babe.merged_object"
              },
              "outgoing": {
                "job_variable_value": null
              }
            },
            "deprecated": false,
            "matched": [
              {
                "key": "name",
                "highlightString": "<span class='highlight-string'>push</span>"
              },
              {
                "key": "summary",
                "highlightString": "<span class='highlight-string'>Push</span> Item to Array"
              },
              {
                "key": "description",
                "highlightString": "<span class='highlight-string'>Push</span> item to a job variable array"
              }
            ],
            "groups": [],
            "x": 0.587366694011485,
            "y": 0.656488549618321
          },
          "798a": {
            "name": "forEach",
            "summary": "Iterate first level",
            "description": "Iterate over each item in an array",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "displayName": "WorkFlowEngine",
            "type": "operation",
            "variables": {
              "incoming": {
                "data_array": "$var.7bf5.return_data"
              },
              "outgoing": {
                "current_item": null
              },
              "error": ""
            },
            "deprecated": false,
            "matched": [
              {
                "key": "name",
                "highlightString": "<span class='highlight-string'>for</span><span class='highlight-string'>Each</span>"
              },
              {
                "key": "summary",
                "highlightString": "<span class='highlight-string'>For</span> <span class='highlight-string'>Each</span> Loop"
              },
              {
                "key": "description",
                "highlightString": "Iterate over <span class='highlight-string'>each</span> item in an array"
              }
            ],
            "groups": [],
            "x": 0.491386382280558,
            "y": 0.897709923664122,
            "scheduled": false
          },
          "db0b": {
            "name": "query",
            "summary": "Query type (first nested)",
            "description": "Query data using a dot/bracket notation string and a matching key/value pair.",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "displayName": "WorkFlowEngine",
            "type": "operation",
            "variables": {
              "incoming": {
                "pass_on_null": false,
                "query": "type",
                "obj": "$var.798a.current_item"
              },
              "outgoing": {
                "return_data": null
              },
              "error": ""
            },
            "deprecated": false,
            "matched": [
              {
                "key": "name",
                "highlightString": "<span class='highlight-string'>query</span>"
              },
              {
                "key": "summary",
                "highlightString": "<span class='highlight-string'>Query</span> Data Using 'json-query' Format"
              },
              {
                "key": "description",
                "highlightString": "<span class='highlight-string'>Query</span> data using a dot/bracket notation string and a matching key/value pair."
              }
            ],
            "groups": [],
            "x": 0.575881870385562,
            "y": 1.05496183206107,
            "scheduled": false
          },
          "b93a": {
            "name": "query",
            "summary": "Query content (first nested)",
            "description": "Query data using a dot/bracket notation string and a matching key/value pair.",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "displayName": "WorkFlowEngine",
            "type": "operation",
            "variables": {
              "incoming": {
                "pass_on_null": false,
                "query": "content",
                "obj": "$var.798a.current_item"
              },
              "outgoing": {
                "return_data": null
              },
              "error": ""
            },
            "deprecated": false,
            "matched": [
              {
                "key": "name",
                "highlightString": "<span class='highlight-string'>query</span>"
              },
              {
                "key": "summary",
                "highlightString": "<span class='highlight-string'>Query</span> Data Using 'json-query' Format"
              },
              {
                "key": "description",
                "highlightString": "<span class='highlight-string'>Query</span> data using a dot/bracket notation string and a matching key/value pair."
              }
            ],
            "groups": [],
            "x": 0.62428219852338,
            "y": 1.12213740458015,
            "scheduled": false
          },
          "80bf": {
            "name": "stringConcat",
            "summary": "Concatenate / nested",
            "description": "Concatenates a string with a second string(s). The second parameter can be a string or array.",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "displayName": "String",
            "type": "automatic",
            "variables": {
              "incoming": {
                "str": "$var.ec3b.return_data",
                "stringN": [
                  "/"
                ]
              },
              "outgoing": {
                "combinedStrings": null
              },
              "error": ""
            },
            "deprecated": false,
            "matched": [
              {
                "key": "app",
                "highlightString": "<span class='highlight-string'>String</span>Methods"
              },
              {
                "key": "summary",
                "highlightString": "Concatenates <span class='highlight-string'>string</span>s together."
              },
              {
                "key": "description",
                "highlightString": "Concatenates a <span class='highlight-string'>string</span> with a second string(s). The second parameter can be a string or array."
              }
            ],
            "groups": [],
            "actor": "Pronghorn",
            "x": 0.720262510254307,
            "y": 1.05343511450382,
            "scheduled": false,
            "canvasName": "concat"
          },
          "f401": {
            "name": "stringConcat",
            "summary": "Concatenate nested name",
            "description": "Concatenates a string with a second string(s). The second parameter can be a string or array.",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "displayName": "String",
            "type": "automatic",
            "variables": {
              "incoming": {
                "str": "$var.80bf.combinedStrings",
                "stringN": "$var.job.name_first_nested"
              },
              "outgoing": {
                "combinedStrings": null
              },
              "error": ""
            },
            "deprecated": false,
            "matched": [
              {
                "key": "app",
                "highlightString": "<span class='highlight-string'>String</span>Methods"
              },
              {
                "key": "summary",
                "highlightString": "Concatenates <span class='highlight-string'>string</span>s together."
              },
              {
                "key": "description",
                "highlightString": "Concatenates a <span class='highlight-string'>string</span> with a second string(s). The second parameter can be a string or array."
              }
            ],
            "groups": [],
            "actor": "Pronghorn",
            "x": 0.857260049220673,
            "y": 1.05343511450382,
            "scheduled": false,
            "canvasName": "concat"
          },
          "f131": {
            "name": "forEach",
            "summary": "Iterate second level",
            "description": "Iterate over each item in an array",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "displayName": "WorkFlowEngine",
            "type": "operation",
            "variables": {
              "incoming": {
                "data_array": "$var.b93a.return_data"
              },
              "outgoing": {
                "current_item": null
              },
              "error": ""
            },
            "deprecated": false,
            "matched": [
              {
                "key": "name",
                "highlightString": "<span class='highlight-string'>for</span><span class='highlight-string'>Each</span>"
              },
              {
                "key": "summary",
                "highlightString": "<span class='highlight-string'>For</span> <span class='highlight-string'>Each</span> Loop"
              },
              {
                "key": "description",
                "highlightString": "Iterate over <span class='highlight-string'>each</span> item in an array"
              }
            ],
            "groups": [],
            "x": 1.05660377358491,
            "y": 1.18931297709924,
            "scheduled": false
          },
          "a433": {
            "name": "query",
            "summary": "Query name (second nested)",
            "description": "Query data using a dot/bracket notation string and a matching key/value pair.",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "displayName": "WorkFlowEngine",
            "type": "operation",
            "variables": {
              "incoming": {
                "pass_on_null": false,
                "query": "name",
                "obj": "$var.f131.current_item"
              },
              "outgoing": {
                "return_data": null
              },
              "error": ""
            },
            "deprecated": false,
            "matched": [
              {
                "key": "name",
                "highlightString": "<span class='highlight-string'>query</span>"
              },
              {
                "key": "summary",
                "highlightString": "<span class='highlight-string'>Query</span> Data Using 'json-query' Format"
              },
              {
                "key": "description",
                "highlightString": "<span class='highlight-string'>Query</span> data using a dot/bracket notation string and a matching key/value pair."
              }
            ],
            "groups": [],
            "x": 1.14520743919886,
            "y": 1.3552036199095,
            "scheduled": false
          },
          "d522": {
            "name": "query",
            "summary": "Query content (second nested)",
            "description": "Query data using a dot/bracket notation string and a matching key/value pair.",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "displayName": "WorkFlowEngine",
            "type": "operation",
            "variables": {
              "incoming": {
                "pass_on_null": false,
                "query": "content",
                "obj": "$var.f131.current_item"
              },
              "outgoing": {
                "return_data": null
              },
              "error": ""
            },
            "deprecated": false,
            "matched": [
              {
                "key": "name",
                "highlightString": "<span class='highlight-string'>query</span>"
              },
              {
                "key": "summary",
                "highlightString": "<span class='highlight-string'>Query</span> Data Using 'json-query' Format"
              },
              {
                "key": "description",
                "highlightString": "<span class='highlight-string'>Query</span> data using a dot/bracket notation string and a matching key/value pair."
              }
            ],
            "groups": [],
            "x": 1.15021459227468,
            "y": 1.44457013574661,
            "scheduled": false
          },
          "57b9": {
            "name": "stringConcat",
            "summary": "Concatenate file name",
            "description": "Concatenates a string with a second string(s). The second parameter can be a string or array.",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "displayName": "String",
            "type": "automatic",
            "variables": {
              "incoming": {
                "str": "$var.7554.combinedStrings",
                "stringN": "$var.job.name_second_nested"
              },
              "outgoing": {
                "combinedStrings": null
              },
              "error": ""
            },
            "deprecated": false,
            "matched": [
              {
                "key": "app",
                "highlightString": "<span class='highlight-string'>String</span>Methods"
              },
              {
                "key": "summary",
                "highlightString": "Concatenates <span class='highlight-string'>string</span>s together."
              },
              {
                "key": "description",
                "highlightString": "Concatenates a <span class='highlight-string'>string</span> with a second string(s). The second parameter can be a string or array."
              }
            ],
            "groups": [],
            "actor": "Pronghorn",
            "x": 1.35684987694832,
            "y": 1.45190839694656,
            "scheduled": false,
            "canvasName": "concat"
          },
          "6cdf": {
            "name": "merge",
            "summary": "Merge action data",
            "description": "Merge data into a single object",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "displayName": "WorkFlowEngine",
            "type": "operation",
            "variables": {
              "incoming": {
                "data_to_merge": [
                  {
                    "key": "action",
                    "value": {
                      "task": "job",
                      "variable": "action",
                      "editable": true
                    }
                  },
                  {
                    "key": "file_path",
                    "value": {
                      "task": "57b9",
                      "variable": "combinedStrings"
                    }
                  },
                  {
                    "key": "content",
                    "value": {
                      "task": "d522",
                      "variable": "return_data"
                    }
                  }
                ]
              },
              "outgoing": {
                "merged_object": null
              }
            },
            "deprecated": false,
            "matched": [
              {
                "key": "name",
                "highlightString": "<span class='highlight-string'>merge</span>"
              },
              {
                "key": "summary",
                "highlightString": "<span class='highlight-string'>Merge</span> Data"
              },
              {
                "key": "description",
                "highlightString": "<span class='highlight-string'>Merge</span> data into a single object"
              }
            ],
            "groups": [],
            "x": 1.45200984413454,
            "y": 1.44580152671756
          },
          "f815": {
            "name": "merge",
            "summary": "Merge action data",
            "description": "Merge data into a single object",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "displayName": "WorkFlowEngine",
            "type": "operation",
            "variables": {
              "incoming": {
                "data_to_merge": [
                  {
                    "key": "action",
                    "value": {
                      "task": "job",
                      "variable": "action",
                      "editable": true
                    }
                  },
                  {
                    "key": "file_path",
                    "value": {
                      "task": "f401",
                      "variable": "combinedStrings"
                    }
                  },
                  {
                    "key": "content",
                    "value": {
                      "task": "b93a",
                      "variable": "return_data"
                    }
                  }
                ]
              },
              "outgoing": {
                "merged_object": null
              }
            },
            "deprecated": false,
            "matched": [
              {
                "key": "name",
                "highlightString": "<span class='highlight-string'>merge</span>"
              },
              {
                "key": "summary",
                "highlightString": "<span class='highlight-string'>Merge</span> Data"
              },
              {
                "key": "description",
                "highlightString": "<span class='highlight-string'>Merge</span> data into a single object"
              }
            ],
            "groups": [],
            "x": 1.0377358490566,
            "y": 0.978625954198473
          },
          "33e4": {
            "name": "push",
            "summary": "Push Item to Array",
            "description": "Push item to a job variable array",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "displayName": "WorkFlowEngine",
            "type": "operation",
            "variables": {
              "incoming": {
                "job_variable": "commitActions",
                "item_to_push": "$var.f815.merged_object"
              },
              "outgoing": {
                "job_variable_value": null
              }
            },
            "deprecated": false,
            "matched": [
              {
                "key": "name",
                "highlightString": "<span class='highlight-string'>push</span>"
              },
              {
                "key": "summary",
                "highlightString": "<span class='highlight-string'>Push</span> Item to Array"
              },
              {
                "key": "description",
                "highlightString": "<span class='highlight-string'>Push</span> item to a job variable array"
              }
            ],
            "groups": [],
            "x": 1.14438063986874,
            "y": 0.989312977099237
          },
          "9ed7": {
            "name": "newVariable",
            "canvasName": "newVariable",
            "summary": "Create a Job Variable",
            "description": "Create a new Job variable by Job ID and assign it a value.",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "displayName": "WorkFlowEngine",
            "type": "operation",
            "variables": {
              "incoming": {
                "name": "name_first_nested",
                "value": []
              },
              "outgoing": {
                "value": null
              }
            },
            "deprecated": false,
            "matched": [
              {
                "key": "summary",
                "highlightString": "Create a <span class='highlight-string'>Job</span> Variable"
              },
              {
                "key": "description",
                "highlightString": "Create a new <span class='highlight-string'>Job</span> variable by Job ID and assign it a value."
              }
            ],
            "groups": [],
            "x": 0.716738197424893,
            "y": 0.860859728506787
          },
          "89c4": {
            "name": "push",
            "canvasName": "push",
            "summary": "Push Item to Array",
            "description": "Push item to a job variable array",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "displayName": "WorkFlowEngine",
            "type": "operation",
            "variables": {
              "incoming": {
                "job_variable": "name_first_nested",
                "item_to_push": "$var.2450.return_data"
              },
              "outgoing": {
                "job_variable_value": null
              }
            },
            "deprecated": false,
            "matched": [
              {
                "key": "description",
                "highlightString": "Push item to a <span class='highlight-string'>job</span> variable array"
              }
            ],
            "groups": [],
            "x": 0.854077253218884,
            "y": 0.863122171945701
          },
          "329c": {
            "name": "newVariable",
            "canvasName": "newVariable",
            "summary": "Create a Job Variable",
            "description": "Create a new Job variable by Job ID and assign it a value.",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "displayName": "WorkFlowEngine",
            "type": "operation",
            "variables": {
              "incoming": {
                "name": "name_second_nested",
                "value": []
              },
              "outgoing": {
                "value": null
              }
            },
            "deprecated": false,
            "matched": [
              {
                "key": "summary",
                "highlightString": "Create a <span class='highlight-string'>Job</span> Variable"
              },
              {
                "key": "description",
                "highlightString": "Create a new <span class='highlight-string'>Job</span> variable by Job ID and assign it a value."
              }
            ],
            "groups": [],
            "x": 1.23891273247496,
            "y": 1.61085972850679
          },
          "63ff": {
            "name": "push",
            "canvasName": "push",
            "summary": "Push Item to Array",
            "description": "Push item to a job variable array",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "displayName": "WorkFlowEngine",
            "type": "operation",
            "variables": {
              "incoming": {
                "job_variable": "name_second_nested",
                "item_to_push": "$var.a433.return_data"
              },
              "outgoing": {
                "job_variable_value": null
              }
            },
            "deprecated": false,
            "matched": [
              {
                "key": "description",
                "highlightString": "Push item to a <span class='highlight-string'>job</span> variable array"
              }
            ],
            "groups": [],
            "x": 1.35693848354793,
            "y": 1.61085972850679
          },
          "babe": {
            "name": "merge",
            "canvasName": "merge",
            "summary": "Merge action data",
            "description": "Merge data into a single object",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "type": "operation",
            "displayName": "WorkFlowEngine",
            "variables": {
              "incoming": {
                "data_to_merge": [
                  {
                    "key": "action",
                    "value": {
                      "task": "job",
                      "variable": "action",
                      "editable": true
                    }
                  },
                  {
                    "key": "file_path",
                    "value": {
                      "task": "ec3b",
                      "variable": "return_data"
                    }
                  },
                  {
                    "key": "content",
                    "value": {
                      "task": "7bf5",
                      "variable": "return_data"
                    }
                  }
                ]
              },
              "outgoing": {
                "merged_object": null
              }
            },
            "deprecated": false,
            "matched": [
              {
                "key": "canvasName",
                "highlightString": "<span class='highlight-string'>merge</span>"
              },
              {
                "key": "summary",
                "highlightString": "<span class='highlight-string'>Merge</span> Data"
              },
              {
                "key": "description",
                "highlightString": "<span class='highlight-string'>Merge</span> data into a single object"
              }
            ],
            "groups": [],
            "x": 0.494489346069067,
            "y": 0.724099099099099
          }
        },
        "transitions": {
          "1601": {},
          "2450": {
            "9ed7": {
              "type": "standard",
              "state": "success"
            }
          },
          "3697": {
            "f815": {
              "type": "standard",
              "state": "success"
            },
            "f131": {
              "type": "standard",
              "state": "failure"
            }
          },
          "4001": {
            "798a": {
              "type": "standard",
              "state": "failure"
            },
            "babe": {
              "type": "standard",
              "state": "success"
            }
          },
          "6433": {
            "4001": {
              "type": "standard",
              "state": "success"
            },
            "ec3b": {
              "type": "standard",
              "state": "success"
            },
            "7bf5": {
              "type": "standard",
              "state": "success"
            }
          },
          "7554": {
            "329c": {
              "type": "standard",
              "state": "success"
            }
          },
          "workflow_start": {
            "fcfb": {
              "type": "standard",
              "state": "success"
            }
          },
          "workflow_end": {},
          "e24a": {
            "6433": {
              "type": "standard",
              "state": "loop"
            },
            "workflow_end": {
              "type": "standard",
              "state": "success"
            }
          },
          "fcfb": {
            "e24a": {
              "type": "standard",
              "state": "success"
            }
          },
          "30ff": {},
          "ec3b": {
            "4001": {
              "type": "standard",
              "state": "success"
            }
          },
          "7bf5": {
            "4001": {
              "type": "standard",
              "state": "success"
            }
          },
          "d8c5": {},
          "42ee": {},
          "798a": {
            "db0b": {
              "type": "standard",
              "state": "loop"
            }
          },
          "db0b": {
            "2450": {
              "type": "standard",
              "state": "success"
            },
            "b93a": {
              "type": "standard",
              "state": "success"
            },
            "80bf": {
              "type": "standard",
              "state": "success"
            }
          },
          "9e73": {},
          "b93a": {
            "80bf": {
              "type": "standard",
              "state": "success"
            }
          },
          "80bf": {
            "f401": {
              "type": "standard",
              "state": "success"
            }
          },
          "f401": {
            "3697": {
              "type": "standard",
              "state": "success"
            }
          },
          "f131": {
            "a433": {
              "type": "standard",
              "state": "loop"
            }
          },
          "a433": {
            "d522": {
              "type": "standard",
              "state": "success"
            }
          },
          "d522": {
            "7554": {
              "type": "standard",
              "state": "success"
            }
          },
          "57b9": {
            "6cdf": {
              "type": "standard",
              "state": "success"
            }
          },
          "6cdf": {
            "1601": {
              "type": "standard",
              "state": "success"
            }
          },
          "6a5b": {},
          "f815": {
            "33e4": {
              "type": "standard",
              "state": "success"
            }
          },
          "33e4": {},
          "974a": {},
          "30a4": {},
          "9ed7": {
            "89c4": {
              "type": "standard",
              "state": "success"
            }
          },
          "89c4": {
            "f401": {
              "type": "standard",
              "state": "success"
            }
          },
          "329c": {
            "63ff": {
              "type": "standard",
              "state": "success"
            }
          },
          "63ff": {
            "57b9": {
              "type": "standard",
              "state": "success"
            }
          },
          "babe": {
            "d8c5": {
              "type": "standard",
              "state": "success"
            }
          }
        },
        "font_size": 12,
        "created": "2019-11-22T17:16:29.838Z",
        "created_by": {
          "provenance": "Local AAA",
          "username": "admin@pronghorn",
          "firstname": "admin",
          "inactive": false,
          "email": ""
        },
        "createdVersion": "4.5.3-2019.2.7.0",
        "last_updated": "2021-11-09T14:55:00.785Z",
        "last_updated_by": {
          "provenance": "Local AAA",
          "username": "admin@pronghorn",
          "firstname": "admin",
          "inactive": false,
          "email": ""
        },
        "lastUpdatedVersion": "5.40.5-2021.1.59.0",
        "type": "automation",
        "description": null,
        "inputSchema": {
          "type": "object",
          "properties": {
            "artifact": {
              "type": "array"
            },
            "action": {
              "type": [
                "array",
                "boolean",
                "null",
                "number",
                "object",
                "string"
              ]
            }
          },
          "required": [
            "artifact",
            "action"
          ]
        },
        "outputSchema": {
          "type": "object",
          "properties": {
            "artifact": {
              "type": "array"
            },
            "action": {
              "type": [
                "array",
                "boolean",
                "null",
                "number",
                "object",
                "string"
              ]
            },
            "_id": {
              "type": "string",
              "pattern": "^[0-9a-f]{24}$"
            },
            "initiator": {
              "type": "string"
            },
            "commitActions": {
              "type": [
                "array",
                "boolean",
                "null",
                "number",
                "object",
                "string"
              ]
            },
            "name_first_nested": {
              "type": [
                "array",
                "boolean",
                "null",
                "number",
                "object",
                "string"
              ]
            },
            "name_second_nested": {
              "type": [
                "array",
                "boolean",
                "null",
                "number",
                "object",
                "string"
              ]
            }
          }
        },
        "tags": [],
        "groups": []
      }
    },
    {
      "type": "workflow",
      "data": {
        "name": "IAP Artifacts AW Create Array",
        "tasks": {
          "9366": {
            "name": "forEach",
            "canvasName": "forEach",
            "summary": "For Each Loop",
            "description": "Iterate over each item in an array",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "displayName": "WorkFlowEngine",
            "type": "operation",
            "variables": {
              "incoming": {
                "data_array": "$var.job.items"
              },
              "outgoing": {
                "current_item": "$var.job.current_item"
              },
              "error": ""
            },
            "deprecated": false,
            "matched": [
              {
                "key": "canvasName",
                "highlightString": "<span class='highlight-string'>forEach</span>"
              }
            ],
            "groups": [],
            "x": 0.22020725388601037,
            "y": 0.5037147102526003,
            "scheduled": false
          },
          "workflow_start": {
            "name": "workflow_start",
            "groups": [],
            "x": 0,
            "y": 0.5
          },
          "workflow_end": {
            "name": "workflow_end",
            "groups": [],
            "x": 0.3082901554404145,
            "y": 0.49925705794947994
          },
          "a252": {
            "name": "newVariable",
            "canvasName": "newVariable",
            "summary": "Create a Job Variable",
            "description": "Create a new Job variable by Job ID and assign it a value.",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "displayName": "WorkFlowEngine",
            "type": "operation",
            "variables": {
              "incoming": {
                "name": "result",
                "value": []
              },
              "outgoing": {
                "value": null
              }
            },
            "deprecated": false,
            "matched": [
              {
                "key": "summary",
                "highlightString": "Create a <span class='highlight-string'>Job</span> <span class='highlight-string'>Var</span>iable"
              },
              {
                "key": "description",
                "highlightString": "Create a new <span class='highlight-string'>Job</span> <span class='highlight-string'>var</span>iable by Job ID and assign it a value."
              },
              {
                "key": "canvasName",
                "highlightString": "new<span class='highlight-string'>Var</span>iable"
              }
            ],
            "groups": [],
            "x": 0.10621761658031088,
            "y": 0.5022288261515602
          },
          "b637": {
            "name": "query",
            "canvasName": "query",
            "summary": "Query key",
            "description": "Query data using a dot/bracket notation string and a matching key/value pair.",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "displayName": "WorkFlowEngine",
            "type": "operation",
            "variables": {
              "incoming": {
                "pass_on_null": false,
                "query": "$var.job.key",
                "obj": "$var.9366.current_item"
              },
              "outgoing": {
                "return_data": null
              },
              "error": ""
            },
            "deprecated": false,
            "matched": [
              {
                "key": "canvasName",
                "highlightString": "<span class='highlight-string'>query</span>"
              },
              {
                "key": "summary",
                "highlightString": "<span class='highlight-string'>Query</span> Data Using 'json-query' Format"
              },
              {
                "key": "description",
                "highlightString": "<span class='highlight-string'>Query</span> data using a dot/bracket notation string and a matching key/value pair."
              }
            ],
            "groups": [],
            "x": 0.22107081174438686,
            "y": 0.6820208023774146,
            "scheduled": false
          },
          "542a": {
            "name": "push",
            "canvasName": "push",
            "summary": "Push Item to Array",
            "description": "Push item to a job variable array",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "displayName": "WorkFlowEngine",
            "type": "operation",
            "variables": {
              "incoming": {
                "job_variable": "result",
                "item_to_push": "$var.b637.return_data"
              },
              "outgoing": {
                "job_variable_value": null
              }
            },
            "deprecated": false,
            "matched": [
              {
                "key": "canvasName",
                "highlightString": "<span class='highlight-string'>push</span>"
              },
              {
                "key": "summary",
                "highlightString": "<span class='highlight-string'>Push</span> Item to Array"
              },
              {
                "key": "description",
                "highlightString": "<span class='highlight-string'>Push</span> item to a job variable array"
              }
            ],
            "groups": [],
            "x": 0.2158894645941278,
            "y": 0.8380386329866271
          }
        },
        "transitions": {
          "9366": {
            "b637": {
              "type": "standard",
              "state": "loop"
            },
            "workflow_end": {
              "type": "standard",
              "state": "success"
            }
          },
          "workflow_start": {
            "a252": {
              "type": "standard",
              "state": "success"
            }
          },
          "workflow_end": {},
          "a252": {
            "9366": {
              "type": "standard",
              "state": "success"
            }
          },
          "b637": {
            "542a": {
              "type": "standard",
              "state": "success"
            }
          },
          "542a": {}
        },
        "font_size": 12,
        "created": "2020-02-28T19:34:41.065Z",
        "created_by": {
          "provenance": "Local AAA",
          "username": "Itential Artifacts",
          "firstname": "admin",
          "inactive": true,
          "email": ""
        },
        "createdVersion": "5.5.9-2019.3.0.0",
        "last_updated": "2021-11-09T14:55:00.822Z",
        "last_updated_by": {
          "provenance": "Local AAA",
          "username": "admin@pronghorn",
          "firstname": "admin",
          "inactive": false,
          "email": ""
        },
        "lastUpdatedVersion": "5.40.5-2021.1.59.0",
        "type": "automation",
        "description": null,
        "inputSchema": {
          "type": "object",
          "properties": {
            "items": {
              "type": "array"
            },
            "key": {
              "type": "string",
              "examples": [
                "name"
              ]
            }
          },
          "required": [
            "items",
            "key"
          ]
        },
        "outputSchema": {
          "type": "object",
          "properties": {
            "items": {
              "type": "array"
            },
            "key": {
              "type": "string",
              "examples": [
                "name"
              ]
            },
            "_id": {
              "type": "string",
              "pattern": "^[0-9a-f]{24}$"
            },
            "initiator": {
              "type": "string"
            },
            "current_item": {
              "type": [
                "string",
                "number",
                "object",
                "boolean",
                "integer",
                "array",
                "null"
              ],
              "examples": [
                "some item from the data_array"
              ]
            },
            "result": {
              "type": [
                "array",
                "boolean",
                "null",
                "number",
                "object",
                "string"
              ]
            }
          }
        },
        "tags": [],
        "groups": []
      }
    },
    {
      "type": "workflow",
      "data": {
        "name": "IAP Artifacts AW GitLab Create Link",
        "tasks": {
          "1483": {
            "name": "query",
            "summary": "Query repo ssh url",
            "description": "Query data using a dot/bracket notation string and a matching key/value pair.",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "displayName": "WorkFlowEngine",
            "type": "operation",
            "variables": {
              "incoming": {
                "pass_on_null": false,
                "query": "body.ssh_url_to_repo",
                "obj": "$var.3e4d.response"
              },
              "outgoing": {
                "return_data": null
              },
              "error": ""
            },
            "deprecated": false,
            "matched": [
              {
                "key": "name",
                "highlightString": "<span class='highlight-string'>query</span>"
              },
              {
                "key": "summary",
                "highlightString": "<span class='highlight-string'>Query</span> Data Using 'json-query' Format"
              },
              {
                "key": "description",
                "highlightString": "<span class='highlight-string'>Query</span> data using a dot/bracket notation string and a matching key/value pair."
              }
            ],
            "groups": [],
            "x": 0.621821164889254,
            "y": 0.337404580152672,
            "scheduled": false
          },
          "2801": {
            "name": "ViewData",
            "canvasName": "ViewData",
            "summary": "SOC2 Compliance Repository Check",
            "description": "Displays a message and runtime data to an operator. This can be used to request a decision, or used for acknowledgement only.",
            "location": "Application",
            "app": "WorkFlowEngine",
            "displayName": "Tools",
            "type": "manual",
            "variables": {
              "incoming": {
                "header": "SOC2 Compliance Repository Check",
                "message": "",
                "body": "For IAP - Cloud platform we are pursuing SOC2 compliance. For all Git Repositories, SOC2 compliance requires the following compliance on all repositories.\n<p>1 - GitLab repositories must have a <span style=\"color: red;\">description</span> <br />2 - GitLab repositories must have <span style=\"color: red;\">protected branches</span> <br />3 - Every Merge request should require at least 1 merge reviewer. <br /><br /><strong>This repo is not compliant with the SOC2 Compliance, Kindly make sure the above rules are followed, Please contact Gitlab Administrator for assistance setting merge reviewer </strong></p>",
                "variables": {},
                "btn_success": "Retry",
                "btn_failure": "Skip and set Manually"
              },
              "outgoing": {},
              "error": ""
            },
            "view": "/workflow_engine/task/ViewData",
            "deprecated": false,
            "matched": [
              {
                "key": "canvasName",
                "highlightString": "<span class='highlight-string'>ViewData</span>"
              }
            ],
            "groups": [],
            "x": 1.7715686274509803,
            "y": 1.2415254237288136,
            "scheduled": false
          },
          "3223": {
            "name": "newVariable",
            "canvasName": "newVariable",
            "summary": "Create a Job Variable",
            "description": "Create a new Job variable by Job ID and assign it a value.",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "displayName": "WorkFlowEngine",
            "type": "operation",
            "variables": {
              "incoming": {
                "name": "repoId",
                "value": []
              },
              "outgoing": {
                "value": null
              }
            },
            "deprecated": false,
            "matched": [
              {
                "key": "canvasName",
                "highlightString": "<span class='highlight-string'>new</span>Variable"
              },
              {
                "key": "description",
                "highlightString": "Create a <span class='highlight-string'>new</span> Job variable by Job ID and assign it a value."
              }
            ],
            "groups": [],
            "x": 0.72279792746114,
            "y": 0.828869047619048
          },
          "3556": {
            "name": "newVariable",
            "summary": "Create a Job Variable",
            "description": "Create a new Job variable by Job ID and assign it a value.",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "displayName": "WorkFlowEngine",
            "type": "operation",
            "variables": {
              "incoming": {
                "name": "urlEncodedNamespace",
                "value": [
                  "itentialopensource%2Fpre-built-automations"
                ]
              },
              "outgoing": {
                "value": null
              }
            },
            "deprecated": false,
            "matched": [
              {
                "key": "summary",
                "highlightString": "Create a <span class='highlight-string'>Job</span> Variable"
              },
              {
                "key": "description",
                "highlightString": "Create a new <span class='highlight-string'>Job</span> variable by Job ID and assign it a value."
              }
            ],
            "groups": [],
            "x": -0.191709844559585,
            "y": 0.532738095238095
          },
          "5381": {
            "name": "restCall",
            "canvasName": "restCall",
            "summary": "Delete master protected branch",
            "description": "Execute a REST call",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "type": "automatic",
            "displayName": "Tools",
            "variables": {
              "incoming": {
                "uri": "$var.ba3a.combinedStrings",
                "verb": "DELETE",
                "user": "",
                "password": "",
                "headers": "$var.job.headers",
                "body": "",
                "responseHeaders": false
              },
              "outgoing": {
                "response": null
              },
              "error": ""
            },
            "deprecated": false,
            "matched": [
              {
                "key": "canvasName",
                "highlightString": "<span class='highlight-string'>rest</span><span class='highlight-string'>Call</span>"
              },
              {
                "key": "summary",
                "highlightString": "<span class='highlight-string'>REST</span> <span class='highlight-string'>Call</span>"
              },
              {
                "key": "description",
                "highlightString": "Execute a <span class='highlight-string'>REST</span> <span class='highlight-string'>call</span>"
              }
            ],
            "groups": [],
            "actor": "Pronghorn",
            "x": 1.866393442622951,
            "y": 0.7722457627118644,
            "scheduled": false
          },
          "5642": {
            "name": "merge",
            "summary": "Create PUT body",
            "description": "Merge data into a single object",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "displayName": "WorkFlowEngine",
            "type": "operation",
            "variables": {
              "incoming": {
                "data_to_merge": [
                  {
                    "key": "description",
                    "value": {
                      "task": "job",
                      "variable": "description",
                      "editable": true
                    }
                  }
                ]
              },
              "outgoing": {
                "merged_object": null
              }
            },
            "deprecated": false,
            "matched": [
              {
                "key": "name",
                "highlightString": "<span class='highlight-string'>merge</span>"
              },
              {
                "key": "summary",
                "highlightString": "<span class='highlight-string'>Merge</span> Data"
              },
              {
                "key": "description",
                "highlightString": "<span class='highlight-string'>Merge</span> data into a single object"
              }
            ],
            "groups": [],
            "x": 1.21222410865874,
            "y": 0.642857142857143
          },
          "8994": {
            "name": "stringConcat",
            "summary": "Concatenate url to GET group",
            "description": "Concatenates a string with a second string(s). The second parameter can be a string or array.",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "displayName": "String",
            "type": "automatic",
            "variables": {
              "incoming": {
                "str": "https://gitlab.com/api/v4/groups/",
                "stringN": "$var.job.urlEncodedNamespace"
              },
              "outgoing": {
                "combinedStrings": null
              },
              "error": ""
            },
            "deprecated": false,
            "matched": [
              {
                "key": "name",
                "highlightString": "<span class='highlight-string'>concat</span>"
              },
              {
                "key": "summary",
                "highlightString": "<span class='highlight-string'>Concat</span>enates strings together."
              },
              {
                "key": "description",
                "highlightString": "<span class='highlight-string'>Concat</span>enates a string with a second string(s). The second parameter can be a string or array."
              }
            ],
            "groups": [],
            "actor": "Pronghorn",
            "x": -0.191709844559585,
            "y": 0.71875,
            "scheduled": false,
            "canvasName": "concat"
          },
          "9052": {
            "name": "query",
            "summary": "Query repo id",
            "description": "Query data using a dot/bracket notation string and a matching key/value pair.",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "displayName": "WorkFlowEngine",
            "type": "operation",
            "variables": {
              "incoming": {
                "pass_on_null": false,
                "query": "body.id",
                "obj": "$var.3e4d.response"
              },
              "outgoing": {
                "return_data": null
              },
              "error": ""
            },
            "deprecated": false,
            "matched": [
              {
                "key": "name",
                "highlightString": "<span class='highlight-string'>query</span>"
              },
              {
                "key": "summary",
                "highlightString": "<span class='highlight-string'>Query</span> Data Using 'json-query' Format"
              },
              {
                "key": "description",
                "highlightString": "<span class='highlight-string'>Query</span> data using a dot/bracket notation string and a matching key/value pair."
              }
            ],
            "groups": [],
            "x": 0.61771944216571,
            "y": 0.635114503816794,
            "scheduled": false
          },
          "9384": {
            "name": "stringConcat",
            "summary": "Concatenate DEL Fork URL",
            "description": "Concatenates a string with a second string(s). The second parameter can be a string or array.",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "displayName": "String",
            "type": "automatic",
            "variables": {
              "incoming": {
                "str": "$var.80b6.combinedStrings",
                "stringN": [
                  "/fork"
                ]
              },
              "outgoing": {
                "combinedStrings": null
              },
              "error": ""
            },
            "deprecated": false,
            "matched": [
              {
                "key": "name",
                "highlightString": "<span class='highlight-string'>concat</span>"
              },
              {
                "key": "summary",
                "highlightString": "<span class='highlight-string'>Concat</span>enates strings together."
              },
              {
                "key": "description",
                "highlightString": "<span class='highlight-string'>Concat</span>enates a string with a second string(s). The second parameter can be a string or array."
              }
            ],
            "groups": [],
            "actor": "Pronghorn",
            "x": 1.04668930390492,
            "y": 0.645833333333333,
            "scheduled": false,
            "canvasName": "concat"
          },
          "9434": {
            "name": "query",
            "summary": "Query artifact update",
            "description": "Query data using a dot/bracket notation string and a matching key/value pair.",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "displayName": "WorkFlowEngine",
            "type": "operation",
            "variables": {
              "incoming": {
                "pass_on_null": false,
                "query": "update",
                "obj": "$var.job.artifact"
              },
              "outgoing": {
                "return_data": null
              },
              "error": ""
            },
            "deprecated": false,
            "matched": [
              {
                "key": "name",
                "highlightString": "<span class='highlight-string'>query</span>"
              },
              {
                "key": "summary",
                "highlightString": "<span class='highlight-string'>Query</span> Data Using 'json-query' Format"
              },
              {
                "key": "description",
                "highlightString": "<span class='highlight-string'>Query</span> data using a dot/bracket notation string and a matching key/value pair."
              }
            ],
            "groups": [],
            "x": 1.03367875647668,
            "y": 0.395833333333333,
            "scheduled": false
          },
          "workflow_start": {
            "name": "workflow_start",
            "groups": [],
            "x": -0.396373056994819,
            "y": 0.511904761904762,
            "summary": "workflow_start",
            "description": "workflow_start"
          },
          "workflow_end": {
            "name": "workflow_end",
            "groups": [],
            "x": 2.1745901639344263,
            "y": 0.9417372881355932,
            "summary": "workflow_end",
            "description": "workflow_end"
          },
          "a7e0": {
            "name": "newVariable",
            "summary": "Create a Job Variable",
            "description": "Create a new Job variable by Job ID and assign it a value.",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "displayName": "WorkFlowEngine",
            "type": "operation",
            "variables": {
              "incoming": {
                "name": "headers",
                "value": {
                  "Authorization": "Bearer __ezebRybmJzPgDMv4nC"
                }
              },
              "outgoing": {
                "value": null
              }
            },
            "deprecated": false,
            "matched": [
              {
                "key": "name",
                "highlightString": "<span class='highlight-string'>new</span>Variable"
              },
              {
                "key": "description",
                "highlightString": "Create a <span class='highlight-string'>new</span> Job variable by Job ID and assign it a value."
              }
            ],
            "groups": [],
            "x": -0.312607944732297,
            "y": 0.53125
          },
          "a468": {
            "name": "restCall",
            "summary": "GET Get Group",
            "description": "Execute a REST call",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "displayName": "Tools",
            "type": "automatic",
            "variables": {
              "incoming": {
                "uri": "$var.job.groupURL",
                "verb": "GET",
                "user": "",
                "password": "",
                "headers": "$var.a7e0.value",
                "body": "",
                "responseHeaders": true
              },
              "outgoing": {
                "response": null
              },
              "error": ""
            },
            "deprecated": false,
            "matched": [
              {
                "key": "name",
                "highlightString": "<span class='highlight-string'>rest</span>Call"
              },
              {
                "key": "summary",
                "highlightString": "<span class='highlight-string'>REST</span> Call"
              },
              {
                "key": "description",
                "highlightString": "Execute a <span class='highlight-string'>REST</span> call"
              }
            ],
            "groups": [],
            "actor": "Pronghorn",
            "x": -0.0172711571675302,
            "y": 0.973214285714286,
            "scheduled": false
          },
          "3e4d": {
            "name": "restCall",
            "summary": "POST Fork Template Project",
            "description": "Execute a REST call",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "displayName": "Tools",
            "type": "automatic",
            "variables": {
              "incoming": {
                "uri": "$var.39b4.combinedStrings",
                "verb": "POST",
                "user": "",
                "password": "",
                "headers": "$var.job.headers",
                "body": "$var.49c6.merged_object",
                "responseHeaders": true
              },
              "outgoing": {
                "response": null
              },
              "error": ""
            },
            "deprecated": false,
            "matched": [
              {
                "key": "name",
                "highlightString": "<span class='highlight-string'>rest</span>Call"
              },
              {
                "key": "summary",
                "highlightString": "<span class='highlight-string'>REST</span> Call"
              },
              {
                "key": "description",
                "highlightString": "Execute a <span class='highlight-string'>REST</span> call"
              }
            ],
            "groups": [],
            "actor": "Pronghorn",
            "x": 0.478777589134126,
            "y": 0.961309523809524,
            "scheduled": false
          },
          "46e2": {
            "name": "query",
            "summary": "Query group id",
            "description": "Query data using a dot/bracket notation string and a matching key/value pair.",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "displayName": "WorkFlowEngine",
            "type": "operation",
            "variables": {
              "incoming": {
                "pass_on_null": false,
                "query": "body.id",
                "obj": "$var.a468.response"
              },
              "outgoing": {
                "return_data": null
              },
              "error": ""
            },
            "deprecated": false,
            "matched": [
              {
                "key": "name",
                "highlightString": "<span class='highlight-string'>query</span>"
              },
              {
                "key": "summary",
                "highlightString": "<span class='highlight-string'>Query</span> Data Using 'json-query' Format"
              },
              {
                "key": "description",
                "highlightString": "<span class='highlight-string'>Query</span> data using a dot/bracket notation string and a matching key/value pair."
              }
            ],
            "groups": [],
            "x": 0.16839378238341968,
            "y": 0.506578947368421,
            "scheduled": false
          },
          "49c6": {
            "name": "merge",
            "summary": "Create POST body",
            "description": "Merge data into a single object",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "displayName": "WorkFlowEngine",
            "type": "operation",
            "variables": {
              "incoming": {
                "data_to_merge": [
                  {
                    "key": "namespace",
                    "value": {
                      "task": "46e2",
                      "variable": "return_data"
                    }
                  },
                  {
                    "key": "name",
                    "value": {
                      "task": "job",
                      "variable": "repoName",
                      "editable": true
                    }
                  },
                  {
                    "key": "path",
                    "value": {
                      "task": "7d7e",
                      "variable": "repoName",
                      "editable": true
                    }
                  }
                ]
              },
              "outgoing": {
                "merged_object": null
              }
            },
            "deprecated": false,
            "matched": [
              {
                "key": "name",
                "highlightString": "<span class='highlight-string'>merge</span>"
              },
              {
                "key": "summary",
                "highlightString": "<span class='highlight-string'>Merge</span> Data"
              },
              {
                "key": "description",
                "highlightString": "<span class='highlight-string'>Merge</span> data into a single object"
              }
            ],
            "groups": [],
            "x": 0.25302245250431776,
            "y": 0.506578947368421
          },
          "518f": {
            "name": "query",
            "summary": "Query homepage",
            "description": "Query data using a dot/bracket notation string and a matching key/value pair.",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "displayName": "WorkFlowEngine",
            "type": "operation",
            "variables": {
              "incoming": {
                "pass_on_null": false,
                "query": "body.web_url",
                "obj": "$var.3e4d.response"
              },
              "outgoing": {
                "return_data": "$var.job.homepage"
              },
              "error": ""
            },
            "deprecated": false,
            "matched": [
              {
                "key": "name",
                "highlightString": "<span class='highlight-string'>query</span>"
              },
              {
                "key": "summary",
                "highlightString": "<span class='highlight-string'>Query</span> Data Using 'json-query' Format"
              },
              {
                "key": "description",
                "highlightString": "<span class='highlight-string'>Query</span> data using a dot/bracket notation string and a matching key/value pair."
              }
            ],
            "groups": [],
            "x": 0.620180475799836,
            "y": 0.459541984732824,
            "scheduled": false
          },
          "d69d": {
            "name": "numberToString",
            "summary": "Convert repo id to string",
            "description": "Returns a string representing the specified Number object.",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "displayName": "Number",
            "type": "automatic",
            "variables": {
              "incoming": {
                "num": "$var.9052.return_data",
                "radix": ""
              },
              "outgoing": {
                "numToString": null
              },
              "error": ""
            },
            "deprecated": false,
            "matched": [
              {
                "key": "app",
                "highlightString": "<span class='highlight-string'>Number</span>Methods"
              },
              {
                "key": "summary",
                "highlightString": "Convert <span class='highlight-string'>number</span> to string."
              },
              {
                "key": "description",
                "highlightString": "Returns a string representing the specified <span class='highlight-string'>Number</span> object."
              }
            ],
            "groups": [],
            "actor": "Pronghorn",
            "x": 0.724957555178268,
            "y": 0.641369047619048,
            "scheduled": false,
            "canvasName": "toString"
          },
          "80b6": {
            "name": "stringConcat",
            "summary": "Concatenate base url + repo id",
            "description": "Concatenates a string with a second string(s). The second parameter can be a string or array.",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "displayName": "String",
            "type": "automatic",
            "variables": {
              "incoming": {
                "str": "https://gitlab.com/api/v4/projects/",
                "stringN": "$var.job.repoId"
              },
              "outgoing": {
                "combinedStrings": null
              },
              "error": ""
            },
            "deprecated": false,
            "matched": [],
            "groups": [],
            "actor": "Pronghorn",
            "x": 0.882852292020374,
            "y": 0.642857142857143,
            "scheduled": false,
            "canvasName": "concat"
          },
          "b41b": {
            "name": "stringConcat",
            "summary": "Concatenate commit url",
            "description": "Concatenates a string with a second string(s). The second parameter can be a string or array.",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "displayName": "String",
            "type": "automatic",
            "variables": {
              "incoming": {
                "str": "$var.80b6.combinedStrings",
                "stringN": [
                  "/repository/commits"
                ]
              },
              "outgoing": {
                "combinedStrings": null
              },
              "error": ""
            },
            "deprecated": false,
            "matched": [],
            "groups": [],
            "actor": "Pronghorn",
            "x": 1.32088285229202,
            "y": 0.641369047619048,
            "scheduled": false,
            "canvasName": "concat"
          },
          "b52c": {
            "name": "restCall",
            "summary": "POST Create Commit",
            "description": "Execute a REST call",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "displayName": "Tools",
            "type": "automatic",
            "variables": {
              "incoming": {
                "uri": "$var.b41b.combinedStrings",
                "verb": "POST",
                "user": "",
                "password": "",
                "headers": "$var.a7e0.value",
                "body": "$var.7f83.merged_object",
                "responseHeaders": true
              },
              "outgoing": {
                "response": null
              },
              "error": ""
            },
            "deprecated": false,
            "matched": [
              {
                "key": "name",
                "highlightString": "<span class='highlight-string'>rest</span>Call"
              },
              {
                "key": "summary",
                "highlightString": "<span class='highlight-string'>REST</span> Call"
              },
              {
                "key": "description",
                "highlightString": "Execute a <span class='highlight-string'>REST</span> call"
              }
            ],
            "groups": [],
            "actor": "Pronghorn",
            "x": 1.59252971137521,
            "y": 0.955357142857143,
            "scheduled": false
          },
          "7f83": {
            "name": "merge",
            "summary": "Merge Data",
            "description": "Merge data into a single object",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "displayName": "WorkFlowEngine",
            "type": "operation",
            "variables": {
              "incoming": {
                "data_to_merge": [
                  {
                    "key": "branch",
                    "value": {
                      "task": "static",
                      "variable": "master"
                    }
                  },
                  {
                    "key": "commit_message",
                    "value": {
                      "task": "static",
                      "variable": "initial commit"
                    }
                  },
                  {
                    "key": "author_name",
                    "value": {
                      "task": "static",
                      "variable": "Itential Artifacts"
                    }
                  },
                  {
                    "key": "actions",
                    "value": {
                      "task": "54dc",
                      "variable": "combinedArray"
                    }
                  }
                ]
              },
              "outgoing": {
                "merged_object": null
              }
            },
            "deprecated": false,
            "matched": [
              {
                "key": "name",
                "highlightString": "<span class='highlight-string'>merge</span>"
              },
              {
                "key": "summary",
                "highlightString": "<span class='highlight-string'>Merge</span> Data"
              },
              {
                "key": "description",
                "highlightString": "<span class='highlight-string'>Merge</span> data into a single object"
              }
            ],
            "groups": [],
            "x": 1.5848896434635,
            "y": 0.642857142857143
          },
          "5ad7": {
            "name": "query",
            "summary": "Query create commit data",
            "description": "Query data using a dot/bracket notation string and a matching key/value pair.",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "displayName": "WorkFlowEngine",
            "type": "operation",
            "variables": {
              "incoming": {
                "pass_on_null": false,
                "query": "commitActions",
                "obj": "$var.9b1e.job_details"
              },
              "outgoing": {
                "return_data": null
              },
              "error": ""
            },
            "deprecated": false,
            "matched": [
              {
                "key": "name",
                "highlightString": "<span class='highlight-string'>query</span>"
              },
              {
                "key": "summary",
                "highlightString": "<span class='highlight-string'>Query</span> Data Using 'json-query' Format"
              },
              {
                "key": "description",
                "highlightString": "<span class='highlight-string'>Query</span> data using a dot/bracket notation string and a matching key/value pair."
              }
            ],
            "groups": [],
            "x": 1.3272884283247,
            "y": 0.43452380952381,
            "scheduled": false
          },
          "886a": {
            "name": "merge",
            "summary": "uri information",
            "description": "Merge data into a single object",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "displayName": "WorkFlowEngine",
            "type": "operation",
            "variables": {
              "incoming": {
                "data_to_merge": [
                  {
                    "key": "git",
                    "value": {
                      "task": "1483",
                      "variable": "return_data"
                    }
                  },
                  {
                    "key": "homepage",
                    "value": {
                      "task": "518f",
                      "variable": "return_data"
                    }
                  }
                ]
              },
              "outgoing": {
                "merged_object": null
              }
            },
            "deprecated": false,
            "matched": [
              {
                "key": "name",
                "highlightString": "<span class='highlight-string'>merge</span>"
              },
              {
                "key": "summary",
                "highlightString": "<span class='highlight-string'>Merge</span> Data"
              },
              {
                "key": "description",
                "highlightString": "<span class='highlight-string'>Merge</span> data into a single object"
              }
            ],
            "groups": [],
            "x": 0.696891191709845,
            "y": 0.401785714285714
          },
          "e20d": {
            "name": "query",
            "summary": "Query artifact create",
            "description": "Query data using a dot/bracket notation string and a matching key/value pair.",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "displayName": "WorkFlowEngine",
            "type": "operation",
            "variables": {
              "incoming": {
                "pass_on_null": false,
                "query": "create",
                "obj": "$var.job.artifact"
              },
              "outgoing": {
                "return_data": null
              },
              "error": ""
            },
            "deprecated": false,
            "matched": [
              {
                "key": "name",
                "highlightString": "<span class='highlight-string'>query</span>"
              },
              {
                "key": "summary",
                "highlightString": "<span class='highlight-string'>Query</span> Data Using 'json-query' Format"
              },
              {
                "key": "description",
                "highlightString": "<span class='highlight-string'>Query</span> data using a dot/bracket notation string and a matching key/value pair."
              }
            ],
            "groups": [],
            "x": 0.761658031088083,
            "y": 0.398809523809524,
            "scheduled": false
          },
          "deae": {
            "name": "stringConcat",
            "summary": "Concatenate base URL + namespace",
            "description": "Concatenates a string with a second string(s). The second parameter can be a string or array.",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "displayName": "String",
            "type": "automatic",
            "variables": {
              "incoming": {
                "str": "https://gitlab.com/api/v4/projects/",
                "stringN": "$var.job.urlEncodedNamespace"
              },
              "outgoing": {
                "combinedStrings": null
              },
              "error": ""
            },
            "deprecated": false,
            "matched": [
              {
                "key": "name",
                "highlightString": "<span class='highlight-string'>concat</span>"
              },
              {
                "key": "summary",
                "highlightString": "<span class='highlight-string'>Concat</span>enates strings together."
              },
              {
                "key": "description",
                "highlightString": "<span class='highlight-string'>Concat</span>enates a string with a second string(s). The second parameter can be a string or array."
              }
            ],
            "groups": [],
            "actor": "Pronghorn",
            "x": 0.234295415959253,
            "y": 0.711309523809524,
            "scheduled": false,
            "canvasName": "concat"
          },
          "39b4": {
            "name": "stringConcat",
            "summary": "Create POST Fork URL",
            "description": "Concatenates a string with a second string(s). The second parameter can be a string or array.",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "displayName": "String",
            "type": "automatic",
            "variables": {
              "incoming": {
                "str": "$var.deae.combinedStrings",
                "stringN": [
                  "%2Fartifact-template-2020.1/fork"
                ]
              },
              "outgoing": {
                "combinedStrings": null
              },
              "error": ""
            },
            "deprecated": false,
            "matched": [
              {
                "key": "name",
                "highlightString": "<span class='highlight-string'>concat</span>"
              },
              {
                "key": "summary",
                "highlightString": "<span class='highlight-string'>Concat</span>enates strings together."
              },
              {
                "key": "description",
                "highlightString": "<span class='highlight-string'>Concat</span>enates a string with a second string(s). The second parameter can be a string or array."
              }
            ],
            "groups": [],
            "actor": "Pronghorn",
            "x": 0.398132427843803,
            "y": 0.712797619047619,
            "scheduled": false,
            "canvasName": "concat"
          },
          "ef59": {
            "name": "restCall",
            "summary": "DELETE Remove Fork Relationship",
            "description": "Execute a REST call",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "displayName": "Tools",
            "type": "automatic",
            "variables": {
              "incoming": {
                "uri": "$var.9384.combinedStrings",
                "verb": "DELETE",
                "user": "",
                "password": "",
                "headers": "$var.job.headers",
                "body": "",
                "responseHeaders": true
              },
              "outgoing": {
                "response": null
              },
              "error": ""
            },
            "deprecated": false,
            "matched": [
              {
                "key": "name",
                "highlightString": "<span class='highlight-string'>restCall</span>"
              }
            ],
            "groups": [],
            "actor": "Pronghorn",
            "x": 1.0237704918032786,
            "y": 0.9502118644067796,
            "scheduled": false
          },
          "45b3": {
            "name": "restCall",
            "summary": "PUT Update Repository",
            "description": "Execute a REST call",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "displayName": "Tools",
            "type": "automatic",
            "variables": {
              "incoming": {
                "uri": "$var.80b6.combinedStrings",
                "verb": "PUT",
                "user": "",
                "password": "",
                "headers": "$var.job.headers",
                "body": "$var.5642.merged_object",
                "responseHeaders": true
              },
              "outgoing": {
                "response": null
              },
              "error": ""
            },
            "deprecated": false,
            "matched": [
              {
                "key": "name",
                "highlightString": "<span class='highlight-string'>restCall</span>"
              }
            ],
            "groups": [],
            "actor": "Pronghorn",
            "x": 1.1950819672131148,
            "y": 0.951271186440678,
            "scheduled": false
          },
          "d987": {
            "name": "ViewData",
            "summary": "View Data",
            "description": "View data in a pretty format",
            "location": "Application",
            "app": "WorkFlowEngine",
            "displayName": "Tools",
            "type": "manual",
            "variables": {
              "incoming": {
                "header": "Error",
                "message": "",
                "body": "Error creating project on GitLab. Try again?",
                "variables": {},
                "btn_success": "Retry",
                "btn_failure": ""
              },
              "outgoing": {},
              "error": ""
            },
            "view": "/workflow_engine/task/ViewData",
            "deprecated": false,
            "matched": [
              {
                "key": "name",
                "highlightString": "<span class='highlight-string'>ViewData</span>"
              }
            ],
            "groups": [],
            "x": 0.475382003395586,
            "y": 1.2485119047619,
            "scheduled": false
          },
          "2cad": {
            "name": "ViewData",
            "summary": "View Data",
            "description": "View data in a pretty format",
            "location": "Application",
            "app": "WorkFlowEngine",
            "displayName": "Tools",
            "type": "manual",
            "variables": {
              "incoming": {
                "header": "Error",
                "message": "",
                "body": "Error making commit to repository on GitLab. Try again?",
                "variables": {},
                "btn_success": "Retry",
                "btn_failure": ""
              },
              "outgoing": {},
              "error": ""
            },
            "view": "/workflow_engine/task/ViewData",
            "deprecated": false,
            "matched": [
              {
                "key": "name",
                "highlightString": "<span class='highlight-string'>ViewData</span>"
              }
            ],
            "groups": [],
            "x": 1.59337860780985,
            "y": 1.23511904761905,
            "scheduled": false
          },
          "cc5f": {
            "name": "query",
            "summary": "Query update commit data",
            "description": "Query data using a dot/bracket notation string and a matching key/value pair.",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "displayName": "WorkFlowEngine",
            "type": "operation",
            "variables": {
              "incoming": {
                "pass_on_null": false,
                "query": "commitActions",
                "obj": "$var.fb11.job_details"
              },
              "outgoing": {
                "return_data": null
              },
              "error": ""
            },
            "deprecated": false,
            "matched": [
              {
                "key": "name",
                "highlightString": "<span class='highlight-string'>query</span>"
              },
              {
                "key": "summary",
                "highlightString": "<span class='highlight-string'>Query</span> Data Using 'json-query' Format"
              },
              {
                "key": "description",
                "highlightString": "<span class='highlight-string'>Query</span> data using a dot/bracket notation string and a matching key/value pair."
              }
            ],
            "groups": [],
            "x": 1.3307426597582,
            "y": 0.34077380952381,
            "scheduled": false
          },
          "54dc": {
            "name": "arrayConcat",
            "summary": "Concat commit action arrays",
            "description": "Used to merge two arrays",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "displayName": "Array",
            "type": "automatic",
            "variables": {
              "incoming": {
                "arr": "$var.5ad7.return_data",
                "arrayN": "$var.cc5f.return_data"
              },
              "outgoing": {
                "combinedArray": null
              },
              "error": ""
            },
            "deprecated": false,
            "matched": [
              {
                "key": "name",
                "highlightString": "<span class='highlight-string'>concat</span>"
              },
              {
                "key": "summary",
                "highlightString": "<span class='highlight-string'>Concat</span>enates arrays together."
              }
            ],
            "groups": [],
            "actor": "Pronghorn",
            "x": 1.584628670120898,
            "y": 0.38442521631644005,
            "scheduled": false,
            "canvasName": "concat"
          },
          "e599": {
            "name": "push",
            "canvasName": "push",
            "summary": "Push Item to Array",
            "description": "Push item to a job variable array",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "displayName": "WorkFlowEngine",
            "type": "operation",
            "variables": {
              "incoming": {
                "job_variable": "repoId",
                "item_to_push": "$var.d69d.numToString"
              },
              "outgoing": {
                "job_variable_value": null
              }
            },
            "deprecated": false,
            "matched": [
              {
                "key": "canvasName",
                "highlightString": "<span class='highlight-string'>push</span>"
              },
              {
                "key": "summary",
                "highlightString": "<span class='highlight-string'>Push</span> Item to Array"
              },
              {
                "key": "description",
                "highlightString": "<span class='highlight-string'>Push</span> item to a job variable array"
              }
            ],
            "groups": [],
            "x": 0.872193436960276,
            "y": 0.828869047619048
          },
          "9b1e": {
            "name": "childJob",
            "canvasName": "childJob",
            "summary": "Create Commit Data",
            "description": "Run a child Job inside a Workflow",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "displayName": "WorkFlowEngine",
            "type": "operation",
            "variables": {
              "incoming": {
                "task": "",
                "workflow": "IAP Artifacts AW GitLab Commit Data",
                "variables": {
                  "artifact": {
                    "variable": "",
                    "task": "e20d",
                    "value": "return_data"
                  },
                  "action": {
                    "variable": "",
                    "task": "static",
                    "value": "create"
                  }
                },
                "data_array": "",
                "transformation": "",
                "loopType": ""
              },
              "outgoing": {
                "job_details": null
              }
            },
            "deprecated": false,
            "matched": [
              {
                "key": "canvasName",
                "highlightString": "<span class='highlight-string'>childJob</span>"
              }
            ],
            "groups": [],
            "actor": "job",
            "x": 0.898963730569948,
            "y": 0.400297619047619
          },
          "fb11": {
            "name": "childJob",
            "canvasName": "childJob",
            "summary": "Update Commit Data",
            "description": "Run a child Job inside a Workflow",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "displayName": "WorkFlowEngine",
            "type": "operation",
            "variables": {
              "incoming": {
                "task": "",
                "workflow": "IAP Artifacts AW GitLab Commit Data",
                "variables": {
                  "artifact": {
                    "variable": "",
                    "task": "9434",
                    "value": "return_data"
                  },
                  "action": {
                    "variable": "",
                    "task": "static",
                    "value": "update"
                  }
                },
                "data_array": "",
                "transformation": "",
                "loopType": ""
              },
              "outgoing": {
                "job_details": null
              }
            },
            "deprecated": false,
            "matched": [
              {
                "key": "canvasName",
                "highlightString": "<span class='highlight-string'>childJob</span>"
              }
            ],
            "groups": [],
            "actor": "job",
            "x": 1.17616580310881,
            "y": 0.392857142857143
          },
          "e61a": {
            "name": "stringConcat",
            "canvasName": "concat",
            "summary": "Concatenates staging folder",
            "description": "Concatenates a string with an array of strings.",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "displayName": "String",
            "type": "automatic",
            "variables": {
              "incoming": {
                "str": "$var.8994.combinedStrings",
                "stringN": [
                  "%2Fstaging"
                ]
              },
              "outgoing": {
                "combinedStrings": "$var.job.groupURL"
              },
              "error": ""
            },
            "deprecated": true,
            "matched": [
              {
                "key": "canvasName",
                "highlightString": "<span class='highlight-string'>concat</span>"
              },
              {
                "key": "summary",
                "highlightString": "<span class='highlight-string'>Concat</span>enates strings together."
              },
              {
                "key": "description",
                "highlightString": "<span class='highlight-string'>Concat</span>enates a string with an array of strings."
              }
            ],
            "groups": [],
            "actor": "Pronghorn",
            "x": -0.0181347150259067,
            "y": 0.720238095238095,
            "scheduled": false
          },
          "7d7e": {
            "name": "transformation",
            "canvasName": "transformation",
            "summary": "JSON Transformation",
            "description": "Perform a JSON Transformation using the JST library.",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "type": "operation",
            "displayName": "WorkFlowEngine",
            "variables": {
              "incoming": {
                "tr_id": "5f0c9dae10b81c2da7cf6023",
                "variableMap": {
                  "name": "$var.job.repoName"
                },
                "options": {
                  "extractOutput": true
                }
              },
              "outgoing": {
                "repoName": null
              }
            },
            "deprecated": false,
            "matched": [
              {
                "key": "description",
                "highlightString": "Perform a JSON Transformation using the <span class='highlight-string'>JST</span> library."
              }
            ],
            "groups": [],
            "x": 0.20984455958549222,
            "y": 0.3868421052631579
          },
          "f9b1": {
            "name": "stringConcat",
            "canvasName": "concat",
            "summary": "Make Approver Url",
            "description": "Concatenates a string with a second string(s). The second parameter can be a string or array.",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "type": "automatic",
            "displayName": "String",
            "variables": {
              "incoming": {
                "str": "$var.80b6.combinedStrings",
                "stringN": [
                  "/approvals"
                ]
              },
              "outgoing": {
                "combinedStrings": null
              },
              "error": ""
            },
            "deprecated": false,
            "matched": [
              {
                "key": "canvasName",
                "highlightString": "<span class='highlight-string'>conca</span>t"
              },
              {
                "key": "summary",
                "highlightString": "<span class='highlight-string'>Conca</span>tenates strings together."
              },
              {
                "key": "description",
                "highlightString": "<span class='highlight-string'>Conca</span>tenates a string with a second string(s). The second parameter can be a string or array."
              }
            ],
            "groups": [],
            "actor": "Pronghorn",
            "x": 1.061764705882353,
            "y": 1.1069915254237288,
            "scheduled": false
          },
          "727a": {
            "name": "makeData",
            "canvasName": "makeData",
            "summary": "Get Approval Payload",
            "description": "This task takes an input and converts it to a different data type. For example, converting a number into a string.",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "type": "automatic",
            "displayName": "Tools",
            "variables": {
              "incoming": {
                "input": "{\n\"approvals_before_merge\": 1,\n\"reset_approvals_on_push\": false,\n\"disable_overriding_approvers_per_merge_request\": false,\n\"merge_requests_author_approval\": false,\n\"merge_requests_disable_committers_approval\": false,\n  \"require_password_to_approve\": true\n}",
                "outputType": "json",
                "variables": ""
              },
              "outgoing": {
                "output": null
              },
              "error": ""
            },
            "deprecated": false,
            "matched": [
              {
                "key": "canvasName",
                "highlightString": "<span class='highlight-string'>makeData</span>"
              }
            ],
            "groups": [],
            "actor": "Pronghorn",
            "x": 1.2990196078431373,
            "y": 1.097457627118644,
            "scheduled": false
          },
          "fcbb": {
            "name": "restCall",
            "canvasName": "restCall",
            "summary": "GitlAb Approver Rest Call",
            "description": "Execute a REST call",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "type": "automatic",
            "displayName": "Tools",
            "variables": {
              "incoming": {
                "uri": "$var.f9b1.combinedStrings",
                "verb": "POST",
                "user": "",
                "password": "",
                "headers": "$var.job.headers",
                "body": "$var.727a.output",
                "responseHeaders": false
              },
              "outgoing": {
                "response": null
              },
              "error": ""
            },
            "deprecated": false,
            "matched": [
              {
                "key": "canvasName",
                "highlightString": "<span class='highlight-string'>rest</span>Call"
              },
              {
                "key": "summary",
                "highlightString": "<span class='highlight-string'>REST</span> Call"
              },
              {
                "key": "description",
                "highlightString": "Execute a <span class='highlight-string'>REST</span> call"
              }
            ],
            "groups": [],
            "actor": "Pronghorn",
            "x": 1.7754901960784313,
            "y": 0.9523305084745762,
            "scheduled": false
          },
          "fcc1": {
            "name": "restCall",
            "canvasName": "restCall",
            "summary": "Set Protected branch",
            "description": "Execute a REST call",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "type": "automatic",
            "displayName": "Tools",
            "variables": {
              "incoming": {
                "uri": "$var.7c64.combinedStrings",
                "verb": "POST",
                "user": "",
                "password": "",
                "headers": "$var.job.headers",
                "body": {
                  "name": "release/*",
                  "allowed_to_push": [
                    {
                      "access_level": 0,
                      "access_level_description": "No one",
                      "user_id": null,
                      "group_id": null
                    }
                  ],
                  "allowed_to_merge": [
                    {
                      "access_level": 40,
                      "access_level_description": "Maintainers",
                      "user_id": null,
                      "group_id": null
                    }
                  ],
                  "unprotect_access_levels": [],
                  "code_owner_approval_required": true
                },
                "responseHeaders": false
              },
              "outgoing": {
                "response": null
              },
              "error": ""
            },
            "deprecated": false,
            "matched": [
              {
                "key": "canvasName",
                "highlightString": "<span class='highlight-string'>rest</span><span class='highlight-string'>Call</span>"
              },
              {
                "key": "summary",
                "highlightString": "<span class='highlight-string'>REST</span> <span class='highlight-string'>Call</span>"
              },
              {
                "key": "description",
                "highlightString": "Execute a <span class='highlight-string'>REST</span> <span class='highlight-string'>call</span>"
              }
            ],
            "groups": [],
            "actor": "Pronghorn",
            "x": 2.1737704918032787,
            "y": 0.7669491525423728,
            "scheduled": false
          },
          "ef7b": {
            "name": "restCall",
            "canvasName": "restCall",
            "summary": "Set master protected branch",
            "description": "Execute a REST call",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "type": "automatic",
            "displayName": "Tools",
            "variables": {
              "incoming": {
                "uri": "$var.7c64.combinedStrings",
                "verb": "POST",
                "user": "",
                "password": "",
                "headers": "$var.job.headers",
                "body": {
                  "name": "master",
                  "allowed_to_push": [
                    {
                      "access_level": 40,
                      "access_level_description": "Maintainers",
                      "user_id": null,
                      "group_id": null
                    }
                  ],
                  "allowed_to_merge": [
                    {
                      "access_level": 40,
                      "access_level_description": "Maintainers",
                      "user_id": null,
                      "group_id": null
                    }
                  ],
                  "unprotect_access_levels": [],
                  "code_owner_approval_required": true
                },
                "responseHeaders": false
              },
              "outgoing": {
                "response": null
              },
              "error": ""
            },
            "deprecated": false,
            "matched": [
              {
                "key": "canvasName",
                "highlightString": "<span class='highlight-string'>rest</span><span class='highlight-string'>Call</span>"
              },
              {
                "key": "summary",
                "highlightString": "<span class='highlight-string'>REST</span> <span class='highlight-string'>Call</span>"
              },
              {
                "key": "description",
                "highlightString": "Execute a <span class='highlight-string'>REST</span> <span class='highlight-string'>call</span>"
              }
            ],
            "groups": [],
            "actor": "Pronghorn",
            "x": 2.0352459016393443,
            "y": 0.7722457627118644,
            "scheduled": false
          },
          "7c64": {
            "name": "stringConcat",
            "canvasName": "concat",
            "summary": "Get protected branch url",
            "description": "Concatenates a string with a second string(s). The second parameter can be a string or array.",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "type": "automatic",
            "displayName": "String",
            "variables": {
              "incoming": {
                "str": "$var.80b6.combinedStrings",
                "stringN": [
                  "/protected_branches"
                ]
              },
              "outgoing": {
                "combinedStrings": null
              },
              "error": ""
            },
            "deprecated": false,
            "matched": [
              {
                "key": "canvasName",
                "highlightString": "<span class='highlight-string'>concat</span>"
              },
              {
                "key": "summary",
                "highlightString": "<span class='highlight-string'>Concat</span>enates strings together."
              },
              {
                "key": "description",
                "highlightString": "<span class='highlight-string'>Concat</span>enates a string with a second string(s). The second parameter can be a string or array."
              }
            ],
            "groups": [],
            "actor": "Pronghorn",
            "x": 1.448360655737705,
            "y": 0.923728813559322,
            "scheduled": false
          },
          "ba3a": {
            "name": "stringConcat",
            "canvasName": "concat",
            "summary": "get branch protected delete",
            "description": "Concatenates a string with a second string(s). The second parameter can be a string or array.",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "type": "automatic",
            "displayName": "String",
            "variables": {
              "incoming": {
                "str": "$var.7c64.combinedStrings",
                "stringN": [
                  "/master"
                ]
              },
              "outgoing": {
                "combinedStrings": null
              },
              "error": ""
            },
            "deprecated": false,
            "matched": [
              {
                "key": "canvasName",
                "highlightString": "<span class='highlight-string'>concat</span>"
              },
              {
                "key": "summary",
                "highlightString": "<span class='highlight-string'>Concat</span>enates strings together."
              },
              {
                "key": "description",
                "highlightString": "<span class='highlight-string'>Concat</span>enates a string with a second string(s). The second parameter can be a string or array."
              }
            ],
            "groups": [],
            "actor": "Pronghorn",
            "x": 1.4368852459016392,
            "y": 0.7733050847457628,
            "scheduled": false
          }
        },
        "transitions": {
          "1483": {
            "886a": {
              "type": "standard",
              "state": "success"
            }
          },
          "2801": {
            "5381": {
              "type": "standard",
              "state": "failure"
            },
            "fcbb": {
              "type": "revert",
              "state": "success"
            }
          },
          "3223": {
            "e599": {
              "type": "standard",
              "state": "success"
            }
          },
          "3556": {
            "8994": {
              "type": "standard",
              "state": "success"
            }
          },
          "5381": {
            "ef7b": {
              "type": "standard",
              "state": "success"
            }
          },
          "5642": {
            "45b3": {
              "type": "standard",
              "state": "success"
            }
          },
          "8994": {
            "e61a": {
              "type": "standard",
              "state": "success"
            }
          },
          "9052": {
            "d69d": {
              "type": "standard",
              "state": "success"
            }
          },
          "9384": {
            "ef59": {
              "type": "standard",
              "state": "success"
            }
          },
          "9434": {
            "fb11": {
              "type": "standard",
              "state": "success"
            }
          },
          "workflow_start": {
            "a7e0": {
              "type": "standard",
              "state": "success"
            }
          },
          "workflow_end": {},
          "a7e0": {
            "3556": {
              "type": "standard",
              "state": "success"
            }
          },
          "a468": {
            "46e2": {
              "type": "standard",
              "state": "success"
            }
          },
          "6d39": {},
          "3e4d": {
            "1483": {
              "type": "standard",
              "state": "success"
            },
            "9052": {
              "type": "standard",
              "state": "success"
            },
            "518f": {
              "type": "standard",
              "state": "success"
            },
            "d987": {
              "type": "standard",
              "state": "error"
            }
          },
          "75aa": {},
          "46e2": {
            "7d7e": {
              "type": "standard",
              "state": "success"
            }
          },
          "bff1": {},
          "49c6": {
            "deae": {
              "type": "standard",
              "state": "success"
            }
          },
          "bf00": {},
          "518f": {
            "886a": {
              "type": "standard",
              "state": "success"
            }
          },
          "d69d": {
            "3223": {
              "type": "standard",
              "state": "success"
            }
          },
          "89af": {},
          "80b6": {
            "9384": {
              "type": "standard",
              "state": "success"
            }
          },
          "b41b": {
            "7f83": {
              "type": "standard",
              "state": "success"
            }
          },
          "aade": {},
          "b52c": {
            "2cad": {
              "type": "standard",
              "state": "error"
            },
            "fcbb": {
              "type": "standard",
              "state": "success"
            }
          },
          "7f83": {
            "b52c": {
              "type": "standard",
              "state": "success"
            }
          },
          "5ad7": {
            "54dc": {
              "type": "standard",
              "state": "success"
            }
          },
          "886a": {
            "e20d": {
              "type": "standard",
              "state": "success"
            }
          },
          "e20d": {
            "9b1e": {
              "type": "standard",
              "state": "success"
            }
          },
          "deae": {
            "39b4": {
              "type": "standard",
              "state": "success"
            }
          },
          "39b4": {
            "3e4d": {
              "type": "standard",
              "state": "success"
            }
          },
          "ef59": {
            "5642": {
              "type": "standard",
              "state": "success"
            }
          },
          "45b3": {
            "f9b1": {
              "type": "standard",
              "state": "success"
            }
          },
          "d987": {
            "3e4d": {
              "type": "revert",
              "state": "success"
            }
          },
          "2cad": {
            "b52c": {
              "type": "revert",
              "state": "success"
            }
          },
          "cc5f": {
            "54dc": {
              "type": "standard",
              "state": "success"
            }
          },
          "54dc": {
            "7f83": {
              "type": "standard",
              "state": "success"
            }
          },
          "e599": {
            "80b6": {
              "type": "standard",
              "state": "success"
            }
          },
          "9b1e": {
            "9434": {
              "type": "standard",
              "state": "success"
            }
          },
          "fb11": {
            "5ad7": {
              "type": "standard",
              "state": "success"
            },
            "cc5f": {
              "type": "standard",
              "state": "success"
            }
          },
          "e61a": {
            "a468": {
              "type": "standard",
              "state": "success"
            }
          },
          "7d7e": {
            "49c6": {
              "type": "standard",
              "state": "success"
            }
          },
          "f9b1": {
            "727a": {
              "type": "standard",
              "state": "success"
            }
          },
          "727a": {
            "7c64": {
              "type": "standard",
              "state": "success"
            }
          },
          "fcbb": {
            "2801": {
              "type": "standard",
              "state": "error"
            },
            "5381": {
              "type": "standard",
              "state": "success"
            }
          },
          "fcc1": {
            "workflow_end": {
              "type": "standard",
              "state": "success"
            }
          },
          "ef7b": {
            "fcc1": {
              "type": "standard",
              "state": "success"
            }
          },
          "7c64": {
            "ba3a": {
              "type": "standard",
              "state": "success"
            }
          },
          "ba3a": {
            "b41b": {
              "type": "standard",
              "state": "success"
            }
          }
        },
        "font_size": 12,
        "created": "2020-05-21T14:49:23.982Z",
        "created_by": {
          "provenance": "Local AAA",
          "username": "admin@pronghorn",
          "firstname": "admin",
          "inactive": false,
          "email": ""
        },
        "createdVersion": "5.10.4-2020.1.3.0",
        "last_updated": "2021-11-09T14:55:00.842Z",
        "last_updated_by": {
          "provenance": "Local AAA",
          "username": "admin@pronghorn",
          "firstname": "admin",
          "inactive": false,
          "email": ""
        },
        "lastUpdatedVersion": "5.40.5-2021.1.59.0",
        "type": "automation",
        "description": null,
        "inputSchema": {
          "type": "object",
          "properties": {
            "description": {
              "type": [
                "array",
                "boolean",
                "null",
                "number",
                "object",
                "string"
              ]
            },
            "artifact": {
              "type": "object",
              "examples": [
                {
                  "name": "value"
                }
              ]
            },
            "repoName": {
              "$id": "name",
              "type": "string",
              "examples": [
                "Artifact Wizard"
              ]
            }
          },
          "required": [
            "description",
            "artifact",
            "repoName"
          ]
        },
        "outputSchema": {
          "type": "object",
          "properties": {
            "description": {
              "type": [
                "array",
                "boolean",
                "null",
                "number",
                "object",
                "string"
              ]
            },
            "artifact": {
              "type": "object",
              "examples": [
                {
                  "name": "value"
                }
              ]
            },
            "repoName": {
              "$id": "name",
              "type": "string",
              "examples": [
                "Artifact Wizard"
              ]
            },
            "_id": {
              "type": "string",
              "pattern": "^[0-9a-f]{24}$"
            },
            "initiator": {
              "type": "string"
            },
            "repoId": {
              "type": [
                "array",
                "boolean",
                "null",
                "number",
                "object",
                "string"
              ]
            },
            "urlEncodedNamespace": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "headers": {
              "type": "object",
              "properties": {
                "Authorization": {
                  "type": "string"
                }
              }
            },
            "groupURL": {
              "title": "combinedStrings",
              "type": "string",
              "examples": [
                "Hello World"
              ]
            },
            "homepage": {
              "type": [
                "string",
                "number",
                "object",
                "integer",
                "array",
                "boolean",
                "null"
              ],
              "examples": [
                "value"
              ]
            }
          }
        },
        "tags": [],
        "groups": []
      }
    },
    {
      "type": "json-forms",
      "data": {
        "id": "6005fff0a6e5629f52c84c15",
        "created": "2021-01-25T20:35:24.391Z",
        "createdBy": "admin@pronghorn",
        "lastUpdated": "2022-03-28T13:15:25.580Z",
        "lastUpdatedBy": "admin@pronghorn",
        "name": "Artifact Wizard Config Form",
        "description": null,
        "struct": {
          "nodeId": "8eb9dd59-91c3-419f-b1be-d30a199d9cbc",
          "type": "array",
          "items": [
            {
              "nodeId": "1f0839ed-2a4c-4db6-bcdc-78f6e6e702be",
              "type": "object",
              "description": "",
              "items": [
                {
                  "nodeId": "c9f30b40-cf2b-458f-aa9e-573784c989fd",
                  "type": "string",
                  "title": "Scope",
                  "description": "Add the scope of your pre-built",
                  "placeholder": "Enter text",
                  "required": true,
                  "pattern": "@[a-z0-9-~][a-z0-9-._~]*$"
                },
                {
                  "nodeId": "64312da1-52db-4c34-91c8-c41541371c75",
                  "type": "string",
                  "title": "Name",
                  "description": "Name consist of one or more words, each must start with capital letter",
                  "placeholder": "",
                  "required": true,
                  "pattern": ""
                },
                {
                  "nodeId": "4d5ad663-3b0a-4715-a602-8cdefa2fdcab",
                  "type": "boolean",
                  "title": "Zero Touch",
                  "description": "",
                  "default": false,
                  "enum": [
                    {
                      "id": "64ab894e-079b-4a84-b405-6243ce3a7243",
                      "value": true
                    },
                    {
                      "id": "5baabc90-c42b-400b-a2ef-7f757f890589",
                      "value": false
                    }
                  ]
                },
                {
                  "nodeId": "ed55142b-ba9e-4600-badc-bd229bffe13a",
                  "type": "boolean",
                  "title": "Install into Admin Essentials and Download",
                  "description": "",
                  "default": true,
                  "enum": [
                    {
                      "id": "780a2dcd-4dc1-46fe-9432-b81306aa144e",
                      "value": true
                    },
                    {
                      "id": "33dae9c2-79b4-42e7-84a9-6c895712ce65",
                      "value": false
                    }
                  ]
                },
                {
                  "nodeId": "4dd36a84-31b9-49c6-8365-377dbb9126f4",
                  "type": "boolean",
                  "title": "Create Gitlab Repository",
                  "description": "",
                  "default": false,
                  "enum": [
                    {
                      "id": "d6be586a-4501-45d1-b491-9bd0cbbef5d5",
                      "value": true
                    },
                    {
                      "id": "d819360b-2899-40b7-a4e1-273c48a5bcb5",
                      "value": false
                    }
                  ]
                },
                {
                  "nodeId": "0a094bae-5c17-446c-8a79-9d9fa5072763",
                  "type": "array",
                  "description": "",
                  "items": [
                    {
                      "nodeId": "99478fac-d0c6-4208-a4db-0a6e7bff0433",
                      "type": "string",
                      "title": "Name",
                      "description": "Automation Catalog Name",
                      "placeholder": "Select an Automation Catalog item",
                      "required": true,
                      "enum": [],
                      "binding": true,
                      "rel": "collection",
                      "targetPointer": "/enum",
                      "method": "GET",
                      "base": "/",
                      "href": "automation_catalog/automations?limit=0",
                      "sourcePointer": "/list",
                      "sourceKeyPointer": "/name"
                    }
                  ],
                  "title": "Automation Catalogs"
                },
                {
                  "nodeId": "127d8ef1-03bc-4b1c-888d-dd3408bcbec4",
                  "type": "array",
                  "description": "",
                  "items": [
                    {
                      "nodeId": "4647181e-a8c5-4a6e-af7d-3277b21b7476",
                      "type": "string",
                      "title": "Name",
                      "description": "Workflow Automation Name",
                      "placeholder": "Select a Workflow",
                      "required": true,
                      "enum": [],
                      "binding": true,
                      "rel": "collection",
                      "targetPointer": "/enum",
                      "method": "POST",
                      "base": "/",
                      "body": {
                        "options": {
                          "skip": 0,
                          "limit": 0
                        }
                      },
                      "href": "workflow_engine/workflows/search",
                      "sourcePointer": "/results",
                      "sourceKeyPointer": "/name"
                    }
                  ],
                  "title": "Automation Workflows"
                }
              ],
              "title": "New Artifact"
            }
          ]
        },
        "schema": {
          "title": "Artifact Wizard Config Form",
          "description": "",
          "type": "object",
          "required": [],
          "properties": {
            "newArtifact": {
              "type": "object",
              "title": "New Artifact",
              "description": "",
              "required": [
                "scope",
                "name"
              ],
              "properties": {
                "scope": {
                  "type": "string",
                  "title": "Scope",
                  "description": "Add the scope of your pre-built",
                  "pattern": "@[a-z0-9-~][a-z0-9-._~]*$"
                },
                "name": {
                  "type": "string",
                  "title": "Name",
                  "description": "Name consist of one or more words, each must start with capital letter"
                },
                "zeroTouch": {
                  "type": "boolean",
                  "title": "Zero Touch",
                  "description": "",
                  "default": false,
                  "enum": [
                    true,
                    false
                  ]
                },
                "installIntoAdminEssentialsAndDownload": {
                  "type": "boolean",
                  "title": "Install into Admin Essentials and Download",
                  "description": "",
                  "default": true,
                  "enum": [
                    true,
                    false
                  ]
                },
                "createGitlabRepository": {
                  "type": "boolean",
                  "title": "Create Gitlab Repository",
                  "description": "",
                  "default": false,
                  "enum": [
                    true,
                    false
                  ]
                },
                "automationCatalogs": {
                  "type": "array",
                  "title": "Automation Catalogs",
                  "description": "",
                  "items": {
                    "type": "object",
                    "required": [
                      "name"
                    ],
                    "properties": {
                      "name": {
                        "type": "string",
                        "title": "Name",
                        "description": "Automation Catalog Name",
                        "enum": []
                      }
                    }
                  }
                },
                "automationWorkflows": {
                  "type": "array",
                  "title": "Automation Workflows",
                  "description": "",
                  "items": {
                    "type": "object",
                    "required": [
                      "name"
                    ],
                    "properties": {
                      "name": {
                        "type": "string",
                        "title": "Name",
                        "description": "Workflow Automation Name",
                        "enum": []
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "uiSchema": {
          "newArtifact": {
            "ui:collapseByDefault": false,
            "items": {
              "scope": {
                "ui:placeholder": "Enter text"
              },
              "automationCatalogs": {
                "items": {
                  "name": {
                    "ui:placeholder": "Select an Automation Catalog item"
                  }
                }
              },
              "automationWorkflows": {
                "items": {
                  "name": {
                    "ui:placeholder": "Select a Workflow"
                  }
                }
              }
            }
          }
        },
        "bindingSchema": {
          "properties": {
            "newArtifact": {
              "properties": {
                "automationCatalogs": {
                  "items": {
                    "properties": {
                      "name": {
                        "binding:method": "GET",
                        "binding:link": {
                          "$ref": "/links",
                          "rel": "collection"
                        },
                        "binding:target": {
                          "propertyPointer": "/enum"
                        },
                        "binding:hyperSchema": {
                          "type": "object",
                          "base": "/",
                          "links": [
                            {
                              "rel": "collection",
                              "href": "automation_catalog/automations?limit=0",
                              "targetMediaType": "application/json",
                              "targetSchema": {
                                "$ref": "#"
                              }
                            }
                          ]
                        },
                        "binding:source": {
                          "propertyPointer": "/list",
                          "keyPointer": "/name"
                        }
                      }
                    }
                  }
                },
                "automationWorkflows": {
                  "items": {
                    "properties": {
                      "name": {
                        "binding:method": "POST",
                        "binding:link": {
                          "$ref": "/links",
                          "rel": "collection"
                        },
                        "binding:body": {
                          "options": {
                            "skip": 0,
                            "limit": 0
                          }
                        },
                        "binding:target": {
                          "propertyPointer": "/enum"
                        },
                        "binding:hyperSchema": {
                          "type": "object",
                          "base": "/",
                          "links": [
                            {
                              "rel": "collection",
                              "href": "workflow_engine/workflows/search",
                              "targetMediaType": "application/json",
                              "targetSchema": {
                                "$ref": "#"
                              }
                            }
                          ]
                        },
                        "binding:source": {
                          "propertyPointer": "/results",
                          "keyPointer": "/name"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "validationSchema": {
          "newArtifact": {
            "automationCatalogs": {},
            "automationWorkflows": {}
          }
        },
        "version": "2020.1"
      }
    },
    {
      "type": "json-forms",
      "data": {
        "id": "5f7c78a60018ec7488a68c7e",
        "created": "2020-10-06T13:25:07.206Z",
        "createdBy": "admin@pronghorn",
        "lastUpdated": "2021-11-09T14:55:01.021Z",
        "lastUpdatedBy": "admin@pronghorn",
        "name": "Shallow Remove Artifact",
        "description": "",
        "struct": {
          "nodeId": "b694282a-3bb5-4dd1-9bc4-3607e90d4904",
          "type": "array",
          "items": [
            {
              "nodeId": "38111309-f4cd-4845-9436-e831ea4120df",
              "type": "array",
              "description": "",
              "items": [
                {
                  "nodeId": "fa4094ad-70f4-462c-bcb6-1233e2caeb48",
                  "type": "string",
                  "title": "Artifact",
                  "description": "",
                  "placeholder": "Select an Artifact to shallow remove",
                  "required": true,
                  "enum": [],
                  "binding": true,
                  "rel": "collection",
                  "targetPointer": "/enum",
                  "base": "/",
                  "href": "admin/artifacts?skip=0&limit=500&order=1&sort=name",
                  "sourcePointer": "/packages",
                  "sourceKeyPointer": "/name",
                  "method": "GET"
                }
              ],
              "title": "Select Artifacts to be shallow removed"
            }
          ]
        },
        "schema": {
          "title": "Shallow Remove Artifact",
          "description": "",
          "type": "object",
          "required": [],
          "properties": {
            "selectArtifactsToBeShallowRemoved": {
              "type": "array",
              "title": "Select Artifacts to be shallow removed",
              "description": "",
              "items": {
                "type": "object",
                "required": [
                  "artifact"
                ],
                "properties": {
                  "artifact": {
                    "type": "string",
                    "title": "Artifact",
                    "description": "",
                    "enum": []
                  }
                }
              }
            }
          }
        },
        "uiSchema": {
          "selectArtifactsToBeShallowRemoved": {
            "items": {
              "artifact": {
                "ui:placeholder": "Select an Artifact to shallow remove"
              }
            }
          }
        },
        "bindingSchema": {
          "properties": {
            "selectArtifactsToBeShallowRemoved": {
              "items": {
                "properties": {
                  "artifact": {
                    "binding:method": "GET",
                    "binding:link": {
                      "$ref": "/links",
                      "rel": "collection"
                    },
                    "binding:source": {
                      "propertyPointer": "/packages",
                      "keyPointer": "/name"
                    },
                    "binding:target": {
                      "propertyPointer": "/enum"
                    },
                    "binding:hyperSchema": {
                      "type": "object",
                      "base": "/",
                      "links": [
                        {
                          "rel": "collection",
                          "href": "admin/artifacts?skip=0&limit=500&order=1&sort=name",
                          "targetMediaType": "application/json",
                          "targetSchema": {
                            "$ref": "#"
                          }
                        }
                      ]
                    }
                  }
                }
              }
            }
          }
        },
        "validationSchema": {
          "selectArtifactsToBeShallowRemoved": {}
        },
        "version": "2020.1"
      }
    },
    {
      "type": "json-forms",
      "data": {
        "id": "5ea1a6f5664de56165625667",
        "created": "2020-03-30T14:23:32.261Z",
        "createdBy": "admin@pronghorn",
        "lastUpdated": "2021-11-09T14:55:01.063Z",
        "lastUpdatedBy": "admin@pronghorn",
        "name": "Artifact Components",
        "description": "Discovered Components",
        "struct": {
          "nodeId": "c8e815ab-cb7d-4869-908d-f578ba61bf63",
          "type": "array",
          "items": [
            {
              "nodeId": "ce1da193-5148-4ee8-988b-efc78b75f279",
              "type": "object",
              "description": "",
              "items": [
                {
                  "nodeId": "c5608cde-447e-4f7d-b257-e3377f9ba1d4",
                  "type": "array",
                  "description": "",
                  "items": [
                    {
                      "nodeId": "07df38bf-33cb-43d7-91a4-98581b42da8c",
                      "type": "string",
                      "title": "Name",
                      "description": "",
                      "placeholder": "",
                      "required": true
                    }
                  ],
                  "title": "Automations"
                },
                {
                  "nodeId": "b2cfbfa0-a0c4-46f5-9c46-7e2c315e22b0",
                  "type": "array",
                  "description": "",
                  "items": [
                    {
                      "nodeId": "f3ef6d1d-4ba1-48d4-8224-b624a0f7a7d0",
                      "type": "string",
                      "title": "Name",
                      "description": "",
                      "placeholder": "",
                      "required": true
                    }
                  ],
                  "title": "Workflows"
                },
                {
                  "nodeId": "1920615b-2822-40f5-b905-eae57689f7a9",
                  "type": "array",
                  "description": "",
                  "items": [
                    {
                      "nodeId": "e5193f31-8763-499a-9113-33a5956ebda4",
                      "type": "string",
                      "widget": "textarea",
                      "title": "Id",
                      "description": "",
                      "placeholder": "",
                      "required": true
                    }
                  ],
                  "title": "Transformations"
                },
                {
                  "nodeId": "f221055a-6a68-4a4a-a472-65cda13d0845",
                  "type": "array",
                  "description": "",
                  "items": [
                    {
                      "nodeId": "a4c14093-0170-4a75-9303-6154e34cb607",
                      "type": "string",
                      "widget": "textarea",
                      "title": "Name",
                      "description": "",
                      "placeholder": "",
                      "required": true
                    }
                  ],
                  "title": "JSON Forms"
                },
                {
                  "nodeId": "130de3e1-1188-42d8-bf35-39b5a53bf5d5",
                  "type": "array",
                  "description": "",
                  "items": [
                    {
                      "nodeId": "7bb94765-e6ea-4369-b856-45c4a58734cf",
                      "type": "string",
                      "title": "Name",
                      "description": "",
                      "placeholder": "",
                      "required": true
                    }
                  ],
                  "title": "Forms"
                },
                {
                  "nodeId": "7f2e64a4-5498-40c8-82d0-c48eaa9b481a",
                  "type": "array",
                  "description": "",
                  "items": [
                    {
                      "nodeId": "a3d138aa-4a83-4c59-b23a-29331e30339b",
                      "type": "string",
                      "title": "Name",
                      "description": "",
                      "placeholder": "",
                      "required": true
                    }
                  ],
                  "title": "Templates"
                },
                {
                  "nodeId": "ccb287ba-b566-4cbd-b56e-a171b3334027",
                  "type": "array",
                  "description": "",
                  "items": [
                    {
                      "nodeId": "fdc26a05-e9eb-489b-973a-828f06cbf663",
                      "type": "string",
                      "title": "Name",
                      "description": "",
                      "placeholder": "",
                      "required": true
                    }
                  ],
                  "title": "Command Templates"
                },
                {
                  "nodeId": "b7d81941-8b4f-47ac-aafd-27e37d41ddb7",
                  "type": "array",
                  "description": "",
                  "items": [
                    {
                      "nodeId": "2c341f42-5f69-4f95-ae8c-1c87e37e6ea4",
                      "type": "string",
                      "title": "Name",
                      "description": "",
                      "placeholder": "",
                      "required": true
                    }
                  ],
                  "title": "Analytic Templates"
                },
                {
                  "nodeId": "b9150dd0-d13c-4df6-9844-082260a5a821",
                  "type": "array",
                  "description": "",
                  "items": [
                    {
                      "nodeId": "f212e72e-ea5a-45da-928c-bf368044169c",
                      "type": "string",
                      "title": "Name",
                      "description": "",
                      "placeholder": "",
                      "required": true
                    }
                  ],
                  "title": "Golden Config Trees"
                }
              ],
              "title": "Components"
            }
          ]
        },
        "schema": {
          "title": "Artifact Components",
          "description": "Discovered Components",
          "type": "object",
          "required": [],
          "properties": {
            "components": {
              "type": "object",
              "title": "Components",
              "description": "",
              "required": [],
              "properties": {
                "automations": {
                  "type": "array",
                  "title": "Automations",
                  "description": "",
                  "items": {
                    "type": "object",
                    "required": [
                      "name"
                    ],
                    "properties": {
                      "name": {
                        "type": "string",
                        "title": "Name",
                        "description": ""
                      }
                    }
                  }
                },
                "workflows": {
                  "type": "array",
                  "title": "Workflows",
                  "description": "",
                  "items": {
                    "type": "object",
                    "required": [
                      "name"
                    ],
                    "properties": {
                      "name": {
                        "type": "string",
                        "title": "Name",
                        "description": ""
                      }
                    }
                  }
                },
                "transformations": {
                  "type": "array",
                  "title": "Transformations",
                  "description": "",
                  "items": {
                    "type": "object",
                    "required": [
                      "id"
                    ],
                    "properties": {
                      "id": {
                        "type": "string",
                        "title": "Id",
                        "description": ""
                      }
                    }
                  }
                },
                "jsonForms": {
                  "type": "array",
                  "title": "JSON Forms",
                  "description": "",
                  "items": {
                    "type": "object",
                    "required": [
                      "name"
                    ],
                    "properties": {
                      "name": {
                        "type": "string",
                        "title": "Name",
                        "description": ""
                      }
                    }
                  }
                },
                "forms": {
                  "type": "array",
                  "title": "Forms",
                  "description": "",
                  "items": {
                    "type": "object",
                    "required": [
                      "name"
                    ],
                    "properties": {
                      "name": {
                        "type": "string",
                        "title": "Name",
                        "description": ""
                      }
                    }
                  }
                },
                "templates": {
                  "type": "array",
                  "title": "Templates",
                  "description": "",
                  "items": {
                    "type": "object",
                    "required": [
                      "name"
                    ],
                    "properties": {
                      "name": {
                        "type": "string",
                        "title": "Name",
                        "description": ""
                      }
                    }
                  }
                },
                "commandTemplates": {
                  "type": "array",
                  "title": "Command Templates",
                  "description": "",
                  "items": {
                    "type": "object",
                    "required": [
                      "name"
                    ],
                    "properties": {
                      "name": {
                        "type": "string",
                        "title": "Name",
                        "description": ""
                      }
                    }
                  }
                },
                "analyticTemplates": {
                  "type": "array",
                  "title": "Analytic Templates",
                  "description": "",
                  "items": {
                    "type": "object",
                    "required": [
                      "name"
                    ],
                    "properties": {
                      "name": {
                        "type": "string",
                        "title": "Name",
                        "description": ""
                      }
                    }
                  }
                },
                "goldenConfigTrees": {
                  "type": "array",
                  "title": "Golden Config Trees",
                  "description": "",
                  "items": {
                    "type": "object",
                    "required": [
                      "name"
                    ],
                    "properties": {
                      "name": {
                        "type": "string",
                        "title": "Name",
                        "description": ""
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "uiSchema": {
          "components": {
            "automations": {
              "items": {}
            },
            "workflows": {
              "items": {}
            },
            "transformations": {
              "items": {
                "id": {
                  "ui:widget": "textarea"
                }
              }
            },
            "jsonForms": {
              "items": {
                "name": {
                  "ui:widget": "textarea"
                }
              }
            },
            "forms": {
              "items": {}
            },
            "templates": {
              "items": {}
            },
            "commandTemplates": {
              "items": {}
            },
            "analyticTemplates": {
              "items": {}
            },
            "goldenConfigTrees": {
              "items": {}
            }
          }
        },
        "bindingSchema": {
          "properties": {
            "components": {
              "properties": {
                "automations": {
                  "items": {
                    "properties": {}
                  }
                },
                "workflows": {
                  "items": {
                    "properties": {}
                  }
                },
                "transformations": {
                  "items": {
                    "properties": {}
                  }
                },
                "jsonForms": {
                  "items": {
                    "properties": {}
                  }
                },
                "forms": {
                  "items": {
                    "properties": {}
                  }
                },
                "templates": {
                  "items": {
                    "properties": {}
                  }
                },
                "commandTemplates": {
                  "items": {
                    "properties": {}
                  }
                },
                "analyticTemplates": {
                  "items": {
                    "properties": {}
                  }
                },
                "goldenConfigTrees": {
                  "items": {
                    "properties": {}
                  }
                }
              }
            }
          }
        },
        "validationSchema": {
          "components": {
            "automations": {},
            "workflows": {},
            "transformations": {},
            "jsonForms": {},
            "forms": {},
            "templates": {},
            "commandTemplates": {},
            "analyticTemplates": {},
            "goldenConfigTrees": {}
          }
        },
        "version": "2020.1"
      }
    },
    {
      "type": "json-forms",
      "data": {
        "id": "5ea19814664de56165625665",
        "created": "2020-04-23T13:28:52.725Z",
        "createdBy": "admin@pronghorn",
        "lastUpdated": "2021-11-09T14:55:01.090Z",
        "lastUpdatedBy": "admin@pronghorn",
        "name": "Artifact Metadata",
        "description": "",
        "struct": {
          "nodeId": "7222132a-23f4-441d-8b0d-19715a724070",
          "type": "array",
          "items": [
            {
              "nodeId": "7078ec45-c9e4-4e51-a6b7-32175b7dec26",
              "type": "string",
              "title": "Name",
              "description": "Name consist of one or more words, each must start with capital letter",
              "placeholder": "",
              "required": true,
              "pattern": "^(([A-Z]([a-zA-Z0-9]*)))([\\s][A-Z]([a-zA-Z0-9]*))*$"
            },
            {
              "nodeId": "4811c9ae-2488-4831-8dfc-76af66b311a6",
              "type": "string",
              "title": "Description",
              "description": "Provide a short description of the artifact:",
              "placeholder": "",
              "required": true
            },
            {
              "nodeId": "b0c6767f-2125-49f5-96c5-6441a9754a8b",
              "type": "string",
              "widget": "textarea",
              "title": "Readme",
              "description": "Provide a README in Markdown format:",
              "placeholder": "",
              "required": true
            },
            {
              "nodeId": "324e6b2b-7dd2-4db3-9791-aaf6ee3a7995",
              "type": "string",
              "widget": "textarea",
              "title": "License",
              "description": "(OPTIONAL) Provide a license:",
              "placeholder": "*By default Apache License 2.0 will be supplied",
              "required": false
            },
            {
              "nodeId": "52aad9b0-37a2-4294-a80f-1e3351c02195",
              "type": "string",
              "widget": "textarea",
              "title": "Contributor",
              "description": "* [FOR INTERNAL USE ONLY] Please provide your name:",
              "placeholder": "",
              "required": true
            },
            {
              "nodeId": "61ea44b2-4f72-4472-ab93-5e550e65538b",
              "type": "array",
              "description": "",
              "items": [
                {
                  "nodeId": "2ceea385-5cfc-4ec6-9c38-fc882bbe56ef",
                  "type": "string",
                  "title": "Category",
                  "description": "",
                  "placeholder": "",
                  "required": true,
                  "enum": [
                    {
                      "id": "f9325af2-2a4b-424c-8e38-0bda58e7a161",
                      "value": "Authentication"
                    },
                    {
                      "id": "0b0ea9aa-cb16-4431-9967-69d805f26eaa",
                      "value": "Cloud"
                    },
                    {
                      "id": "fe743287-70df-4f32-9084-0ec49399a78a",
                      "value": "Controller / Orchestration"
                    },
                    {
                      "id": "48dc19ad-8102-45d7-a7e8-3dafc37f568e",
                      "value": "DevOps"
                    },
                    {
                      "id": "d0783b3b-dbcd-42f0-9468-518aba5b533e",
                      "value": "NetOps"
                    },
                    {
                      "id": "5efd1dbe-afef-4299-90b9-801e95884a4d",
                      "value": "Inventory"
                    },
                    {
                      "id": "ee0f0b15-611e-4f99-bc19-cd2b4cf18edb",
                      "value": "ITSM / Testing"
                    },
                    {
                      "id": "d8126c63-cbc4-47d1-87ef-3e0676baabb0",
                      "value": "Notification / Messaging"
                    },
                    {
                      "id": "d80d8443-dabe-459c-8dd2-0549b355533c",
                      "value": "Persistence"
                    },
                    {
                      "id": "a2ae77a7-636e-4bb4-aa5b-2426ad32ea6b",
                      "value": "SD-WAN"
                    },
                    {
                      "id": "a64c83b2-59f1-4642-bda2-16cd3a8f1cae",
                      "value": "Security"
                    },
                    {
                      "id": "d01d20c3-7c09-4e8b-9113-0b277b78191d",
                      "value": "Telemetry / Analytics"
                    },
                    {
                      "id": "bf9740a9-8d30-467f-9288-8afe3a43bab1",
                      "value": "Utilities"
                    }
                  ],
                  "binding": false,
                  "rel": "collection",
                  "targetPointer": "/enum"
                }
              ],
              "title": "Categories"
            },
            {
              "nodeId": "0e33104c-3969-420c-bebc-9b56be616171",
              "type": "array",
              "description": "",
              "items": [
                {
                  "nodeId": "97ebcf00-b6fb-4c74-8f23-6c83eb4ffa68",
                  "type": "string",
                  "title": "Keyword",
                  "description": "",
                  "placeholder": "",
                  "required": true
                }
              ],
              "title": "Keywords"
            }
          ]
        },
        "schema": {
          "title": "Artifact Metadata",
          "description": "",
          "type": "object",
          "required": [
            "name",
            "description",
            "readme",
            "contributor"
          ],
          "properties": {
            "name": {
              "type": "string",
              "title": "Name",
              "description": "Name consist of one or more words, each must start with capital letter",
              "pattern": "^(([A-Z]([a-zA-Z0-9]*)))([\\s][A-Z]([a-zA-Z0-9]*))*$"
            },
            "description": {
              "type": "string",
              "title": "Description",
              "description": "Provide a short description of the artifact:"
            },
            "readme": {
              "type": "string",
              "title": "Readme",
              "description": "Provide a README in Markdown format:"
            },
            "license": {
              "type": "string",
              "title": "License",
              "description": "(OPTIONAL) Provide a license:"
            },
            "contributor": {
              "type": "string",
              "title": "Contributor",
              "description": "* [FOR INTERNAL USE ONLY] Please provide your name:"
            },
            "categories": {
              "type": "array",
              "title": "Categories",
              "description": "",
              "items": {
                "type": "object",
                "required": [
                  "category"
                ],
                "properties": {
                  "category": {
                    "type": "string",
                    "title": "Category",
                    "description": "",
                    "enum": [
                      "Authentication",
                      "Cloud",
                      "Controller / Orchestration",
                      "DevOps",
                      "NetOps",
                      "Inventory",
                      "ITSM / Testing",
                      "Notification / Messaging",
                      "Persistence",
                      "SD-WAN",
                      "Security",
                      "Telemetry / Analytics",
                      "Utilities"
                    ]
                  }
                }
              }
            },
            "keywords": {
              "type": "array",
              "title": "Keywords",
              "description": "",
              "items": {
                "type": "object",
                "required": [
                  "keyword"
                ],
                "properties": {
                  "keyword": {
                    "type": "string",
                    "title": "Keyword",
                    "description": ""
                  }
                }
              }
            }
          }
        },
        "uiSchema": {
          "readme": {
            "ui:widget": "textarea"
          },
          "license": {
            "ui:placeholder": "*By default Apache License 2.0 will be supplied",
            "ui:widget": "textarea"
          },
          "contributor": {
            "ui:widget": "textarea"
          },
          "categories": {
            "items": {}
          },
          "keywords": {
            "items": {}
          }
        },
        "bindingSchema": {
          "properties": {
            "categories": {
              "items": {
                "properties": {}
              }
            },
            "keywords": {
              "items": {
                "properties": {}
              }
            }
          }
        },
        "validationSchema": {
          "categories": {},
          "keywords": {}
        },
        "version": "2020.1"
      }
    },
    {
      "type": "transformation",
      "data": {
        "_id": "5f7cd8a23847573af4852ec1",
        "name": "GetArtifactIds_ShallowRemove",
        "description": "",
        "incoming": [
          {
            "$id": "incomingFormData",
            "type": "object",
            "properties": {
              "selectArtifactsToBeShallowRemoved": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "artifact": {
                      "type": "string",
                      "examples": [
                        "@itentialopensource/nick-srt"
                      ]
                    }
                  },
                  "required": []
                }
              }
            },
            "required": []
          }
        ],
        "outgoing": [
          {
            "$id": "artifactIdArray",
            "type": "array",
            "items": {
              "type": "string",
              "examples": [
                "id1"
              ]
            }
          }
        ],
        "steps": [
          {
            "id": 3,
            "type": "assign",
            "from": {
              "location": "incoming",
              "name": "incomingFormData",
              "ptr": "/selectArtifactsToBeShallowRemoved"
            },
            "to": {
              "location": "method",
              "name": 1,
              "ptr": "/args/0/value"
            }
          },
          {
            "id": 1,
            "type": "method",
            "library": "Array",
            "method": "map",
            "args": [
              null,
              "ƒ_map_1"
            ],
            "view": {
              "row": 1,
              "col": 2
            }
          },
          {
            "id": 2,
            "type": "assign",
            "from": {
              "location": "method",
              "name": 1,
              "ptr": "/return"
            },
            "to": {
              "location": "outgoing",
              "name": "artifactIdArray",
              "ptr": ""
            }
          }
        ],
        "functions": [
          {
            "incoming": [
              {
                "type": "object",
                "properties": {
                  "artifact": {
                    "type": "string",
                    "examples": [
                      "@itentialopensource/nick-srt"
                    ]
                  }
                },
                "required": [],
                "$id": "currentValue"
              },
              {
                "title": "index",
                "type": "number",
                "optional": true,
                "$id": "index"
              },
              {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "artifact": {
                      "type": "string",
                      "examples": [
                        "@itentialopensource/nick-srt"
                      ]
                    }
                  },
                  "required": []
                },
                "$id": "array",
                "optional": true
              },
              {
                "$id": "thisArg",
                "type": "object",
                "properties": {},
                "isContext": true,
                "isThis": true,
                "isIndexed": true
              }
            ],
            "outgoing": [
              {
                "title": "newValue",
                "type": [
                  "array",
                  "boolean",
                  "number",
                  "integer",
                  "string",
                  "object",
                  "null"
                ],
                "editable": true,
                "$id": "newValue"
              }
            ],
            "functions": [],
            "name": "ƒ_map_1",
            "steps": [
              {
                "id": 1,
                "type": "assign",
                "from": {
                  "location": "incoming",
                  "name": "currentValue",
                  "ptr": "/artifact"
                },
                "to": {
                  "location": "outgoing",
                  "name": "newValue",
                  "ptr": ""
                }
              }
            ],
            "view": {
              "col": 3,
              "row": 6
            },
            "id": "ƒ_map_1",
            "comments": []
          }
        ],
        "view": {
          "col": 3,
          "row": 6
        },
        "created": "2020-10-06T20:50:42.640Z",
        "createdBy": {
          "_id": "618a8bc4a22159532f47066b",
          "provenance": "Itential AAA LDAP",
          "username": "nick.andreano"
        },
        "lastUpdated": "2021-11-09T14:55:00.878Z",
        "lastUpdatedBy": {
          "_id": "6180307394366d356e0a4259",
          "provenance": "Local AAA",
          "username": "admin@pronghorn"
        },
        "version": "3.13.0-2020.2.6",
        "tags": []
      }
    },
    {
      "type": "transformation",
      "data": {
        "_id": "5f287844d76d950aa5f59814",
        "name": "Create prebuilt - Fix packagejson",
        "description": "This JST take in the JSON that would compose an artifact.json file and fixes the package.json entry to have the correct metadata",
        "incoming": [
          {
            "$id": "incoming",
            "type": "object",
            "properties": {
              "update": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "name": {
                      "type": "string",
                      "examples": [
                        "README%2Emd"
                      ]
                    },
                    "type": {
                      "type": "string",
                      "examples": [
                        "file"
                      ]
                    },
                    "content": {
                      "type": "string",
                      "examples": [
                        "<!-- This is a comment in md (Markdown) format, it will not be visible to the end user -->\n\n<!-- Update the below line with your Pre-Built name -->\n# Pre-Built Name\n\n<!-- Leave TOC intact unless you've added or removed headers -->\n## Table of Contents\n\n* [Overview](#overview)\n* [Installation Prerequisites](#installation-prerequisites)\n* [Requirements](#requirements)\n* [Features](#features)\n* [Future Enhancements](#future-enhancements)\n* [How to Install](#how-to-install)\n* [How to Run](#how-to-run)\n* [Additional Information](#additional-information)\n\n## Overview\n\n<!-- Write a few sentences about the Pre-Built and explain the use case(s) -->\n<!-- Avoid using the word Artifact%2E Please use Pre-Built, Pre-Built Transformation or Pre-Built Automation -->\n<!-- Ex%2E: The Migration Wizard enables IAP users to conveniently move their automation use cases between different IAP environments -->\n<!-- (e%2Eg%2E from Dev to Pre-Production or from Lab to Production)%2E -->\n\n<!-- Workflow(s) Image Placeholder - TO BE ADDED DIRECTLY TO GitLab -->\n<!-- REPLACE COMMENT BELOW WITH IMAGE OF YOUR MAIN WORKFLOW -->\n<!--\n<table><tr><td>\n  <img src=\"./images/workflow.png\" alt=\"workflow\" width=\"800px\">\n</td></tr></table>\n-->\n<!-- REPLACE COMMENT ABOVE WITH IMAGE OF YOUR MAIN WORKFLOW -->\n\n<!-- ADD ESTIMATED RUN TIME HERE -->\n<!-- e%2Eg%2E Estimated Run Time: 34 min%2E -->\n_Estimated Run Time_:\n\n## Installation Prerequisites\n\nUsers must satisfy the following pre-requisites:\n\n<!-- Include any other required apps or adapters in this list -->\n<!-- Ex%2E: EC2 Adapter -->\n* Itential Automation Platform\n  * `^2021%2E1`\n\n## Requirements\n\nThis Pre-Built requires the following:\n\n<!-- Unordered list highlighting the requirements of the Pre-Built -->\n<!-- EXAMPLE -->\n<!-- * cisco ios device -->\n<!-- * Ansible or NSO (with F5 NED) * -->\n\n## Features\n\nThe main benefits and features of the Pre-Built are outlined below%2E\n\n<!-- Unordered list highlighting the most exciting features of the Pre-Built -->\n<!-- EXAMPLE -->\n<!-- * Automatically checks for device type -->\n<!-- * Displays dry-run to user (asking for confirmation) prior to pushing config to the device -->\n<!-- * Verifies downloaded file integrity (using md5), will try to download again if failed -->\n\n\n## Future Enhancements\n\n<!-- OPTIONAL - Mention if the Pre-Built will be enhanced with additional features on the road map -->\n<!-- Ex%2E: This Pre-Built would support Cisco XR and F5 devices -->\n\n## How to Install\n\nTo install the Pre-Built:\n\n* Verify you are running a supported version of the Itential Automation Platform (IAP) as listed above in the [Requirements](#requirements) section in order to install the Pre-Built%2E \n* The Pre-Built can be installed from within App-Admin_Essential%2E Simply search for the name of your desired Pre-Built and click the install button (as shown below)%2E\n\n<!-- REPLACE BELOW WITH IMAGE OF YOUR PUBLISHED PRE-BUILT -->\n<!--\n<table><tr><td>\n  <img src=\"./images/install.png\" alt=\"install\" width=\"600px\">\n</td></tr></table>\n-->\n<!-- REPLACE ABOVE WITH IMAGE OF YOUR PUBLISHED PRE-BUILT -->\n\n<!-- OPTIONAL - Explain if external components are required outside of IAP -->\n<!-- Ex%2E: The Ansible roles required for this Pre-Built can be found in the repository located at https://gitlab%2Ecom/itentialopensource/pre-built-automations/hello-world -->\n\n## How to Run\n\nUse the following to run the Pre-Built:\n\n<!-- Explain the main entrypoint(s) for this Pre-Built: Automation Catalog item, Workflow, Postman, etc%2E -->\n\n## Additional Information\n\nPlease use your Itential Customer Success account if you need support when using this Pre-Built%2E\n"
                      ]
                    }
                  },
                  "required": []
                },
                "$id": "update"
              },
              "create": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "name": {
                      "type": "string",
                      "examples": [
                        "bundles"
                      ]
                    },
                    "type": {
                      "type": "string",
                      "examples": [
                        "directory"
                      ]
                    },
                    "content": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "name": {
                            "type": "string",
                            "examples": [
                              "ac_agenda_jobs"
                            ]
                          },
                          "type": {
                            "type": "string",
                            "examples": [
                              "directory"
                            ]
                          },
                          "content": {
                            "type": "array"
                          }
                        },
                        "required": []
                      }
                    }
                  },
                  "required": []
                },
                "$id": "create"
              }
            },
            "required": []
          }
        ],
        "outgoing": [
          {
            "$id": "outgoing",
            "type": "object",
            "properties": {
              "update": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "name": {
                      "type": "string",
                      "examples": [
                        "README.md"
                      ]
                    },
                    "type": {
                      "type": "string",
                      "examples": [
                        "file"
                      ]
                    },
                    "content": {
                      "type": "string",
                      "examples": [
                        "\n\n\n# Artifact Name\n\n\n## Table of Contents\n\n* [Overview](#overview)\n* [Installation Prerequisites](#installation-prerequisites)\n* [Requirements](#requirements)\n* [Features](#features)\n* [Future Enhancements](#future-enhancements)\n* [How to Install](#how-to-install)\n* [How to Run](#how-to-run)\n\n## Overview\n\n\n\n\n\n\n\n\n\n\n\n\n_Estimated Run Time_:\n\n## Installation Prerequisites\n\nUsers must satisfy the following pre-requisites:\n\n\n\n* Itential Automation Platform\n  * `^2020.x.x`\n\n## Requirements\n\nThis artifact requires the following:\n\n\n\n\n\n\n## Features\n\nThe main benefits and features of the artifact are outlined below.\n\n\n\n\n\n\n\n\n## Future Enhancements\n\n\n\n\n## How to Install\n\nTo install the artifact:\n\n* Verify you are running a supported version of the Itential Automation Platform (IAP) as listed above in the [Requirements](#requirements) section in order to install the artifact. \n* The artifact can be installed from within App-Admin_Essential. Simply search for the name of your desired artifact and click the install button (as shown below).\n\n\n\n\n\n\n\n\n## How to Run\n\nUse the following to run the artifact:\n\n\n"
                      ]
                    }
                  },
                  "required": []
                }
              },
              "create": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "name": {
                      "type": "string",
                      "examples": [
                        "bundles"
                      ]
                    },
                    "type": {
                      "type": "string",
                      "examples": [
                        "directory"
                      ]
                    },
                    "content": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "name": {
                            "type": "string",
                            "examples": [
                              "ac_agenda_jobs"
                            ]
                          },
                          "type": {
                            "type": "string",
                            "examples": [
                              "directory"
                            ]
                          },
                          "content": {
                            "type": "array"
                          }
                        },
                        "required": []
                      }
                    }
                  },
                  "required": []
                }
              }
            },
            "required": []
          }
        ],
        "steps": [
          {
            "id": 3,
            "type": "assign",
            "from": {
              "location": "incoming",
              "name": "incoming",
              "ptr": "/create"
            },
            "to": {
              "location": "outgoing",
              "name": "outgoing",
              "ptr": "/create"
            }
          },
          {
            "id": 4,
            "type": "assign",
            "from": {
              "location": "incoming",
              "name": "incoming",
              "ptr": "/update"
            },
            "to": {
              "location": "method",
              "name": 2,
              "ptr": "/args/0/value"
            }
          },
          {
            "id": 5,
            "type": "assign",
            "from": {
              "location": "incoming",
              "name": "incoming",
              "ptr": "/update"
            },
            "to": {
              "location": "method",
              "name": 1,
              "ptr": "/args/0/value"
            }
          },
          {
            "id": 1,
            "type": "method",
            "library": "Array",
            "method": "filter",
            "args": [
              null,
              "ƒ_query_2"
            ],
            "view": {
              "row": 2,
              "col": 1
            }
          },
          {
            "id": 2,
            "type": "method",
            "library": "Array",
            "method": "filter",
            "args": [
              null,
              "ƒ_query_1"
            ],
            "view": {
              "row": 1,
              "col": 1
            }
          },
          {
            "id": 7,
            "type": "assign",
            "from": {
              "location": "method",
              "name": 2,
              "ptr": "/return"
            },
            "to": {
              "location": "method",
              "name": 6,
              "ptr": "/args/0/value"
            }
          },
          {
            "id": 9,
            "type": "assign",
            "from": {
              "location": "method",
              "name": 1,
              "ptr": "/return"
            },
            "to": {
              "location": "method",
              "name": 8,
              "ptr": "/args/0/value"
            }
          },
          {
            "id": 6,
            "type": "method",
            "library": "Array",
            "method": "map",
            "args": [
              null,
              "ƒ_map_1"
            ],
            "view": {
              "row": 3,
              "col": 2
            }
          },
          {
            "id": 10,
            "type": "assign",
            "from": {
              "location": "method",
              "name": 6,
              "ptr": "/return"
            },
            "to": {
              "location": "method",
              "name": 8,
              "ptr": "/args/1/value"
            }
          },
          {
            "id": 8,
            "type": "method",
            "library": "Array",
            "method": "concat",
            "args": [
              null,
              null
            ],
            "view": {
              "row": 1,
              "col": 3
            }
          },
          {
            "id": 11,
            "type": "assign",
            "from": {
              "location": "method",
              "name": 8,
              "ptr": "/return"
            },
            "to": {
              "location": "outgoing",
              "name": "outgoing",
              "ptr": "/update"
            }
          }
        ],
        "functions": [
          {
            "incoming": [
              {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "examples": [
                      "README.md"
                    ]
                  },
                  "type": {
                    "type": "string",
                    "examples": [
                      "file"
                    ]
                  },
                  "content": {
                    "type": "string",
                    "examples": [
                      "\n\n\n# Artifact Name\n\n\n## Table of Contents\n\n* [Overview](#overview)\n* [Installation Prerequisites](#installation-prerequisites)\n* [Requirements](#requirements)\n* [Features](#features)\n* [Future Enhancements](#future-enhancements)\n* [How to Install](#how-to-install)\n* [How to Run](#how-to-run)\n\n## Overview\n\n\n\n\n\n\n\n\n\n\n\n\n_Estimated Run Time_:\n\n## Installation Prerequisites\n\nUsers must satisfy the following pre-requisites:\n\n\n\n* Itential Automation Platform\n  * `^2020.x.x`\n\n## Requirements\n\nThis artifact requires the following:\n\n\n\n\n\n\n## Features\n\nThe main benefits and features of the artifact are outlined below.\n\n\n\n\n\n\n\n\n## Future Enhancements\n\n\n\n\n## How to Install\n\nTo install the artifact:\n\n* Verify you are running a supported version of the Itential Automation Platform (IAP) as listed above in the [Requirements](#requirements) section in order to install the artifact. \n* The artifact can be installed from within App-Admin_Essential. Simply search for the name of your desired artifact and click the install button (as shown below).\n\n\n\n\n\n\n\n\n## How to Run\n\nUse the following to run the artifact:\n\n\n"
                    ]
                  }
                },
                "required": [],
                "$id": "element"
              },
              {
                "title": "index",
                "type": "number",
                "$id": "index"
              },
              {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "name": {
                      "type": "string",
                      "examples": [
                        "README.md"
                      ]
                    },
                    "type": {
                      "type": "string",
                      "examples": [
                        "file"
                      ]
                    },
                    "content": {
                      "type": "string",
                      "examples": [
                        "\n\n\n# Artifact Name\n\n\n## Table of Contents\n\n* [Overview](#overview)\n* [Installation Prerequisites](#installation-prerequisites)\n* [Requirements](#requirements)\n* [Features](#features)\n* [Future Enhancements](#future-enhancements)\n* [How to Install](#how-to-install)\n* [How to Run](#how-to-run)\n\n## Overview\n\n\n\n\n\n\n\n\n\n\n\n\n_Estimated Run Time_:\n\n## Installation Prerequisites\n\nUsers must satisfy the following pre-requisites:\n\n\n\n* Itential Automation Platform\n  * `^2020.x.x`\n\n## Requirements\n\nThis artifact requires the following:\n\n\n\n\n\n\n## Features\n\nThe main benefits and features of the artifact are outlined below.\n\n\n\n\n\n\n\n\n## Future Enhancements\n\n\n\n\n## How to Install\n\nTo install the artifact:\n\n* Verify you are running a supported version of the Itential Automation Platform (IAP) as listed above in the [Requirements](#requirements) section in order to install the artifact. \n* The artifact can be installed from within App-Admin_Essential. Simply search for the name of your desired artifact and click the install button (as shown below).\n\n\n\n\n\n\n\n\n## How to Run\n\nUse the following to run the artifact:\n\n\n"
                      ]
                    }
                  },
                  "required": []
                },
                "$id": "array"
              },
              {
                "$id": "thisArg",
                "type": "object",
                "properties": {},
                "isContext": true,
                "isIndexed": true
              }
            ],
            "outgoing": [
              {
                "title": "return",
                "type": "boolean",
                "$id": "return"
              }
            ],
            "functions": [],
            "name": "isPackageJSON",
            "steps": [
              {
                "id": 4,
                "type": "assign",
                "from": {
                  "location": "incoming",
                  "name": "element",
                  "ptr": "/name"
                },
                "to": {
                  "location": "method",
                  "name": 1,
                  "ptr": "/args/0/value"
                }
              },
              {
                "id": 1,
                "type": "method",
                "library": "Equality",
                "method": "equality",
                "args": [
                  null,
                  "package.json"
                ],
                "view": {
                  "row": 1,
                  "col": 1
                }
              },
              {
                "id": 3,
                "type": "assign",
                "from": {
                  "location": "method",
                  "name": 1,
                  "ptr": "/return"
                },
                "to": {
                  "location": "outgoing",
                  "name": "return",
                  "ptr": ""
                }
              }
            ],
            "view": {
              "col": 1,
              "row": 5
            },
            "id": "ƒ_query_1",
            "comments": []
          },
          {
            "incoming": [
              {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "examples": [
                      "README.md"
                    ]
                  },
                  "type": {
                    "type": "string",
                    "examples": [
                      "file"
                    ]
                  },
                  "content": {
                    "type": "string",
                    "examples": [
                      "\n\n\n# Artifact Name\n\n\n## Table of Contents\n\n* [Overview](#overview)\n* [Installation Prerequisites](#installation-prerequisites)\n* [Requirements](#requirements)\n* [Features](#features)\n* [Future Enhancements](#future-enhancements)\n* [How to Install](#how-to-install)\n* [How to Run](#how-to-run)\n\n## Overview\n\n\n\n\n\n\n\n\n\n\n\n\n_Estimated Run Time_:\n\n## Installation Prerequisites\n\nUsers must satisfy the following pre-requisites:\n\n\n\n* Itential Automation Platform\n  * `^2020.x.x`\n\n## Requirements\n\nThis artifact requires the following:\n\n\n\n\n\n\n## Features\n\nThe main benefits and features of the artifact are outlined below.\n\n\n\n\n\n\n\n\n## Future Enhancements\n\n\n\n\n## How to Install\n\nTo install the artifact:\n\n* Verify you are running a supported version of the Itential Automation Platform (IAP) as listed above in the [Requirements](#requirements) section in order to install the artifact. \n* The artifact can be installed from within App-Admin_Essential. Simply search for the name of your desired artifact and click the install button (as shown below).\n\n\n\n\n\n\n\n\n## How to Run\n\nUse the following to run the artifact:\n\n\n"
                    ]
                  }
                },
                "required": [],
                "$id": "element"
              },
              {
                "title": "index",
                "type": "number",
                "$id": "index"
              },
              {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "name": {
                      "type": "string",
                      "examples": [
                        "README.md"
                      ]
                    },
                    "type": {
                      "type": "string",
                      "examples": [
                        "file"
                      ]
                    },
                    "content": {
                      "type": "string",
                      "examples": [
                        "\n\n\n# Artifact Name\n\n\n## Table of Contents\n\n* [Overview](#overview)\n* [Installation Prerequisites](#installation-prerequisites)\n* [Requirements](#requirements)\n* [Features](#features)\n* [Future Enhancements](#future-enhancements)\n* [How to Install](#how-to-install)\n* [How to Run](#how-to-run)\n\n## Overview\n\n\n\n\n\n\n\n\n\n\n\n\n_Estimated Run Time_:\n\n## Installation Prerequisites\n\nUsers must satisfy the following pre-requisites:\n\n\n\n* Itential Automation Platform\n  * `^2020.x.x`\n\n## Requirements\n\nThis artifact requires the following:\n\n\n\n\n\n\n## Features\n\nThe main benefits and features of the artifact are outlined below.\n\n\n\n\n\n\n\n\n## Future Enhancements\n\n\n\n\n## How to Install\n\nTo install the artifact:\n\n* Verify you are running a supported version of the Itential Automation Platform (IAP) as listed above in the [Requirements](#requirements) section in order to install the artifact. \n* The artifact can be installed from within App-Admin_Essential. Simply search for the name of your desired artifact and click the install button (as shown below).\n\n\n\n\n\n\n\n\n## How to Run\n\nUse the following to run the artifact:\n\n\n"
                      ]
                    }
                  },
                  "required": []
                },
                "$id": "array"
              },
              {
                "$id": "thisArg",
                "type": "object",
                "properties": {},
                "isContext": true,
                "isIndexed": true
              }
            ],
            "outgoing": [
              {
                "title": "return",
                "type": "boolean",
                "$id": "return"
              }
            ],
            "functions": [],
            "name": "notPackageJSON",
            "steps": [
              {
                "id": 2,
                "type": "assign",
                "from": {
                  "location": "incoming",
                  "name": "element",
                  "ptr": "/name"
                },
                "to": {
                  "location": "method",
                  "name": 1,
                  "ptr": "/args/0/value"
                }
              },
              {
                "id": 1,
                "type": "method",
                "library": "Equality",
                "method": "inequality",
                "args": [
                  null,
                  "package.json"
                ],
                "view": {
                  "row": 1,
                  "col": 1
                }
              },
              {
                "id": 3,
                "type": "assign",
                "from": {
                  "location": "method",
                  "name": 1,
                  "ptr": "/return"
                },
                "to": {
                  "location": "outgoing",
                  "name": "return",
                  "ptr": ""
                }
              }
            ],
            "view": {
              "col": 1,
              "row": 5
            },
            "id": "ƒ_query_2",
            "comments": []
          },
          {
            "incoming": [
              {
                "$id": "currentValue",
                "type": [
                  "array",
                  "boolean",
                  "number",
                  "integer",
                  "string",
                  "object",
                  "null"
                ],
                "properties": {
                  "name": {
                    "type": "string",
                    "examples": [
                      "README.md"
                    ]
                  },
                  "type": {
                    "type": "string",
                    "examples": [
                      "file"
                    ]
                  },
                  "content": {
                    "type": "string",
                    "examples": [
                      "\n\n\n# Artifact Name\n\n\n## Table of Contents\n\n* [Overview](#overview)\n* [Installation Prerequisites](#installation-prerequisites)\n* [Requirements](#requirements)\n* [Features](#features)\n* [Future Enhancements](#future-enhancements)\n* [How to Install](#how-to-install)\n* [How to Run](#how-to-run)\n\n## Overview\n\n\n\n\n\n\n\n\n\n\n\n\n_Estimated Run Time_:\n\n## Installation Prerequisites\n\nUsers must satisfy the following pre-requisites:\n\n\n\n* Itential Automation Platform\n  * `^2020.x.x`\n\n## Requirements\n\nThis artifact requires the following:\n\n\n\n\n\n\n## Features\n\nThe main benefits and features of the artifact are outlined below.\n\n\n\n\n\n\n\n\n## Future Enhancements\n\n\n\n\n## How to Install\n\nTo install the artifact:\n\n* Verify you are running a supported version of the Itential Automation Platform (IAP) as listed above in the [Requirements](#requirements) section in order to install the artifact. \n* The artifact can be installed from within App-Admin_Essential. Simply search for the name of your desired artifact and click the install button (as shown below).\n\n\n\n\n\n\n\n\n## How to Run\n\nUse the following to run the artifact:\n\n\n"
                    ]
                  }
                },
                "required": []
              },
              {
                "title": "index",
                "type": "number",
                "$id": "index"
              },
              {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "name": {
                      "type": "string",
                      "examples": [
                        "README.md"
                      ]
                    },
                    "type": {
                      "type": "string",
                      "examples": [
                        "file"
                      ]
                    },
                    "content": {
                      "type": "string",
                      "examples": [
                        "\n\n\n# Artifact Name\n\n\n## Table of Contents\n\n* [Overview](#overview)\n* [Installation Prerequisites](#installation-prerequisites)\n* [Requirements](#requirements)\n* [Features](#features)\n* [Future Enhancements](#future-enhancements)\n* [How to Install](#how-to-install)\n* [How to Run](#how-to-run)\n\n## Overview\n\n\n\n\n\n\n\n\n\n\n\n\n_Estimated Run Time_:\n\n## Installation Prerequisites\n\nUsers must satisfy the following pre-requisites:\n\n\n\n* Itential Automation Platform\n  * `^2020.x.x`\n\n## Requirements\n\nThis artifact requires the following:\n\n\n\n\n\n\n## Features\n\nThe main benefits and features of the artifact are outlined below.\n\n\n\n\n\n\n\n\n## Future Enhancements\n\n\n\n\n## How to Install\n\nTo install the artifact:\n\n* Verify you are running a supported version of the Itential Automation Platform (IAP) as listed above in the [Requirements](#requirements) section in order to install the artifact. \n* The artifact can be installed from within App-Admin_Essential. Simply search for the name of your desired artifact and click the install button (as shown below).\n\n\n\n\n\n\n\n\n## How to Run\n\nUse the following to run the artifact:\n\n\n"
                      ]
                    }
                  },
                  "required": []
                },
                "$id": "array"
              },
              {
                "$id": "thisArg",
                "type": "object",
                "properties": {},
                "isContext": true,
                "isIndexed": true
              }
            ],
            "outgoing": [
              {
                "$id": "newValue",
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "examples": [
                      "README.md"
                    ]
                  },
                  "type": {
                    "type": "string",
                    "examples": [
                      "file"
                    ]
                  },
                  "content": {
                    "type": "string",
                    "examples": [
                      "\n\n\n# Artifact Name\n\n\n## Table of Contents\n\n* [Overview](#overview)\n* [Installation Prerequisites](#installation-prerequisites)\n* [Requirements](#requirements)\n* [Features](#features)\n* [Future Enhancements](#future-enhancements)\n* [How to Install](#how-to-install)\n* [How to Run](#how-to-run)\n\n## Overview\n\n\n\n\n\n\n\n\n\n\n\n\n_Estimated Run Time_:\n\n## Installation Prerequisites\n\nUsers must satisfy the following pre-requisites:\n\n\n\n* Itential Automation Platform\n  * `^2020.x.x`\n\n## Requirements\n\nThis artifact requires the following:\n\n\n\n\n\n\n## Features\n\nThe main benefits and features of the artifact are outlined below.\n\n\n\n\n\n\n\n\n## Future Enhancements\n\n\n\n\n## How to Install\n\nTo install the artifact:\n\n* Verify you are running a supported version of the Itential Automation Platform (IAP) as listed above in the [Requirements](#requirements) section in order to install the artifact. \n* The artifact can be installed from within App-Admin_Essential. Simply search for the name of your desired artifact and click the install button (as shown below).\n\n\n\n\n\n\n\n\n## How to Run\n\nUse the following to run the artifact:\n\n\n"
                    ]
                  }
                },
                "required": []
              }
            ],
            "functions": [
              {
                "incoming": [
                  {
                    "$id": "packageJSON",
                    "type": "object",
                    "properties": {
                      "name": {
                        "type": "string",
                        "examples": [
                          "@itentialopensource/this is a test"
                        ]
                      },
                      "version": {
                        "type": "string",
                        "examples": [
                          "0%2E0%2E1"
                        ]
                      },
                      "description": {
                        "type": "string",
                        "examples": [
                          "k"
                        ]
                      },
                      "scripts": {
                        "type": "object",
                        "properties": {
                          "test": {
                            "type": "string",
                            "examples": [
                              "echo \"Error: no test specified\" && exit 1"
                            ]
                          },
                          "deploy": {
                            "type": "string",
                            "examples": [
                              "echo not needed npm publish --access=public --registry=http://registry%2Enpmjs%2Eorg"
                            ]
                          },
                          "validateSchema": {
                            "type": "string",
                            "examples": [
                              "node test/manifestTester%2Ejs manifest%2Ejson manifest-schema%2Ejson"
                            ]
                          },
                          "validateSchemaLinks": {
                            "type": "string",
                            "examples": [
                              "node test/manifestLinkTester%2Ejs manifest%2Ejson"
                            ]
                          },
                          "generateImageLinks": {
                            "type": "string",
                            "examples": [
                              "node utils/generateImageLinks%2Ejs"
                            ]
                          }
                        },
                        "required": []
                      },
                      "repository": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "examples": [
                              "gitlab"
                            ]
                          },
                          "hostname": {
                            "type": "string",
                            "examples": [
                              "gitlab%2Ecom"
                            ]
                          },
                          "path": {
                            "type": "string",
                            "examples": [
                              "itentialopensource/pre-built-automations"
                            ]
                          }
                        },
                        "required": []
                      },
                      "keywords": {
                        "type": "array",
                        "items": {
                          "type": "string",
                          "examples": [
                            "Itential"
                          ]
                        }
                      },
                      "contributors": {
                        "type": "array",
                        "items": {
                          "type": "string",
                          "examples": [
                            "Itential Artifacts"
                          ]
                        }
                      },
                      "author": {
                        "type": "string",
                        "examples": [
                          "Itential Artifacts"
                        ]
                      },
                      "license": {
                        "type": "string",
                        "examples": [
                          "Apache-2%2E0"
                        ]
                      },
                      "devDependencies": {
                        "type": "object",
                        "properties": {
                          "r2": {
                            "type": "string",
                            "examples": [
                              "^2%2E0%2E1"
                            ]
                          },
                          "ajv": {
                            "type": "string",
                            "examples": [
                              "6%2E10%2E0"
                            ]
                          },
                          "better-ajv-errors": {
                            "type": "string",
                            "examples": [
                              "^0%2E6%2E1"
                            ]
                          },
                          "fs-extra": {
                            "type": "string",
                            "examples": [
                              "^7%2E0%2E1"
                            ]
                          }
                        },
                        "required": []
                      },
                      "IAPDependencies": {
                        "type": "object",
                        "properties": {},
                        "required": []
                      },
                      "IAPCategories": {
                        "type": "array"
                      }
                    },
                    "required": []
                  },
                  {
                    "$id": "packageJSON_copy",
                    "type": "object",
                    "properties": {
                      "version": {
                        "type": "string",
                        "examples": [
                          "0%2E0%2E1"
                        ]
                      },
                      "description": {
                        "type": "string",
                        "examples": [
                          "Default artifact description"
                        ]
                      },
                      "scripts": {
                        "type": "object",
                        "properties": {
                          "test": {
                            "type": "string",
                            "examples": [
                              "echo \"Error: no test specified\" && exit 1"
                            ]
                          },
                          "deploy": {
                            "type": "string",
                            "examples": [
                              "echo not needed npm publish --access=public --registry=http://registry%2Enpmjs%2Eorg"
                            ]
                          },
                          "validateSchema": {
                            "type": "string",
                            "examples": [
                              "node test/manifestTester%2Ejs manifest%2Ejson manifest-schema%2Ejson"
                            ]
                          },
                          "validateSchemaLinks": {
                            "type": "string",
                            "examples": [
                              "node test/manifestLinkTester%2Ejs manifest%2Ejson"
                            ]
                          },
                          "generateImageLinks": {
                            "type": "string",
                            "examples": [
                              "node utils/generateImageLinks%2Ejs"
                            ]
                          }
                        },
                        "required": []
                      },
                      "repository": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "examples": [
                              "gitlab"
                            ]
                          },
                          "hostname": {
                            "type": "string",
                            "examples": [
                              "gitlab%2Ecom"
                            ]
                          },
                          "path": {
                            "type": "string",
                            "examples": [
                              "itentialopensource/pre-built-automations"
                            ]
                          }
                        },
                        "required": []
                      },
                      "keywords": {
                        "type": "array",
                        "items": {
                          "type": "string",
                          "examples": [
                            "Itential"
                          ]
                        }
                      },
                      "contributors": {
                        "type": "array",
                        "items": {
                          "type": "string",
                          "examples": [
                            "Itential Artifacts"
                          ]
                        }
                      },
                      "author": {
                        "type": "string",
                        "examples": [
                          "Itential Artifacts"
                        ]
                      },
                      "license": {
                        "type": "string",
                        "examples": [
                          "Apache-2%2E0"
                        ]
                      },
                      "devDependencies": {
                        "type": "object",
                        "properties": {
                          "r2": {
                            "type": "string",
                            "examples": [
                              "^2%2E0%2E1"
                            ]
                          },
                          "ajv": {
                            "type": "string",
                            "examples": [
                              "6%2E10%2E0"
                            ]
                          },
                          "better-ajv-errors": {
                            "type": "string",
                            "examples": [
                              "^0%2E6%2E1"
                            ]
                          },
                          "fs-extra": {
                            "type": "string",
                            "examples": [
                              "^7%2E0%2E1"
                            ]
                          }
                        },
                        "required": []
                      },
                      "name": {
                        "type": "string",
                        "examples": [
                          "@itentialoperations/new hire on boarding"
                        ]
                      },
                      "IAPDependencies": {
                        "type": "object",
                        "properties": {
                          "@itential/app-automation_catalog": {
                            "type": "string",
                            "examples": [
                              "2%2E6%2E6"
                            ]
                          },
                          "@itential/app-json_forms": {
                            "type": "string",
                            "examples": [
                              "1%2E14%2E10"
                            ]
                          },
                          "@itential/app-workflow_engine": {
                            "type": "string",
                            "examples": [
                              "7%2E14%2E4"
                            ]
                          }
                        },
                        "required": []
                      },
                      "IAPCategories": {
                        "type": "array"
                      }
                    },
                    "required": []
                  }
                ],
                "outgoing": [
                  {
                    "$id": "fixedPackageJSON",
                    "type": "object",
                    "properties": {
                      "name": {
                        "type": "string",
                        "examples": [
                          "@itentialopensource/this is a test"
                        ]
                      },
                      "version": {
                        "type": "string",
                        "examples": [
                          "0%2E0%2E1"
                        ]
                      },
                      "description": {
                        "type": "string",
                        "examples": [
                          "k"
                        ]
                      },
                      "scripts": {
                        "type": "object",
                        "properties": {
                          "test": {
                            "type": "string",
                            "examples": [
                              "echo \"Error: no test specified\" && exit 1"
                            ]
                          },
                          "deploy": {
                            "type": "string",
                            "examples": [
                              "echo not needed npm publish --access=public --registry=http://registry%2Enpmjs%2Eorg"
                            ]
                          },
                          "validateSchema": {
                            "type": "string",
                            "examples": [
                              "node test/manifestTester%2Ejs manifest%2Ejson manifest-schema%2Ejson"
                            ]
                          },
                          "validateSchemaLinks": {
                            "type": "string",
                            "examples": [
                              "node test/manifestLinkTester%2Ejs manifest%2Ejson"
                            ]
                          },
                          "generateImageLinks": {
                            "type": "string",
                            "examples": [
                              "node utils/generateImageLinks%2Ejs"
                            ]
                          }
                        },
                        "required": []
                      },
                      "repository": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "examples": [
                              "gitlab"
                            ]
                          },
                          "hostname": {
                            "type": "string",
                            "examples": [
                              "gitlab%2Ecom"
                            ]
                          },
                          "path": {
                            "type": "string",
                            "examples": [
                              "itentialopensource/pre-built-automations"
                            ]
                          }
                        },
                        "required": []
                      },
                      "keywords": {
                        "type": "array",
                        "items": {
                          "type": "string",
                          "examples": [
                            "Itential"
                          ]
                        }
                      },
                      "contributors": {
                        "type": "array",
                        "items": {
                          "type": "string",
                          "examples": [
                            "Itential Artifacts"
                          ]
                        }
                      },
                      "author": {
                        "type": "string",
                        "examples": [
                          "Itential Artifacts"
                        ]
                      },
                      "license": {
                        "type": "string",
                        "examples": [
                          "Apache-2%2E0"
                        ]
                      },
                      "devDependencies": {
                        "type": "object",
                        "properties": {
                          "r2": {
                            "type": "string",
                            "examples": [
                              "^2%2E0%2E1"
                            ]
                          },
                          "ajv": {
                            "type": "string",
                            "examples": [
                              "6%2E10%2E0"
                            ]
                          },
                          "better-ajv-errors": {
                            "type": "string",
                            "examples": [
                              "^0%2E6%2E1"
                            ]
                          },
                          "fs-extra": {
                            "type": "string",
                            "examples": [
                              "^7%2E0%2E1"
                            ]
                          }
                        },
                        "required": []
                      },
                      "IAPDependencies": {
                        "type": "object",
                        "properties": {},
                        "required": []
                      },
                      "IAPCategories": {
                        "type": "array"
                      }
                    },
                    "required": []
                  }
                ],
                "functions": [
                  {
                    "incoming": [
                      {
                        "type": [
                          "array",
                          "boolean",
                          "number",
                          "integer",
                          "string",
                          "object",
                          "null"
                        ],
                        "$id": "accumulator"
                      },
                      {
                        "type": [
                          "array",
                          "boolean",
                          "number",
                          "integer",
                          "string",
                          "object",
                          "null"
                        ],
                        "$id": "currentValue"
                      },
                      {
                        "title": "index",
                        "type": "number",
                        "$id": "index"
                      },
                      {
                        "type": "array",
                        "$id": "array"
                      },
                      {
                        "$id": "thisArg",
                        "type": "object",
                        "properties": {
                          "0_IAPDependencies": {
                            "type": "object",
                            "properties": {},
                            "required": []
                          }
                        },
                        "isContext": true,
                        "isIndexed": true
                      }
                    ],
                    "outgoing": [
                      {
                        "title": "accumulator",
                        "type": [
                          "array",
                          "boolean",
                          "number",
                          "integer",
                          "string",
                          "object",
                          "null"
                        ],
                        "$id": "accumulator"
                      }
                    ],
                    "functions": [],
                    "name": "setIAPDependancyAsEmpty",
                    "steps": [
                      {
                        "id": 2,
                        "type": "assign",
                        "from": {
                          "location": "incoming",
                          "name": "accumulator",
                          "ptr": ""
                        },
                        "to": {
                          "location": "method",
                          "name": 1,
                          "ptr": "/args/0/value"
                        }
                      },
                      {
                        "id": 3,
                        "type": "assign",
                        "from": {
                          "location": "incoming",
                          "name": "currentValue",
                          "ptr": ""
                        },
                        "to": {
                          "location": "method",
                          "name": 1,
                          "ptr": "/args/1/value"
                        }
                      },
                      {
                        "id": 4,
                        "type": "method",
                        "library": "String",
                        "method": "charAt",
                        "args": [
                          "0",
                          1
                        ],
                        "view": {
                          "row": 2,
                          "col": 1
                        }
                      },
                      {
                        "id": 5,
                        "type": "assign",
                        "from": {
                          "location": "method",
                          "name": 4,
                          "ptr": "/return"
                        },
                        "to": {
                          "location": "method",
                          "name": 1,
                          "ptr": "/args/2/value"
                        }
                      },
                      {
                        "id": 1,
                        "type": "method",
                        "library": "Object",
                        "method": "setProperty",
                        "args": [
                          null,
                          null,
                          null
                        ],
                        "view": {
                          "row": 1,
                          "col": 2
                        }
                      },
                      {
                        "id": 6,
                        "type": "assign",
                        "from": {
                          "location": "method",
                          "name": 1,
                          "ptr": "/return"
                        },
                        "to": {
                          "location": "outgoing",
                          "name": "accumulator",
                          "ptr": ""
                        }
                      }
                    ],
                    "view": {
                      "col": 2,
                      "row": 4
                    },
                    "id": "ƒ_reduce_1",
                    "comments": []
                  }
                ],
                "name": "fixPackageJSON",
                "steps": [
                  {
                    "id": 2,
                    "type": "assign",
                    "from": {
                      "location": "incoming",
                      "name": "packageJSON",
                      "ptr": "/version"
                    },
                    "to": {
                      "location": "outgoing",
                      "name": "fixedPackageJSON",
                      "ptr": "/version"
                    }
                  },
                  {
                    "id": 3,
                    "type": "assign",
                    "from": {
                      "location": "incoming",
                      "name": "packageJSON",
                      "ptr": "/description"
                    },
                    "to": {
                      "location": "outgoing",
                      "name": "fixedPackageJSON",
                      "ptr": "/description"
                    }
                  },
                  {
                    "id": 4,
                    "type": "assign",
                    "from": {
                      "location": "incoming",
                      "name": "packageJSON",
                      "ptr": "/scripts"
                    },
                    "to": {
                      "location": "outgoing",
                      "name": "fixedPackageJSON",
                      "ptr": "/scripts"
                    }
                  },
                  {
                    "id": 5,
                    "type": "assign",
                    "from": {
                      "location": "incoming",
                      "name": "packageJSON",
                      "ptr": "/keywords"
                    },
                    "to": {
                      "location": "outgoing",
                      "name": "fixedPackageJSON",
                      "ptr": "/keywords"
                    }
                  },
                  {
                    "id": 6,
                    "type": "assign",
                    "from": {
                      "location": "incoming",
                      "name": "packageJSON",
                      "ptr": "/contributors"
                    },
                    "to": {
                      "location": "outgoing",
                      "name": "fixedPackageJSON",
                      "ptr": "/contributors"
                    }
                  },
                  {
                    "id": 7,
                    "type": "assign",
                    "from": {
                      "location": "incoming",
                      "name": "packageJSON",
                      "ptr": "/author"
                    },
                    "to": {
                      "location": "outgoing",
                      "name": "fixedPackageJSON",
                      "ptr": "/author"
                    }
                  },
                  {
                    "id": 8,
                    "type": "assign",
                    "from": {
                      "location": "incoming",
                      "name": "packageJSON",
                      "ptr": "/license"
                    },
                    "to": {
                      "location": "outgoing",
                      "name": "fixedPackageJSON",
                      "ptr": "/license"
                    }
                  },
                  {
                    "id": 9,
                    "type": "assign",
                    "from": {
                      "location": "incoming",
                      "name": "packageJSON",
                      "ptr": "/devDependencies"
                    },
                    "to": {
                      "location": "outgoing",
                      "name": "fixedPackageJSON",
                      "ptr": "/devDependencies"
                    }
                  },
                  {
                    "id": 10,
                    "type": "assign",
                    "from": {
                      "location": "incoming",
                      "name": "packageJSON",
                      "ptr": "/IAPCategories"
                    },
                    "to": {
                      "location": "outgoing",
                      "name": "fixedPackageJSON",
                      "ptr": "/IAPCategories"
                    }
                  },
                  {
                    "id": 15,
                    "type": "assign",
                    "from": {
                      "location": "incoming",
                      "name": "packageJSON",
                      "ptr": "/repository/type"
                    },
                    "to": {
                      "location": "outgoing",
                      "name": "fixedPackageJSON",
                      "ptr": "/repository/type"
                    }
                  },
                  {
                    "id": 18,
                    "type": "assign",
                    "from": {
                      "location": "incoming",
                      "name": "packageJSON",
                      "ptr": "/IAPDependencies"
                    },
                    "to": {
                      "location": "method",
                      "name": 17,
                      "ptr": "/args/0/value"
                    }
                  },
                  {
                    "id": 20,
                    "type": "declaration",
                    "library": "Object",
                    "method": "new Object",
                    "args": [
                      "{}"
                    ],
                    "view": {
                      "row": 4,
                      "col": 1
                    }
                  },
                  {
                    "id": 22,
                    "type": "assign",
                    "from": {
                      "location": "incoming",
                      "name": "packageJSON",
                      "ptr": "/IAPDependencies"
                    },
                    "to": {
                      "location": "method",
                      "name": 16,
                      "ptr": "/args/3/value"
                    }
                  },
                  {
                    "id": 30,
                    "type": "declaration",
                    "library": "RegExp",
                    "method": "new RegExp",
                    "args": [
                      "\\s",
                      "g"
                    ],
                    "view": {
                      "row": 1,
                      "col": 1
                    }
                  },
                  {
                    "id": 34,
                    "type": "assign",
                    "from": {
                      "location": "incoming",
                      "name": "packageJSON",
                      "ptr": "/name"
                    },
                    "to": {
                      "location": "method",
                      "name": 27,
                      "ptr": "/args/0/value"
                    }
                  },
                  {
                    "id": 17,
                    "type": "method",
                    "library": "Object",
                    "method": "keys",
                    "args": [
                      null
                    ],
                    "view": {
                      "row": 3,
                      "col": 1
                    }
                  },
                  {
                    "id": 21,
                    "type": "assign",
                    "from": {
                      "location": "declaration",
                      "name": 20,
                      "ptr": "/return"
                    },
                    "to": {
                      "location": "method",
                      "name": 16,
                      "ptr": "/args/2/value"
                    }
                  },
                  {
                    "id": 31,
                    "type": "assign",
                    "from": {
                      "location": "declaration",
                      "name": 30,
                      "ptr": "/return"
                    },
                    "to": {
                      "location": "method",
                      "name": 27,
                      "ptr": "/args/1/value"
                    }
                  },
                  {
                    "id": 19,
                    "type": "assign",
                    "from": {
                      "location": "method",
                      "name": 17,
                      "ptr": "/return"
                    },
                    "to": {
                      "location": "method",
                      "name": 16,
                      "ptr": "/args/0/value"
                    }
                  },
                  {
                    "id": 27,
                    "type": "method",
                    "library": "String",
                    "method": "replace",
                    "args": [
                      null,
                      null,
                      "-"
                    ],
                    "view": {
                      "row": 1,
                      "col": 2
                    }
                  },
                  {
                    "id": 33,
                    "type": "assign",
                    "from": {
                      "location": "method",
                      "name": 27,
                      "ptr": "/return"
                    },
                    "to": {
                      "location": "outgoing",
                      "name": "fixedPackageJSON",
                      "ptr": "/name"
                    }
                  },
                  {
                    "id": 16,
                    "type": "method",
                    "library": "Array",
                    "method": "reduce",
                    "args": [
                      null,
                      "ƒ_reduce_1",
                      null,
                      null
                    ],
                    "view": {
                      "row": 3,
                      "col": 2
                    }
                  },
                  {
                    "id": 26,
                    "type": "assign",
                    "from": {
                      "location": "method",
                      "name": 16,
                      "ptr": "/return"
                    },
                    "to": {
                      "location": "outgoing",
                      "name": "fixedPackageJSON",
                      "ptr": "/IAPDependencies"
                    }
                  },
                  {
                    "id": 35,
                    "type": "assign",
                    "from": {
                      "location": "incoming",
                      "name": "packageJSON",
                      "ptr": "/repository/hostname"
                    },
                    "to": {
                      "location": "outgoing",
                      "name": "fixedPackageJSON",
                      "ptr": "/repository/hostname"
                    }
                  },
                  {
                    "id": 36,
                    "type": "assign",
                    "from": {
                      "location": "incoming",
                      "name": "packageJSON",
                      "ptr": "/repository/path"
                    },
                    "to": {
                      "location": "outgoing",
                      "name": "fixedPackageJSON",
                      "ptr": "/repository/path"
                    }
                  }
                ],
                "view": {
                  "col": 2,
                  "row": 5
                },
                "id": "userFunc_1",
                "comments": []
              }
            ],
            "name": "editPackageJSON",
            "steps": [
              {
                "id": 8,
                "type": "assign",
                "from": {
                  "location": "incoming",
                  "name": "currentValue",
                  "ptr": ""
                },
                "to": {
                  "location": "method",
                  "name": 5,
                  "ptr": "/args/0/value"
                }
              },
              {
                "id": 9,
                "type": "assign",
                "from": {
                  "location": "incoming",
                  "name": "currentValue",
                  "ptr": ""
                },
                "to": {
                  "location": "method",
                  "name": 6,
                  "ptr": "/args/0/value"
                }
              },
              {
                "id": 10,
                "type": "assign",
                "from": {
                  "location": "incoming",
                  "name": "currentValue",
                  "ptr": ""
                },
                "to": {
                  "location": "method",
                  "name": 7,
                  "ptr": "/args/0/value"
                }
              },
              {
                "id": 19,
                "type": "declaration",
                "library": "Number",
                "method": "new Number",
                "args": [
                  "2"
                ],
                "view": {
                  "row": 3,
                  "col": 3
                }
              },
              {
                "id": 5,
                "type": "method",
                "library": "Object",
                "method": "getProperty",
                "args": [
                  null,
                  "name"
                ],
                "view": {
                  "row": 1,
                  "col": 1
                }
              },
              {
                "id": 6,
                "type": "method",
                "library": "Object",
                "method": "getProperty",
                "args": [
                  null,
                  "type"
                ],
                "view": {
                  "row": 2,
                  "col": 1
                }
              },
              {
                "id": 7,
                "type": "method",
                "library": "Object",
                "method": "getProperty",
                "args": [
                  null,
                  "content"
                ],
                "view": {
                  "row": 3,
                  "col": 1
                }
              },
              {
                "id": 20,
                "type": "assign",
                "from": {
                  "location": "declaration",
                  "name": 19,
                  "ptr": "/return"
                },
                "to": {
                  "location": "method",
                  "name": 16,
                  "ptr": "/args/2/value"
                }
              },
              {
                "id": 11,
                "type": "assign",
                "from": {
                  "location": "method",
                  "name": 7,
                  "ptr": "/return"
                },
                "to": {
                  "location": "method",
                  "name": 1,
                  "ptr": "/args/0/value"
                }
              },
              {
                "id": 12,
                "type": "assign",
                "from": {
                  "location": "method",
                  "name": 6,
                  "ptr": "/return"
                },
                "to": {
                  "location": "outgoing",
                  "name": "newValue",
                  "ptr": "/type"
                }
              },
              {
                "id": 13,
                "type": "assign",
                "from": {
                  "location": "method",
                  "name": 5,
                  "ptr": "/return"
                },
                "to": {
                  "location": "outgoing",
                  "name": "newValue",
                  "ptr": "/name"
                }
              },
              {
                "id": 1,
                "type": "method",
                "library": "JSON",
                "method": "parse",
                "args": [
                  null,
                  null
                ],
                "view": {
                  "row": 3,
                  "col": 2
                }
              },
              {
                "id": 15,
                "type": "assign",
                "from": {
                  "location": "method",
                  "name": 1,
                  "ptr": "/return"
                },
                "to": {
                  "location": "function",
                  "name": 14,
                  "ptr": "/args/0/value"
                }
              },
              {
                "id": 14,
                "type": "function",
                "function": "userFunc_1",
                "args": [
                  "",
                  ""
                ],
                "view": {
                  "row": 2,
                  "col": 3
                }
              },
              {
                "id": 17,
                "type": "assign",
                "from": {
                  "location": "function",
                  "name": 14,
                  "ptr": "/return/fixedPackageJSON"
                },
                "to": {
                  "location": "method",
                  "name": 16,
                  "ptr": "/args/0/value"
                }
              },
              {
                "id": 16,
                "type": "method",
                "library": "JSON",
                "method": "stringify",
                "args": [
                  null,
                  null,
                  null
                ],
                "view": {
                  "row": 2,
                  "col": 4
                }
              },
              {
                "id": 18,
                "type": "assign",
                "from": {
                  "location": "method",
                  "name": 16,
                  "ptr": "/return"
                },
                "to": {
                  "location": "outgoing",
                  "name": "newValue",
                  "ptr": "/content"
                }
              }
            ],
            "view": {
              "col": 4,
              "row": 5
            },
            "id": "ƒ_map_1",
            "comments": []
          }
        ],
        "comments": [],
        "view": {
          "col": 3,
          "row": 5
        },
        "created": "2021-12-01T17:55:24.877Z",
        "createdBy": {
          "_id": "6180307394366d356e0a4259",
          "provenance": "Local AAA",
          "username": "admin@pronghorn"
        },
        "lastUpdated": "2022-01-04T16:37:43.866Z",
        "lastUpdatedBy": {
          "_id": "6180307394366d356e0a4259",
          "provenance": "Local AAA",
          "username": "admin@pronghorn"
        },
        "version": "3.17.7-2021.1.7",
        "tags": []
      }
    },
    {
      "type": "transformation",
      "data": {
        "_id": "5f0c9dae10b81c2da7cf6023",
        "name": "toRepoName",
        "incoming": [
          {
            "$id": "name",
            "type": "string",
            "examples": [
              "Artifact Wizard"
            ]
          }
        ],
        "outgoing": [
          {
            "$id": "repoName",
            "type": "string",
            "examples": [
              "artifact-wizard"
            ]
          }
        ],
        "steps": [
          {
            "id": 3,
            "type": "assign",
            "from": {
              "location": "incoming",
              "name": "name",
              "ptr": ""
            },
            "to": {
              "location": "method",
              "name": 1,
              "ptr": "/args/0/value"
            }
          },
          {
            "id": 6,
            "type": "declaration",
            "library": "RegExp",
            "method": "new RegExp",
            "args": [
              "\\s",
              "gm"
            ],
            "view": {
              "row": 2,
              "col": 1
            }
          },
          {
            "id": 1,
            "type": "method",
            "library": "String",
            "method": "toLowerCase",
            "args": [
              null
            ],
            "view": {
              "row": 1,
              "col": 1
            }
          },
          {
            "id": 7,
            "type": "assign",
            "from": {
              "location": "declaration",
              "name": 6,
              "ptr": "/return"
            },
            "to": {
              "location": "method",
              "name": 2,
              "ptr": "/args/1/value"
            }
          },
          {
            "id": 4,
            "type": "assign",
            "from": {
              "location": "method",
              "name": 1,
              "ptr": "/return"
            },
            "to": {
              "location": "method",
              "name": 2,
              "ptr": "/args/0/value"
            }
          },
          {
            "id": 2,
            "type": "method",
            "library": "String",
            "method": "replace",
            "args": [
              null,
              null,
              "-"
            ],
            "view": {
              "row": 1,
              "col": 2
            }
          },
          {
            "id": 5,
            "type": "assign",
            "from": {
              "location": "method",
              "name": 2,
              "ptr": "/return"
            },
            "to": {
              "location": "outgoing",
              "name": "repoName",
              "ptr": ""
            }
          }
        ],
        "functions": [],
        "view": {
          "col": 2,
          "row": 8
        },
        "created": "2020-09-21T22:39:50.636Z",
        "createdBy": {
          "_id": "618a8bc42ff2ea5323163fef",
          "provenance": "Itential AAA LDAP",
          "username": "itential-artifacts"
        },
        "lastUpdated": "2021-11-09T14:55:00.923Z",
        "lastUpdatedBy": {
          "_id": "6180307394366d356e0a4259",
          "provenance": "Local AAA",
          "username": "admin@pronghorn"
        },
        "version": "3.13.0-2020.2.6",
        "tags": []
      }
    },
    {
      "type": "transformation",
      "data": {
        "_id": "60026031e30efd085ffcfb57",
        "name": "changeScopePackageJson",
        "description": "",
        "incoming": [
          {
            "$id": "scope",
            "type": "string"
          },
          {
            "$id": "packageJson",
            "type": "object",
            "properties": {
              "name": {
                "type": "string",
                "examples": [
                  "@random/artifact-template"
                ]
              },
              "version": {
                "type": "string",
                "examples": [
                  "0.0.6"
                ]
              },
              "description": {
                "type": "string",
                "examples": [
                  "Template for creating new artifacts"
                ]
              },
              "scripts": {
                "type": "object",
                "properties": {
                  "test": {
                    "type": "string",
                    "examples": [
                      "echo \"Error: no test specified\" && exit 1"
                    ]
                  },
                  "deploy": {
                    "type": "string",
                    "examples": [
                      "echo not needed npm publish --access=public --registry=http://registry.npmjs.org"
                    ]
                  },
                  "validateSchema": {
                    "type": "string",
                    "examples": [
                      "node test/manifestTester.js manifest.json manifest-schema.json"
                    ]
                  },
                  "validateSchemaLinks": {
                    "type": "string",
                    "examples": [
                      "node test/manifestLinkTester.js manifest.json"
                    ]
                  },
                  "generateImageLinks": {
                    "type": "string",
                    "examples": [
                      "node utils/generateImageLinks.js"
                    ]
                  }
                },
                "required": []
              },
              "repository": {
                "type": "object",
                "properties": {
                  "type": {
                    "type": "string",
                    "examples": [
                      "git"
                    ]
                  },
                  "url": {
                    "type": "string",
                    "examples": [
                      "https://gitlab.com/itentialopensource/pre-built-automations/artifact-template.git"
                    ]
                  }
                },
                "required": []
              },
              "keywords": {
                "type": "array",
                "items": {
                  "type": "string",
                  "examples": [
                    "Itential"
                  ]
                }
              },
              "contributors": {
                "type": "array",
                "items": {
                  "type": "string",
                  "examples": [
                    "Itential Artifacts"
                  ]
                }
              },
              "author": {
                "type": "string",
                "examples": [
                  "Itential Artifacts"
                ]
              },
              "license": {
                "type": "string",
                "examples": [
                  "Apache-2.0"
                ]
              },
              "devDependencies": {
                "type": "object",
                "properties": {
                  "r2": {
                    "type": "string",
                    "examples": [
                      "^2.0.1"
                    ]
                  },
                  "ajv": {
                    "type": "string",
                    "examples": [
                      "6.10.0"
                    ]
                  },
                  "better-ajv-errors": {
                    "type": "string",
                    "examples": [
                      "^0.6.1"
                    ]
                  },
                  "fs-extra": {
                    "type": "string",
                    "examples": [
                      "^7.0.1"
                    ]
                  }
                },
                "required": []
              }
            },
            "required": []
          }
        ],
        "outgoing": [
          {
            "$id": "packageJson",
            "type": "object",
            "properties": {
              "name": {
                "type": "string",
                "examples": [
                  "@random/artifact-template"
                ]
              },
              "version": {
                "type": "string",
                "examples": [
                  "0.0.6"
                ]
              },
              "description": {
                "type": "string",
                "examples": [
                  "Template for creating new artifacts"
                ]
              },
              "scripts": {
                "type": "object",
                "properties": {
                  "test": {
                    "type": "string",
                    "examples": [
                      "echo \"Error: no test specified\" && exit 1"
                    ]
                  },
                  "deploy": {
                    "type": "string",
                    "examples": [
                      "echo not needed npm publish --access=public --registry=http://registry.npmjs.org"
                    ]
                  },
                  "validateSchema": {
                    "type": "string",
                    "examples": [
                      "node test/manifestTester.js manifest.json manifest-schema.json"
                    ]
                  },
                  "validateSchemaLinks": {
                    "type": "string",
                    "examples": [
                      "node test/manifestLinkTester.js manifest.json"
                    ]
                  },
                  "generateImageLinks": {
                    "type": "string",
                    "examples": [
                      "node utils/generateImageLinks.js"
                    ]
                  }
                },
                "required": []
              },
              "repository": {
                "type": "object",
                "properties": {
                  "type": {
                    "type": "string",
                    "examples": [
                      "git"
                    ]
                  },
                  "url": {
                    "type": "string",
                    "examples": [
                      "https://gitlab.com/itentialopensource/pre-built-automations/artifact-template.git"
                    ]
                  }
                },
                "required": []
              },
              "keywords": {
                "type": "array",
                "items": {
                  "type": "string",
                  "examples": [
                    "Itential"
                  ]
                }
              },
              "contributors": {
                "type": "array",
                "items": {
                  "type": "string",
                  "examples": [
                    "Itential Artifacts"
                  ]
                }
              },
              "author": {
                "type": "string",
                "examples": [
                  "Itential Artifacts"
                ]
              },
              "license": {
                "type": "string",
                "examples": [
                  "Apache-2.0"
                ]
              },
              "devDependencies": {
                "type": "object",
                "properties": {
                  "r2": {
                    "type": "string",
                    "examples": [
                      "^2.0.1"
                    ]
                  },
                  "ajv": {
                    "type": "string",
                    "examples": [
                      "6.10.0"
                    ]
                  },
                  "better-ajv-errors": {
                    "type": "string",
                    "examples": [
                      "^0.6.1"
                    ]
                  },
                  "fs-extra": {
                    "type": "string",
                    "examples": [
                      "^7.0.1"
                    ]
                  }
                },
                "required": []
              }
            },
            "required": []
          }
        ],
        "steps": [
          {
            "id": 2,
            "type": "assign",
            "from": {
              "location": "incoming",
              "name": "scope",
              "ptr": ""
            },
            "to": {
              "location": "function",
              "name": 1,
              "ptr": "/args/0/value"
            }
          },
          {
            "id": 3,
            "type": "assign",
            "from": {
              "location": "incoming",
              "name": "packageJson",
              "ptr": "/name"
            },
            "to": {
              "location": "function",
              "name": 1,
              "ptr": "/args/1/value"
            }
          },
          {
            "id": 5,
            "type": "assign",
            "from": {
              "location": "incoming",
              "name": "packageJson",
              "ptr": ""
            },
            "to": {
              "location": "method",
              "name": 4,
              "ptr": "/args/0/value"
            }
          },
          {
            "id": 4,
            "type": "method",
            "library": "Object",
            "method": "deleteProperty",
            "args": [
              null,
              "name"
            ],
            "view": {
              "row": 2,
              "col": 1
            }
          },
          {
            "id": 1,
            "type": "function",
            "function": "getNewScopeURL",
            "args": [
              "",
              ""
            ],
            "view": {
              "row": 1,
              "col": 1
            }
          },
          {
            "id": 7,
            "type": "assign",
            "from": {
              "location": "method",
              "name": 4,
              "ptr": "/return"
            },
            "to": {
              "location": "method",
              "name": 6,
              "ptr": "/args/0/value"
            }
          },
          {
            "id": 8,
            "type": "assign",
            "from": {
              "location": "function",
              "name": 1,
              "ptr": "/return/newScopeUrl"
            },
            "to": {
              "location": "method",
              "name": 6,
              "ptr": "/args/2/value"
            }
          },
          {
            "id": 6,
            "type": "method",
            "library": "Object",
            "method": "setProperty",
            "args": [
              null,
              "name",
              null
            ],
            "view": {
              "row": 2,
              "col": 2
            }
          },
          {
            "id": 9,
            "type": "assign",
            "from": {
              "location": "method",
              "name": 6,
              "ptr": "/return"
            },
            "to": {
              "location": "outgoing",
              "name": "packageJson",
              "ptr": ""
            }
          }
        ],
        "functions": [
          {
            "incoming": [
              {
                "$id": "newScope",
                "type": "string"
              },
              {
                "$id": "oldScopeUrl",
                "type": "string"
              }
            ],
            "outgoing": [
              {
                "$id": "newScopeUrl",
                "type": "string"
              }
            ],
            "functions": [],
            "name": "getNewScopeURL",
            "steps": [
              {
                "id": 4,
                "type": "assign",
                "from": {
                  "location": "incoming",
                  "name": "oldScopeUrl",
                  "ptr": ""
                },
                "to": {
                  "location": "method",
                  "name": 3,
                  "ptr": "/args/0/value"
                }
              },
              {
                "id": 11,
                "type": "assign",
                "from": {
                  "location": "incoming",
                  "name": "newScope",
                  "ptr": ""
                },
                "to": {
                  "location": "method",
                  "name": 7,
                  "ptr": "/args/0/value"
                }
              },
              {
                "id": 3,
                "type": "method",
                "library": "String",
                "method": "split",
                "args": [
                  null,
                  "/",
                  null
                ],
                "view": {
                  "row": 2,
                  "col": 1
                }
              },
              {
                "id": 6,
                "type": "assign",
                "from": {
                  "location": "method",
                  "name": 3,
                  "ptr": "/return"
                },
                "to": {
                  "location": "method",
                  "name": 5,
                  "ptr": "/args/0/value"
                }
              },
              {
                "id": 5,
                "type": "method",
                "library": "Array",
                "method": "getIndex",
                "args": [
                  null,
                  1
                ],
                "view": {
                  "row": 2,
                  "col": 2
                }
              },
              {
                "id": 9,
                "type": "assign",
                "from": {
                  "location": "method",
                  "name": 5,
                  "ptr": "/return"
                },
                "to": {
                  "location": "method",
                  "name": 7,
                  "ptr": "/args/2/value"
                }
              },
              {
                "id": 7,
                "type": "method",
                "library": "String",
                "method": "concat",
                "args": [
                  null,
                  "/",
                  null
                ],
                "view": {
                  "row": 1,
                  "col": 2
                }
              },
              {
                "id": 10,
                "type": "assign",
                "from": {
                  "location": "method",
                  "name": 7,
                  "ptr": "/return"
                },
                "to": {
                  "location": "outgoing",
                  "name": "newScopeUrl",
                  "ptr": ""
                }
              }
            ],
            "view": {
              "col": 3,
              "row": 4
            },
            "id": "getNewScopeURL",
            "comments": []
          }
        ],
        "view": {
          "col": 3,
          "row": 4
        },
        "created": "2021-01-16T03:40:33.041Z",
        "createdBy": {
          "_id": "6180307394366d356e0a4259",
          "provenance": "Local AAA",
          "username": "admin@pronghorn"
        },
        "lastUpdated": "2021-11-09T14:55:00.934Z",
        "lastUpdatedBy": {
          "_id": "6180307394366d356e0a4259",
          "provenance": "Local AAA",
          "username": "admin@pronghorn"
        },
        "version": "3.13.0-2020.2.6",
        "tags": []
      }
    }
  ],
  "readme": "# Artifact Wizard\n\n## Table of Contents\n\n- [Overview](#overview)\n- [What is Artifact Wizard](#what-is-artifact-wizard)\n  - [Create Gitlab Repository](#Create-Gitlab-Repository)\n  - [Install into Admin Essentials and Download](#Install-into-Admin-Essentials-and-Download)\n  - [Zero Touch](#Zero-Touch)\n- [Requirements](#requirements)\n- [How to Install](#how-to-install)\n- [Supported Components](#supported-components)\n- [How To Contribute](#how-to-contribute)\n  - [Creating A New Artifact](#creating-a-new-artifact)\n- [Additional Information](#additional-information)\n\n## Overview\n\nItential is very thankful that you are willing to contribute! We welcome the awesome workflows and use cases you have built to grow our library of pre-built automations and to make them available to anyone who might need them.\n\nThis pre-built includes both the Artifact Wizard automation catalog and the Shallow Remove automation catalog. The Shallow Remove AC focuses on wiping an installed pre-built from Admin-Essentials without removing its components, while the Artifact Wizard AC focuses on pre-built export. More information can be found in the [What is Artifact Wizard section](#what-is-artifact-wizard) \n\n>**Note**: The terms `Artifact` and `Pre-built` are synonyms.\n\n## What is Artifact Wizard\n\nThe Artifact Wizard pre-built is composed of two automation catalogs to help you create and contribute pre-builts: the Artifact Wizard automation catalog and the Shallow Remove automation catalog. Artifact Wizard allows to create new bundles (shown as installed prebuilt in admin essentials) from pre-defined entrypoint list (Automation Catalog(s) and/or Workflow(s)), after performing discovery, Artifact Wizard will display the full list of components in which then can be downloaded or promote (contributed) to Itential Open Source project .\nIn case of wanting to remove an installed artifact (in Admin Essentials) without removing its components (workflows, templates, forms, etc.) you may use the shallow remove functionality. Navigate to Automation Catalog and start the Shallow Remove Artifact agenda.\n\n<!-- ![options](https://gitlab.com/itentialopensource/pre-built-automations/artifact-wizard/-/raw/release/2021.1/images/options.png) -->\n<table><tr><td>\n<img src=\"https://gitlab.com/itentialopensource/pre-built-automations/artifact-wizard/-/raw/release/2021.1/images/options.png\" alt=\"options\" width=\"400px\">\n</td></tr></table>\n\n\n### Create Gitlab Repository\n\nTo make contributions easy, Itential has included an option to create a Gitlab Repository for your artifact. In summary, when you run the Artifact Wizard from our **Automation Catalog** app, you will need to select the **Create Gitlab Repository** checkbox as well as the Automation Catalog or Workflow item you want to contribute. As long as your Automation Catalog item has a valid form and workflow attached, we can discover all the other objects (Command Templates, Forms, Child Workflows, Transformations, etc.) and dependencies that are needed to successfully run your automation. After you confirm that Itential has discovered all the components you want to contribute, Artifact Wizard will prompt you to provide a category, description, README, license information, and keywords. Then Artifact Wizard will bundle your automation, push it to our staging folder in GitLab, and provide you a link to the newly created repository.\n\nAll the components you should provide are described below.\n\n#### Files\n\nAll files you want to contribute (workflows, forms, templates, etc.) should follow this naming schema: `<Artifact Name> <title/use of file>`.\n\nExamples:\n\n- `L2VPN create form`\n- `L3VPN create form`\n- `Banner-Management IOSXR subflow`\n- `Banner-Management Pre-check`\n\n#### Workflows\n\nSince workflows are a central part of any Itential automation, we want to keep them easy to read and understand. Here are a couple of guidelines to follow:\n\n- The main workflow should provide a high level view of what the entire artifact is doing. All functionality must be put into child workflows. Ideally a main workflow consists only of a couple of child workflow tasks and stub tasks. A 20 task maximum limit for main workflows will be enforced.\n- Only use IAP tasks that are shipped with our bundles as well as essential tasks from open source adapters. For example, the Meraki SDWAN artifact needs tasks from the Meraki adapter, but tasks from a ServiceNow or Slack adapter should be replaced by the `stub` task, which should be renamed to explain the stubbed action. Ansible modules, scripts or roles can only be used starting with IAP 2020.1.\n- Rename all titles for tasks according to what they do in your workflow. Use \"Query device name\" rather than \"Query\", or \"Apply new interface config\" rather than \"apply template\".\n- Choose a task layout that helps other people understand the flow of your automation.\n- Try to keep the happy path on a straight line from left to right, add error handling at the bottom, and loops at the top.\n- When using eval tasks, both success and failure transitions should be drawn at a 45 degree angle; the success transition should point up, the failure transition should point down.\n- Do not mix NSO and Ansible tasks in the same workflow! It will break for customers with only one of the adapters. Instead, use child workflows for each integration.\n- Provide a description for each task. Just like commenting your code, this is very helpful to understand your automation.\n\n#### Name\n\nProvide a short and descriptive name of what your artifact is used for.\n\nExamples:\n\n- `Banner Management`\n- `Device Health Check`\n- `Cisco IOS Upgrade`\n\n#### Categories\n\nPre-built automations are tracked in different categories. Here is a list of all categories:\n\n- Authentication\n- Cloud\n- Controller / Orchestration\n- DevOps\n- NetOps\n- Inventory\n- ITSM / Testing\n- Notification / Messaging\n- Persistence\n- SD-WAN\n- Security\n- Telemetry / Analytics\n- Utilities\n\nBe sure to select the category that fits your contribution. If your pre-built covers multiple categories, you can select additional ones. For examples on which artifact should be in which category, refer to the [Itential pre-built automations page](https://developer.itential.io/pre-built-automations/).\n\n#### Description\n\nThis is a description of the pre-built you will contribute, as shown in the project/repo in GitLab, as well as in the preview of an pre-built within Admin Essentials. Please describe the use case that your pre-built is solving and why people should be excited about it. Your description not exceed 200 characters.\n\nExample:\n\n>`Manage network banners across multiple device types and execute automations against Ansible managed network devices.`\n\n#### README File\n\nPlease provide a comprehensive README file in markdown format, that includes:\n\n- Overview of the use case\n- Key features/benefits\n- Pre-requisites\n- How to install the pre-built\n- How to run this pre-built\n  - Which form inputs are necessary?\n  - Are there stubbed tasks that can be replaced?\n  - What is the expected output?\n\nExample:\n\n[Itential pre-built automations - Service Provisioning](https://gitlab.com/itentialopensource/pre-built-automations/service-provisioning)\n\n#### License File\n\nIf you want to provide a specific license for your contribution, you can do so here. If you leave this field blank, [Apache License Version 2](http://www.apache.org/licenses/LICENSE-2.0) will be automatically used.\n\n#### Keywords\n\nPlease provide keywords related to your pre-built so that users can find it.\n\nExamples:\n\n`Configuration Management`, `Policy`, `Compliance`, `Audit`, `Device Onboarding`\n\n>**Note**: At least one keyword is required.\n\n### Install into Admin Essentials and Download\n\nThis feature allows you to create a pre-built that will be imported into admin essentials. Following the same methodology as [Create Gitlab Repository](#create-gitlab-repository), you will select either an automation, workflow, or transformation to use as a base, then create the necessary metadata for the pre-built. The automation catalog will then import the necessary components into your Admin Essentials app and create a link for you to download a resulting artifact.json file. This file can be used to import the pre-built into another IAP environment via its Admin Essentials import functionality.\n\n### Zero Touch\n\nThis feature is supplimentary to the **Create Gitlab Repository** and **Install into Admin Essentials and Download** features. When selected with one of the other options, it allows the automation catalogs to act without manual tasks. This means you will only have to select the automation catalog, workflow, or transformation in the initial form stage and the remaining input information will be stubbed out. This is especially useful if you would like to run the Artifact Workflow wizard as a child job in another workflow.\n\n## Requirements\n\nThe following is required to run Artifact Wizard, and is compatible with the following versions:\n\n- Itential Automation Platform\n  - `^2020.2.x`\n- App-Artifacts\n  - `^6.0.x`\n\n## How to Install\n\nTo install Artifact Wizard, verify you are running a supported version of Itential Automation Platform (IAP) as listed above in the [Requirements](#requirements) section. If you do not currently have App-Artifacts installed as a service on your node, the `.tgz` file or \"tarball\" can be obtained from the [Nexus repository](https://registry.aws.itential.com/#browse/browse:app-prebuilt_automations). Please refer to the instructions included in the App-Artifacts README to install it.\n\nArtifact Wizard can be installed from within Admin Essentials. Simply search for `artifact-wizard` and click the **Install** button as shown below.\n\n<!-- ![install](https://gitlab.com/itentialopensource/pre-built-automations/artifact-wizard/-/raw/release/2021.1/images/install.png) -->\n<table><tr><td>\n<img src=\"https://gitlab.com/itentialopensource/pre-built-automations/artifact-wizard/-/raw/release/2021.1/images/install.png\" alt=\"install\" width=\"800px\">\n</td></tr></table>\n\nAlternatively, you may download the `artifact.json` file, and import it through admin essentials app.\n\n## Supported Components\n\nThe Itential Automation Platform components that Artifact Wizard can currently consume include:\n\n- Automation Catalog items\n- Form Builder Forms\n- JSON-Forms\n- Mop-Templates\n- Mop-Analytic Templates\n- Workflows\n- Transformations\n- Jinja2 Templates\n- TextFSM Templates\n\n## How To Contribute\n\nArtifact Wizard can be launched from **Automation Catalog**, and the jobs must be run as an admin user. To begin, click the **Run** button.\n\n<!-- ![automation catalog](https://gitlab.com/itentialopensource/pre-built-automations/artifact-wizard/-/raw/release/2021.1/images/ac.png) -->\n<table><tr><td>\n<img src=\"https://gitlab.com/itentialopensource/pre-built-automations/artifact-wizard/-/raw/release/2021.1/images/ac.png\" alt=\"automation catalog\" width=\"400px\">\n</td></tr></table>\n\n### Creating A New Artifact\n\nTo create a new artifact, you must supply a name and an entry point for the automation.\n\n<!-- ![create new artifact](https://gitlab.com/itentialopensource/pre-built-automations/artifact-wizard/-/raw/release/2021.1/images/run_new.png) -->\n<table><tr><td>\n<img src=\"https://gitlab.com/itentialopensource/pre-built-automations/artifact-wizard/-/raw/release/2021.1/images/run_new.png\" alt=\"create new artifact\" width=\"600px\">\n</td></tr></table>\n\nIf desired, one can also specify pre-built scope of the pre-built from its default value - @itentialopensource. \nPre-builts must have a scope specified. \nPre-builts' scope will take affect in admin-essentials display once installed.\n\nIt is important to remember that the entry point to the bundle for the Artifact Wizard automation Catalog _must_ be an Automation Catalog(s) and/or Workflow item(s). The item(s) should supply both a workflow and a form as an entry point for the artifact. Any job variables required for the workflow to run should be supplied by the accompanying form, and will be accessible to the workflow via the `formData` object.\n\nAfter you click the **Run** button, Artifact Wizard will discover all dependencies required by the workflow selected in the Automation Catalog item, as well as version information for each IAP application required to install the bundled artifact. The results of the discovery will be displayed for you to confirm (when not running in Zero Touch mode).\n\n<!-- ![discovery](https://gitlab.com/itentialopensource/pre-built-automations/artifact-wizard/-/raw/release/2021.1/images/discovery.png) -->\n<table><tr><td>\n<img src=\"https://gitlab.com/itentialopensource/pre-built-automations/artifact-wizard/-/raw/release/2021.1/images/discovery.png\" alt=\"discovery\" width=\"400px\">\n</td></tr></table>\n\nNext, the catalogs will prompt you for artifact metadata and give you the opportunity to provide a short description, a README, license information, and a list of keywords (at least one keyword is required) relevant to the artifact. If no license is provided, the catalogs will bundle [Apache License Version 2](http://www.apache.org/licenses/LICENSE-2.0) by default. Refer to the [Contribution Guidelines](#contribution-guidelines) section regarding best practices and naming conventions.\n\nAt this current time, Artifact Wizard must perform a health check to gather module information in order to properly bundle the artifact. Hence, you will be prompted to perform the health check as an admin user. Of note, this step is skipped for Zero Touch mode.\n\n<!-- ![health check](https://gitlab.com/itentialopensource/pre-built-automations/artifact-wizard/-/raw/release/2021.1/images/healthcheck.png) -->\n<table><tr><td>\n<img src=\"https://gitlab.com/itentialopensource/pre-built-automations/artifact-wizard/-/raw/release/2021.1/images/healthcheck.png\" alt=\"health check\" width=\"600px\">\n</td></tr></table>\n\nWorkflow will then bundle all your dependencies, create a `package.json` file, and push the pre-built to a new repository on GitLab under our `staging` directory. Upon successful completion of the job, a link to the repository will be provided.\n\n<!-- ![view repo](https://gitlab.com/itentialopensource/pre-built-automations/artifact-wizard/-/raw/release/2021.1/images/view_repo.png) -->\n<table><tr><td>\n<img src=\"https://gitlab.com/itentialopensource/pre-built-automations/artifact-wizard/-/raw/release/2021.1/images/view_repo.png\" alt=\"view repo\" width=\"600px\">\n</td></tr></table>\n\nClick the provided link to direct your browser to the newly created repository. The repository UI will display, which should look similar to the following:\nNote, Itential Open Source staging folder is not public, and one may have no access to. Once published, every pre-built is taken out of staging onto a publicly availabel folder.\n\n<!-- ![new repo](https://gitlab.com/itentialopensource/pre-built-automations/artifact-wizard/-/raw/release/2021.1/images/repo.png) -->\n<table><tr><td>\n<img src=\"https://gitlab.com/itentialopensource/pre-built-automations/artifact-wizard/-/raw/release/2021.1/images/repo.png\" alt=\"new repo\" width=\"800px\">\n</td></tr></table>\n\nThe `bundles` directory contains all components of the automation that were exported with the pre-built.\n\n<!-- ![bundles](https://gitlab.com/itentialopensource/pre-built-automations/artifact-wizard/-/raw/release/2021.1/images/bundles.png) -->\n<table><tr><td>\n<img src=\"https://gitlab.com/itentialopensource/pre-built-automations/artifact-wizard/-/raw/release/2021.1/images/bundles.png\" alt=\"bundles\" width=\"800px\">\n</td></tr></table>\n\nFinally, press the **Continue** button to complete the job.\n\n**Congratulations on creating your very first pre-built, and thank you for contributing!** 🎉\n\n## Additional Information\n\nPlease use your Itential Service Desk account if support is needed when using the Artifact Wizard.\n"
}